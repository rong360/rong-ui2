(self.webpackChunkrong_ui2=self.webpackChunkrong_ui2||[]).push([[143],{7204:function(n,t,e){"use strict";var d=e(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=d(e(8128));e(7004);var a=function(n){n.directive("hljs",(function(n){var t=n.querySelectorAll("pre code");Array.prototype.forEach.call(t,o.default.highlightBlock)}))};t.default=a},3140:function(n,t,e){"use strict";var d=e(5318),o=d(e(538)),a=d(e(2537)),l=d(e(4673)),r=d(e(7204));e(9129),e(107),o.default.use(r.default),o.default.config.debug=!0,new o.default({router:a.default,render:function(n){return n(l.default)}}).$mount("#app")},2537:function(n,t,e){"use strict";var d=e(5318);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=d(e(538)),a=d(e(8345)),l=e(9455);o.default.use(a.default);var r=[];l.nav.forEach((function(n){n.children.forEach((function(n){var t=n.name,d=n.type;n.desc;r.push({path:"/".concat(t.toLowerCase()),name:t,component:{render:function(n){var o={},a=t.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();try{o="component"===d?e(1539)("./".concat(a,"/README.md")):e(1243)("./".concat(a,"/README.md"))}catch(n){o={default:'<div class="error-page">'.concat(n.message," <strong>in ").concat("component"===d?"/packages/":"/src/views/docs/","</div></strong>")}}return n("div",{class:{"markdown-body":!0},domProps:{innerHTML:o.default}})}}})}))})),r.push({path:"*",redirect:function(n){return{path:"/introduce"}}});var i=new a.default({routes:r});t.default=i},4293:function(n,t,e){"use strict";Object.defineProperty(t,"X",{value:!0}),t.Z=void 0;var d=e(9455),o={name:"app",data:function(){return{nav:d.nav,page:""}},mounted:function(){this.page=this.$route.name.toLowerCase()},beforeUpdate:function(){this.page=this.$route.name.toLowerCase()},computed:{pageUrl:function(){var n="";return n=location.pathname.indexOf("index.html")>-1?location.pathname.replace("index.html","demo.html"):location.pathname+"demo.html","".concat(location.origin+n,"#/").concat(this.page)}}};t.Z=o},389:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="actionsheet">ActionSheet</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>底部弹出动作菜单面板。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { ActionSheet } from &#39;rong-ui2&#39;;\n\nVue.use(ActionSheet)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-actionsheet v-model=&quot;showActionSheet&quot; title=&quot;标题&quot; :actions=&quot;actions&quot;  @on-select=&quot;handleSelect&quot; @on-close=&quot;handleClose&quot;&gt;&lt;/r-actionsheet&gt;\n</code></pre>\n<pre><code class="language-js">export default {\n  data () {\n    return {\n      actions: [\n        { name: &#39;选项一&#39;, color: &#39;red&#39; },\n        { name: &#39;选项二&#39;, disabled: true },\n        { name: &#39;选项三&#39; }\n      ],\n      showActionSheet: false\n    }\n  },\n  methods: {\n    handleSelect (item) {\n      this.showActionSheet = false\n    },\n    handleClose () {\n    }\n  }\n}\n</code></pre>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>default</td>\n<td>自定义面板的展示内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>v-model:show</td>\n<td>是否显示动作面板</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>actions</td>\n<td>面板选项列表</td>\n<td>array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>radius</td>\n<td>是否显示圆角</td>\n<td>boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>面板标题</td>\n<td>string</td>\n<td></td>\n</tr>\n<tr>\n<td>showCloseBtn</td>\n<td>是否显示右上角关闭按钮</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>showCancelBtn</td>\n<td>是否显示底部取消按钮</td>\n<td>boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>cancelBtnText</td>\n<td>底部取消按钮文案</td>\n<td>string</td>\n<td><code>取消</code></td>\n</tr>\n</tbody></table>\n<h3 id="actiions数据结构">actiions数据结构</h3>\n<table>\n<thead>\n<tr>\n<th>键名</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>name</td>\n<td>标题</td>\n<td>string</td>\n</tr>\n<tr>\n<td>color</td>\n<td>选项文字颜色</td>\n<td>string</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否为禁用状态</td>\n<td>boolean</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-select</td>\n<td>点击选项时触发，禁用或加载状态下不会触发</td>\n<td>(item, index）</td>\n</tr>\n<tr>\n<td>on-close</td>\n<td>页面关闭时触发</td>\n<td>-</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="action-sheet-demo">\n    <Titlebar theme="b"\n              @on-back="onBack">Action Sheet</Titlebar>\n    <div class="p-20">\n      <nav-item @on-click="showActionSheet = true">action sheet</nav-item>\n      <r-actionsheet v-model="showActionSheet"\n                    title="标题"\n                    :actions="actions"\n                    :show-close-btn="true"\n                    :radius="true"\n                    @on-select="handleSelect"\n                    @on-close="handleClose"></r-actionsheet>\n\n      <nav-item @on-click="showCustomActionSheet = true">自定义action sheet内容</nav-item>\n      <action-sheet v-model="showCustomActionSheet">\n        <p>1</p>\n        <p>2</p>\n        <p>3</p>\n        <p>4</p>\n        <p>5</p>\n        <p>6</p>\n        <p>7</p>\n        <p>8</p>\n      </action-sheet>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      message: \'\',\n      actions: [\n        { name: \'选项一\', color: \'red\' },\n        { name: \'选项二\', disabled: true },\n        { name: \'选项三\' }\n      ],\n      showActionSheet: false,\n      showCustomActionSheet: false\n    }\n  },\n  methods: {\n    handleSelect (item, index) {\n      this.message = item.name\n      this.showActionSheet = false\n    },\n    handleClose () {\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n</textarea>\n  </div>\n</details>\n'},82:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="button">Button</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>按钮用于触发一个操作，如提交表单。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件。</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Button } from &#39;rong-ui2&#39;;\n\nVue.use(Button)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-button&gt;提交&lt;/r-button&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="代码演示">代码演示</h2>\n<div class="r-doc-card">\n\n<h3 id="按钮类型">按钮类型</h3>\n<p>按钮支持 default、warning、disabled 三种种类型，默认为 default。</p>\n<pre><code class="language-html">&lt;r-button type=&quot;warning&quot;&gt;提交&lt;/r-button&gt;\n&lt;r-button type=&quot;disabled&quot;&gt;提交&lt;/r-button&gt;\n</code></pre>\n</div>\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th align="left">参数</th>\n<th align="left">说明</th>\n<th align="left">类型</th>\n<th align="left">可选值</th>\n<th align="left">默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left">type</td>\n<td align="left">按钮类型</td>\n<td align="left">string</td>\n<td align="left"><code>default</code> <code>warning</code> <code>disabled</code></td>\n<td align="left"><code>default</code></td>\n</tr>\n<tr>\n<td align="left">radius</td>\n<td align="left">按钮是否有圆角</td>\n<td align="left">boolean</td>\n<td align="left"></td>\n<td align="left">false</td>\n</tr>\n<tr>\n<td align="left">fill</td>\n<td align="left">背景是否填充</td>\n<td align="left">boolean</td>\n<td align="left"></td>\n<td align="left">true</td>\n</tr>\n<tr>\n<td align="left">className</td>\n<td align="left">自定义 CSS class</td>\n<td align="left">string</td>\n<td align="left"></td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left">style</td>\n<td align="left">自定义样式</td>\n<td align="left">CSSProperties</td>\n<td align="left"></td>\n<td align="left"></td>\n</tr>\n<tr>\n<td align="left">onClick</td>\n<td align="left">点击button回调</td>\n<td align="left">function</td>\n<td align="left"></td>\n<td align="left"></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="button-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Button</Titlebar>\n\n    <div class="title">default</div>\n    <r-button>提交</r-button>\n\n    <div class="title">空心默认圆角按钮（:fill="false" :radius="true"）</div>\n    <Button :fill="false"\n            :radius="true">提交</Button>\n\n    <div class="title">示警按钮（type="warning"）</div>\n    <Button type="warning">提交</Button>\n\n    <div class="title">空心示警按钮(type="warning" :fill="false" :radius="true")</div>\n    <Button type="warning"\n            :fill="false"\n            :radius="true">提交</Button>\n\n    <div class="title">不可用按钮（type="disabled"）</div>\n    <Button type="disabled">提交</Button>\n\n    <div class="title">不可用按钮（type="disabled" :fill="false" :radius="true"）</div>\n    <Button type="disabled"\n            :fill="false"\n            :radius="true">提交</Button>\n\n    <div class="title">自定义（type="dark-yellow", 样式表里定义.r--button-dark-yellow相关样式 ）</div>\n    <Button type="dark-yellow">提交2</Button>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.button-example {\n  .title {\n    font-size: 14px;\n    margin-top: 30px;\n  }\n}\n.r--button-dark-yellow {\n  width: 328px;\n  height: 40px;\n  line-height: 40px;\n  border-radius: 20px;\n  background: #494949;\n  background-image: linear-gradient(90deg, #ff9300 16%, #ff5a00 87%);\n  font-size: 18px;\n  color: #fff;\n  margin: 0 auto;\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},8499:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="checkbox-复选框">Checkbox 复选框</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>在一组备选项中进行多选。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Checkbox } from &#39;rong-ui2&#39;;\n\nVue.use(Checkbox)\n</code></pre>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">单个复选框，绑定到布尔值：\n&lt;Checkbox v-model=&quot;checked&quot;&gt;北京&lt;/Checkbox&gt;\n</code></pre>\n<pre><code class="language-html">多个复选框，绑定到同一个数组：\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;apple&quot;&gt;苹果&lt;/Checkbox&gt;\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;pear&quot;&gt;梨&lt;/Checkbox&gt;\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;banana&quot;&gt;香蕉&lt;/Checkbox&gt;\n</code></pre>\n</div>\n\n\n<h1 id="api">API</h1>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>checkedValue</td>\n<td>可以使用 v-model 双向绑定数据</td>\n<td><code>boolean</code> <code>array</code></td>\n<td><code>true</code> <code>false</code> <code>[]</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>value</td>\n<td>复选框的值</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>shape</td>\n<td>checkbox形状</td>\n<td>string</td>\n<td><code>square</code> <code>circle</code> <code>rect</code></td>\n<td><code>square</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-change</td>\n<td>点击checkbox回调函数</td>\n<td>event</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>checkbox标题</td>\n</tr>\n<tr>\n<td>prepend</td>\n<td>前置内容(v.1.1.4)</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="checkbox-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Checkbox</Titlebar>\n    <div class="fs-14">一，单个复选框，绑定到布尔值：</div>\n    <Checkbox v-model="checked" shape="circle">北京</Checkbox>\n    <div class="fs-14">{{checked}}</div>\n\n    <br><br>\n    <div class="fs-14">二，多个复选框，绑定到同一个数组：</div>\n    <Checkbox v-model="fruitList" value="apple">苹果</Checkbox>\n    <Checkbox v-model="fruitList" value="pear">梨</Checkbox>\n    <Checkbox v-model="fruitList" value="banana">香蕉</Checkbox>\n    <Checkbox v-model="fruitList" value="orange">橘子</Checkbox>\n    <div class="fs-14">{{fruitList}}</div>\n\n    <br>\n    <Checkbox v-model="fruitList" value="apple" shape="circle">苹果</Checkbox>\n    <Checkbox v-model="fruitList" value="pear" shape="circle" iconStyle="font-size: 25px; color: red">梨</Checkbox>\n    <Checkbox v-model="fruitList" value="banana" shape="circle" checkCircleTwoToneColor=\'red\'>香蕉</Checkbox>\n    <Checkbox v-model="fruitList" value="orange" shape="circle">橘子</Checkbox>\n    <div class="fs-14">{{fruitList}}</div>\n\n    <br>\n    <div class="fs-14">您需要的贷款额度（单选）</div>\n    <Checkbox v-model="loanLimitList" value="1" shape="rect" @on-change="changeLoanLimit(\'1\')">2万以下</Checkbox>\n    <Checkbox v-model="loanLimitList" value="2" shape="rect" @on-change="changeLoanLimit(\'2\')">2-5万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="3" shape="rect" @on-change="changeLoanLimit(\'3\')">5-10万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="4" shape="rect" @on-change="changeLoanLimit(\'4\')">10-50万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="5" shape="rect" @on-change="changeLoanLimit(\'5\')">50万以上</Checkbox>\n    <div class="fs-14">{{loanLimitList}}</div>\n\n    <br>\n    <div class="fs-14">选择您的资质, 提高贷款成功率（可多选）</div>\n    <Checkbox v-model="qualificationsList" value="1" shape="rect" @on-change="changeQualifications(\'1\')">有房</Checkbox>\n    <Checkbox v-model="qualificationsList" value="2" shape="rect" @on-change="changeQualifications(\'2\')">有车</Checkbox>\n    <Checkbox v-model="qualificationsList" value="3" shape="rect" @on-change="changeQualifications(\'3\')">有公积金</Checkbox>\n    <Checkbox v-model="qualificationsList" value="4" shape="rect" @on-change="changeQualifications(\'4\')">有社保</Checkbox>\n    <Checkbox v-model="qualificationsList" value="5" shape="rect" @on-change="changeQualifications(\'5\')">有保单</Checkbox>\n    <Checkbox v-model="qualificationsList" value="6" shape="rect" @on-change="changeQualifications(\'6\')">有企业</Checkbox>\n    <Checkbox v-model="qualificationsList" value="0" shape="rect" @on-change="changeQualifications(\'0\')">以上都无</Checkbox>\n    <div class="fs-14">{{qualificationsList}}</div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      checked: true,\n      fruitList: [\'apple\', \'pear\', \'banana\'],\n      loanLimitList: [],\n      qualificationsList: []\n    }\n  },\n  methods: {\n    changeLoanLimit (v) {\n      this.loanLimitList = [v]\n    },\n    changeQualifications (v) {\n      if (v == \'0\') {\n        this.qualificationsList = [\'0\']\n      } else {\n        let arr = this.qualificationsList\n        let index = arr.findIndex(item => item === \'0\')\n        index > -1 && arr.splice(index, 1)\n        this.qualificationsList = arr\n      }\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.checkbox-example {\n  .r--checkbox .r--icon {\n    color: #4080e8;\n    font-size: 16px;\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},681:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="datepicker-时间选择">Datepicker 时间选择</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>时间选择器，支持年月日、日月年、年月、日等维度。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { DatePicker } from &#39;rong-ui2&#39;;\n\nVue.use(DatePicker)\n</code></pre>\n</div>\n\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-datepicker v-bind=&#39;config1&#39; @onconfirm=&quot;birthDate&quot;&gt;&lt;/r-datepicker&gt;\n</code></pre>\n<pre><code class="language-js">...\ndata(){\n    return {\n        config: {\n            value: &#39;2022/10/22&#39;,\n            placeholder: &#39;请选择&#39;,\n            valueFormat: &#39;yyyy/mm/dd&#39;,\n            // textFormat: &#39;yyyy年mm月dd日&#39;,\n            textFormat (val) {\n                return `${val.year.text},${val.month.text.substr(0, 4)},${val.day.text}`\n            },\n            startYear: &#39;&#39;,\n            endYear: &#39;&#39;,\n            offsetYear: &#39;&#39;,\n            yearsLength: &#39;&#39;,\n            disabled: false,\n            language: &#39;en&#39;,\n            pickerFormatter: function (type, val) {\n                // if (type == &#39;year&#39;) {\n                //   return val + &#39;年&#39;\n                // } else if (type == &#39;month&#39;) {\n                //   return val + &#39;月&#39;\n                // } else if (type == &#39;day&#39;) {\n                //   return val + &#39;日&#39;\n                // }\n            },\n            pickerTitle: &#39;hello&#39;,\n            pickerCancelBtnText: &#39;cancel&#39;,\n            pickerConfirmBtnText: &#39;confirm&#39;,\n            columnsOrder: [&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]\n        }\n    }\n},\nmethods: {\n    doConfirm(date){\n        console.log(date);\n    }\n}\n</code></pre>\n</div>\n\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<p><font color=\'red\'>特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>默认显示日期</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>valueFormat</td>\n<td>value日期格式</td>\n<td>string, function</td>\n<td><code>yyyy</code> <code>yyyy/mm</code> <code>yyyy-mm-dd</code> <code>yyyy年</code> <code>yyyy年mm月dd日</code>等</td>\n<td><code>yyyy/mm/dd</code></td>\n</tr>\n<tr>\n<td>textFormat</td>\n<td>placeholder区域日期显示格式</td>\n<td>string, function</td>\n<td><code>yyyy</code> <code>yyyy/mm</code> <code>yyyy-mm-dd</code> <code>yyyy年</code> <code>yyyy年mm月dd日</code>等</td>\n<td><code>yyyy/mm/dd</code></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>日期选择提示词</td>\n<td>string</td>\n<td></td>\n<td><code>请选择日期</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>startYear</td>\n<td>起始年份</td>\n<td>string,number</td>\n<td></td>\n<td>this year</td>\n</tr>\n<tr>\n<td>endYear</td>\n<td>截止年份</td>\n<td>string,number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>offsetYear</td>\n<td>startYear的偏移量</td>\n<td>string,number</td>\n<td>负数、0、正数</td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>yearsLength</td>\n<td>年份跨度</td>\n<td>string,number</td>\n<td></td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td>columnsOrder</td>\n<td>年月日顺序</td>\n<td>array</td>\n<td></td>\n<td><code>[&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]</code></td>\n</tr>\n<tr>\n<td>language</td>\n<td>语言(月份可显示英文等)</td>\n<td>string</td>\n<td><code>zh</code> <code>en</code> <code>id</code></td>\n<td><code>zh</code></td>\n</tr>\n<tr>\n<td>pickerTitle</td>\n<td>picker标题</td>\n<td>string</td>\n<td></td>\n<td>``</td>\n</tr>\n<tr>\n<td>pickerCancelBtnText</td>\n<td>picker取消按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>pickerConfirmBtnText</td>\n<td>picker确定按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>确定</code></td>\n</tr>\n<tr>\n<td>pickerFormatter</td>\n<td>可设置picker上年月日单位等</td>\n<td>function</td>\n<td>回调参数(type, val)</td>\n<td>``</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>onconfirm</td>\n<td>键盘收起事件</td>\n<td>（{year: &quot;&quot;, month: &quot;&quot;, date: &quot;&quot;, value: &quot;&quot;}） - 年，月，日，选择值</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>日期后面可以通过slot插入icon等</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="datepicker-example">\n    <Titlebar theme="b"\n              @on-back="onBack">DatePicker</Titlebar>\n    <div class="fs-14">请选择以下信息：</div>\n    <div class="list">\n      <div class="item">\n        <div class="label">爸爸生日：</div>\n        <r-datepicker :value="config.value"\n                    :valueFormat="config.valueFormat"\n                    :textFormat="config.textFormat"\n                    :startYear="config.startYear"\n                    :endYear="config.endYear"\n                    :offsetYear="config.offsetYear"\n                    :yearsLength="config.yearsLength"\n                    :disabled="config.disabled"\n                    :language="config.language"\n                    :pickerFormatter="config.pickerFormatter"\n                    :pickerTitle="config.pickerTitle"\n                    :pickerCancelBtnText="config.pickerCancelBtnText"\n                    :pickerConfirmBtnText="config.pickerConfirmBtnText"\n                    :columnsOrder="config.columnsOrder"\n                    :placeholder="config.placeholder"\n                    @onconfirm="birthDate"></r-datepicker>\n      </div>\n    </div>\n\n    <div class="list">\n      <div class="item">\n        <div class="label">妈妈出生年份：</div>\n        <DatePicker v-bind=\'config1\'\n                    @onconfirm="birthDate"></DatePicker>\n      </div>\n    </div>\n\n    <div class="list">\n      <div class="item">\n        <div class="label">哥哥出生日期：</div>\n        <DatePicker v-bind=\'config2\'\n                    @onconfirm="birthDate"></DatePicker>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      config: {\n        value: \'2022/10/22\',\n        placeholder: \'请选择爸爸生日\',\n        valueFormat: \'yyyy/mm/dd\',\n        // textFormat: \'yyyy年mm月dd日\',\n        textFormat (val) {\n          return `${val.year.text},${val.month.text.substr(0, 4)},${val.day.text}`\n        },\n        startYear: \'\',\n        endYear: \'\',\n        offsetYear: \'-1\',\n        yearsLength: \'10\',\n        disabled: false,\n        language: \'zh\', // 中文 \'zh\'、 英文 \'en\'、 印尼 \'id\'\n        pickerFormatter: function (type, val) {\n          if (type == \'year\') {\n            return val + \'年\'\n          } else if (type == \'month\') {\n            return val + \'月\'\n          } else if (type == \'day\') {\n            return val + \'日\'\n          }\n        },\n        pickerTitle: \'hello\',\n        pickerCancelBtnText: \'cancel\',\n        pickerConfirmBtnText: \'confirm\',\n        columnsOrder: [\'year\', \'month\', \'day\']\n      },\n      config1: {\n        valueFormat: \'yyyy\',\n        textFormat: \'yyyy年\',\n        columnsOrder: [\'year\']\n      },\n      config2: {\n        value: \'2022/10\',\n        valueFormat: \'yyyy/mm\',\n        textFormat: \'yyyy年mm月\',\n        columnsOrder: [\'year\', \'month\']\n      }\n    }\n  },\n  methods: {\n    birthDate (date) {\n      console.log(date);\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.datepicker-example {\n  .list {\n    font-size: 14px;\n    .item {\n      display: flex;\n      margin-top: 20px;\n      align-items: center;\n      .label {\n        width: 120px;\n        text-align: right;\n      }\n      .r--datepicker {\n        padding: 10px;\n        border: 1px solid #efeff4;\n      }\n    }\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},281:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="dialog-弹框">Dialog 弹框</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>模态对话框，在浮层中显示，引导用户进行相关操作，支持图片以及单文件组件等对话框。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Dialog } from &#39;rong-ui2&#39;;\n\nVue.use(Dialog)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<h3 id="函数调用">函数调用</h3>\n<p>挂载在vue.prototype上，vue实例中，直接使用this.$dialog({options})使用。</p>\n<pre><code class="language-js">\nvar dialog = this.$dialog({\n    propsData: {\n        //标题\n        showTitle: true,\n        title: &#39;标题&#39;,\n        titleStyleObj: {color:&#39;green&#39;},\n    },\n    methods: {\n        //取消按钮\n        onCancel: function(){\n            this.remove();\n        },\n        //确认按钮\n        onConfirm: function(){\n            alert(&#39;点击了确认按钮&#39;);\n        }\n    }\n});\n</code></pre>\n<p>弹窗中插入组件 (v1.1.2版本开始 message支持Render 写法)</p>\n<pre><code>let RepaymentTip = resolve =&gt; resolve(require(&quot;./repaymentTip.vue&quot;))\nthis.$dialog({\n    propsData: {\n        // 内容(文本或自定义组件)\n        message: (h) =&gt; h(RepaymentTip, {props: { name: &#39;zyx&#39; }})\n    },\n    methods: {\n        onConfirm: function () {\n            this.remove();\n        }\n    }\n});\n------ ./repaymentTip.vue ------\n&lt;template&gt;\n    &lt;div&gt;\n        hello {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script type=&quot;text/javascript&quot;&gt;\n    export default {\n        props: [&#39;name&#39;]\n    }\n&lt;/script&gt;\n</code></pre>\n<p>or</p>\n<pre><code>this.$dialog({\n    propsData: {\n        message: (h) =&gt; h({\n          template: `&lt;div&gt; hello {{name}} &lt;/div&gt;`,\n          props: [&#39;name&#39;]\n        }, {props: { name: &#39;zyx&#39; }})\n    },\n    methods: {\n        onConfirm: function () {\n            this.remove();\n        }\n    }\n});\n</code></pre>\n<h3 id="template模板中插入dialog">template模板中插入Dialog</h3>\n<pre><code class="language-html">在template模板中使用时，可借助portal-vue插件，把Dialog显示在文档的任意位置。Dialog是否显示可通过v-model双向绑定，在回调函数中可通过第二个参数获得dialog实例关闭dialog\n// https://www.npmjs.com/package/portal-vue\n// https://portal-vue.linusb.org/api/portal.html\n&lt;template&gt;\n    &lt;div&gt;\n        &lt;portal to=&quot;modal&quot;&gt;\n            &lt;Dialog v-model=&quot;showDialog&quot; :showCancelBtn=&quot;false&quot; @on-confirm=&quot;onConfirm&quot; @on-cancel=&quot;onCancel&quot;&gt;\n                &lt;p&gt;test&lt;/p&gt;\n                &lt;div class=&quot;hasread&quot; @click=&quot;doRead&quot;&gt;我已经阅读 &lt;a href=&quot;javascript:;&quot;&gt;《用户知情书》&lt;/a&gt;&lt;/div&gt;\n            &lt;/Dialog&gt;\n        &lt;/portal&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\nonCancel (e, dialog) {\n  // this.showDialog = false\n  dialog.remove()\n},\n------ app.vue ------\n&lt;template&gt;\n  &lt;div id=&quot;app&quot;&gt;\n    &lt;router-view&gt;&lt;/router-view&gt;\n    &lt;portal-target name=&quot;modal&quot; multiple /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>\n<h4 id="dialog-拓展">dialog 拓展</h4>\n<pre><code class="language-html">1，this.$dialog.tip({ message: &#39;hello&#39;, confirmBtnText: &#39;Ok&#39;, onConfirm: function () { this.remove() } })\n2，this.$dialog.confirm({ message: &#39;hello&#39;, confirmBtnText: &#39;confirm&#39;, cancelBtnText: &#39;cancel&#39;, onConfirm: function () { }, onCancel: function () { this.remove() } })\n3，this.$dialog.select({ menus: [{title: &#39;操作1&#39;}, {title: &#39;操作2&#39;}], cancelBtnText: &#39;取消&#39;, onCancel: function () { this.remove() }, onSelect: function (obj) { console.log(obj); this.remove() } })\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<p>dialog实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted... <br/>\n弹窗大致由以下几部分元素：<code>弹窗标题</code>、<code>右上角close按钮</code>、<code>弹窗内容</code>、<code>弹窗cancel按钮</code>、<code>弹窗confirm按钮</code></p>\n<h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>showTitle</td>\n<td>是否显示标题</td>\n<td>boolean</td>\n<td><code>true</code> <code>false</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>标题内容</td>\n<td>string</td>\n<td></td>\n<td><code>&#39;&#39;</code></td>\n</tr>\n<tr>\n<td>titleStyleObj</td>\n<td>标题样式</td>\n<td>Object</td>\n<td>—</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>showCloseBtn</td>\n<td>是否显示关闭按钮</td>\n<td>boolean</td>\n<td>—</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>closeStyleObj</td>\n<td>标题样式</td>\n<td>Object</td>\n<td>—</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>message</td>\n<td>弹框内容（普通文本或简单html，v1.1.2支持render函数）</td>\n<td>string, function</td>\n<td>—</td>\n<td>&#39;&#39;</td>\n</tr>\n<tr>\n<td>contentStyleObj</td>\n<td>内容样式</td>\n<td>object</td>\n<td>—</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>showCancelBtn</td>\n<td>是否显示取消按钮</td>\n<td>boolean</td>\n<td>—</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>cancelBtnText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td>—</td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>cancelBtnStyleObj</td>\n<td>取消按钮样式</td>\n<td>object</td>\n<td>—</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>showConfirmBtn</td>\n<td>是否显示确认按钮</td>\n<td>boolean</td>\n<td>—</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>confirmBtnText</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td>—</td>\n<td><code>确认</code></td>\n</tr>\n<tr>\n<td>confirmBtnStyleObj</td>\n<td>确认按钮样式</td>\n<td>object</td>\n<td>—</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>CliperStyleObj</td>\n<td>遮罩样式</td>\n<td>object</td>\n<td>—</td>\n<td></td>\n</tr>\n<tr>\n<td>dlgStyleObj</td>\n<td>弹框样式</td>\n<td>object</td>\n<td>—</td>\n<td></td>\n</tr>\n<tr>\n<td>position</td>\n<td>弹框位置</td>\n<td>object</td>\n<td>{x: &#39;left/center/right&#39;,y: &#39;top/center/bottom&#39;}</td>\n<td>{x: &#39;center&#39;, y: &#39;center&#39;}</td>\n</tr>\n<tr>\n<td>removeDialogOnHashChange</td>\n<td>hash变化时是否移除dialog</td>\n<td>boolean</td>\n<td>—</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>className(v1.1.3)</td>\n<td>自定义样式</td>\n<td>string</td>\n<td>—</td>\n<td><code>&#39;&#39;</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-cancel</td>\n<td>取消操作</td>\n<td>—</td>\n</tr>\n<tr>\n<td>on-confirm</td>\n<td>确认操作</td>\n<td>—</td>\n</tr>\n<tr>\n<td>on-close</td>\n<td>关闭点击操作</td>\n<td>—</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>弹框内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="特别提示">特别提示</h3>\n<p>弹框里插入滚动区域时，需在滚动区域上添加&quot;scroll-area&quot;样式，如:</p>\n<pre><code class="language-html">&lt;div class=&quot;scroll-area&quot;&gt;&lt;/div&gt;\n</code></pre>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="r-demo dialog">\n    <Titlebar theme="b"\n              @on-back="onBack">Dialog</Titlebar>\n    <div class="p-20">\n      <nav-item class="item"\n                @on-click="showDialog1">常规</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog2">所有配置项</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog3">配置title</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog4">配置右上角关闭按钮</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog5">自定义内容(Render函数)</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog6">配置btn</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog7">宽度+位置变化</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog8">this.$dialog.tip</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog9">this.$dialog.confirm</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog10">this.$dialog.select</nav-item>\n      <nav-item class="item"\n                @on-click="showDialog11">模板方式插入Dialog\n        <Dialog v-model="showDlg11"\n                @on-cancel="onCancelDialog11"\n                @on-mask="onMaskDialog11">\n          <nav-item style="text-align: center; padding: 50px 0">hello</nav-item>\n        </Dialog>\n      </nav-item>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      showDlg11: false\n    }\n  },\n  methods: {\n    // 常规\n    showDialog1 () {\n      const self = this;\n      this.$dialog({\n        propsData: {\n          message: \'生如夏花之绚烂，死如秋叶之静美<br>泰戈尔《生如夏花》\'\n        },\n        methods: {\n          onCancel () {\n            this.remove();\n          },\n          onConfirm () {\n            self.$toast(\'这是点击确认按钮的自定义回调\');\n            this.remove();\n          }\n        }\n      });\n    },\n    // 所有配置项\n    showDialog2 () {\n      const self = this;\n      this.$dialog({\n        propsData: {\n          // 标题\n          showTitle: true,\n          title: \'标题\',\n          titleStyleObj: { color: \'green\' },\n          // 右上角关闭按钮\n          showCloseBtn: true,\n          // Icon\n          showIcon: true,\n          icon: \'beiju\',\n          // 内容(普通文本或简单html)\n          message: \'泰戈尔\',\n          contentStyleObj: { fontSize: \'30px\' },\n          // 取消按钮\n          cancelBtnText: "取消",\n          showCancelBtn: true,\n          cancelBtnStyleObj: { color: \'white\', background: \'#4080e8\' },\n          // 确认按钮\n          confirmBtnText: "确认",\n          showConfirmBtn: true,\n          confirmBtnStyleObj: { color: \'white\', background: \'#4080e8\' },\n          // 遮罩层\n          CliperStyleObj: { background: \'rgba(14, 14, 14, 0.5)\' },\n          // dialog框\n          dlgStyleObj: { background: \'#fff\', width: \'15rem\' },\n          // 动画\n          animate: true,\n          // 显示位置\n          position: { x: \'center\', y: \'center\' }\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            self.$toast(\'这是点击确认按钮的自定义回调\');\n            this.remove();\n          },\n          // 右上角关闭按钮\n          onClose: function () {\n            self.$toast(\'这是点击关闭按钮的自定义回调\');\n            this.remove();\n          },\n          // 遮罩层\n          onMask: function () {\n            this.remove()\n          },\n          // dialog 内容区域\n          onDlg () {\n            this.resetPos()\n          }\n        }\n      });\n    },\n    // 配置title\n    showDialog3 () {\n      this.$dialog({\n        propsData: {\n          // 标题\n          showTitle: true,\n          title: \'飞鸟集\',\n          message: "当你为错过太阳而哭泣的时候，你也要再错过群星了。",\n          titleStyleObj: { color: \'green\' }\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            this.remove();\n          }\n        }\n      });\n    },\n    // 配置右上角关闭按钮\n    showDialog4 () {\n      this.$dialog({\n        propsData: {\n          // 右上角关闭按钮\n          showCloseBtn: true,\n          // 内容(普通文本或简单html)\n          message: \'<div style="padding: 30px 0">我们把世界看错，反说它欺骗了我们。</div>\'\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            this.remove();\n          },\n          // 右上角关闭按钮\n          onClose: function () {\n            this.remove();\n          }\n        }\n      });\n    },\n    // 自定义内容\n    showDialog5 () {\n      let self = this\n      let RepaymentTip = resolve => resolve(require("./repaymentTip.vue"))\n      this.$dialog({\n        propsData: {\n          className: \'custom-tip\',\n          // 内容(文本或自定义组件)\n          message: (h) => h(RepaymentTip, { props: { name: \'zyx\' } })\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            self.$toast(\'这是点击确认按钮的自定义回调\');\n            this.remove();\n          }\n        }\n      });\n    },\n    // 配置btn\n    showDialog6 () {\n      let self = this\n      this.$dialog({\n        propsData: {\n          // 内容(普通文本或简单html)\n          message: \'眼睛为她下着雨，心却为她打着伞，这就是爱情\',\n          contentStyleObj: { fontSize: \'24px\', color: "#4080e8" },\n          // 取消按钮\n          cancelBtnText: "取消",\n          showCancelBtn: true,\n          cancelBtnStyleObj: { color: \'white\', background: \'#4080e8\' },\n          // 确认按钮\n          confirmBtnText: "已阅",\n          showConfirmBtn: true,\n          confirmBtnStyleObj: { color: \'white\', background: \'#4080e8\' }\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            self.$toast(\'这是点击确认按钮的自定义回调\');\n            this.remove();\n          }\n        }\n      });\n    },\n    // 配置宽度+位置变化\n    showDialog7 () {\n      this.$dialog({\n        propsData: {\n          // 内容(普通文本或简单html)\n          message: \'Eyes are raining for her,heart is holding umbrella for her,this is love.\',\n          // dialog框\n          dlgStyleObj: { width: \'100%\', borderRadius: 0 },\n          // 显示位置\n          position: { x: \'center\', y: \'bottom\' }\n        },\n        methods: {\n          // 取消按钮\n          onCancel: function () {\n            this.remove();\n          },\n          // 确认按钮\n          onConfirm: function () {\n            this.remove();\n          }\n        }\n      });\n    },\n    // dialog拓展 - tip\n    showDialog8 () {\n      this.$dialog.tip({ message: \'hello\', confirmBtnText: \'Ok\', onConfirm: function () { this.remove() } })\n    },\n    // dialog拓展 - confirm\n    showDialog9 () {\n      this.$dialog.confirm({ message: \'hello\', confirmBtnText: \'confirm\', cancelBtnText: \'cancel\', onConfirm: function () { }, onCancel: function () { this.remove() } })\n    },\n    // dialog拓展 - select\n    showDialog10 () {\n      this.$dialog.select({ menus: [{ title: \'操作1\' }, { title: \'操作2\' }], cancelBtnText: \'取消\', onCancel: function () { this.remove() }, onSelect: function (obj) { console.log(obj); this.remove() }, onMask: function () { this.remove() } })\n    },\n    showDialog11 () {\n      this.showDlg11 = this.true\n    },\n    onCancelDialog11 (e, dialog) {\n      // this.showDlg11 = false\n      dialog.remove()\n    },\n    onMaskDialog11 (e, dialog) {\n      dialog.remove()\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n</style>\n</textarea>\n  </div>\n</details>\n'},5984:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="flexfixed-flex布局">FlexFixed (flex布局)</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>header和footer可以固定展示，不随页面滚动。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { FlexFixed } from &#39;rong-ui2&#39;;\n\nVue.use(FlexFixed)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;template&gt;\n  &lt;r-flexfixed @on-scroll=&quot;scroll&quot; @on-scroll-debounce=&quot;scrollDebounce&quot;&gt;\n    &lt;Titlebar slot=&quot;header&quot;&gt;标题&lt;/Titlebar&gt;\n    &lt;p&gt;content 1&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 2&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 3&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 4&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 5&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 6&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 7&lt;/p&gt;\n    &lt;p&gt;&lt;/p&gt;\n    &lt;Button slot=&quot;footer&quot;&gt;下一步&lt;/Button&gt;\n  &lt;/r-flexfixed&gt;\n&lt;/template&gt;\n</code></pre>\n<pre><code class="language-js">  methods: {\n    scroll ({scrollTop, maxScrollTop, direction}) {\n      if( (maxScrollTop-scrollTop) &lt; 10 ){\n          console.log(&#39;滚动底啦~&#39;)\n      }\n    },\n    scrollDebounce ({scrollTop, maxScrollTop, direction}) {\n      if( (maxScrollTop-scrollTop) &lt; 10 ){\n          console.log(&#39;滚动底啦~&#39;)\n      }\n    }\n  }\n</code></pre>\n</div>\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>hideFooterOnKeyboardShow</td>\n<td>键盘弹起时隐藏footer</td>\n<td>boolean</td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>useFixed(v1.2.3)</td>\n<td>header、footer采用position: fixed方式固定。滚动区域为整个屏幕</td>\n<td>boolean</td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>滚动区域</td>\n</tr>\n<tr>\n<td>header</td>\n<td>头部</td>\n</tr>\n<tr>\n<td>footer</td>\n<td>底部</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-scroll</td>\n<td>滚动事件</td>\n<td>({scrollTop, maxScrollTop, direction}）</td>\n</tr>\n<tr>\n<td>on-scroll-debounce</td>\n<td>滚动事件</td>\n<td>({scrollTop, maxScrollTop, direction}）</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="特别提示">特别提示</h3>\n<p>嵌套overflow-x:scroll 或 overflow-y:scroll滚动元素时需在滚动元素上添加scroll-area样式</p>\n<pre><code class="language-html">如&lt;div style=&quot;overflow-x:scroll&quot; class=&quot;scroll-area&quot;&gt;&lt;/div&gt;\n</code></pre>\n</div>\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <r-flexfixed :hideFooterOnKeyboardShow="true"\n             :useFixed="true"\n             class="flexfixed-page"\n             @on-scroll="onScroll"\n             @on-scroll-debounce="onScrollDebounce">\n    <Titlebar :theme="theme"\n              slot="header"\n              @on-back="onBack">\n      FlexFixed\n      <div style="position:fixed; top:49px; right:0; text-align: left; padding: 10px; font-size: 14px; line-height: 24px; background-color: rgba(0, 0, 0, 0.7)">\n        <p>on-scroll</p>\n        <p>scrollTop：{{scrollInfo.scrollTop}}</p>\n        <p>maxScrollTop：{{scrollInfo.maxScrollTop}}</p>\n        <p>direction：{{scrollInfo.direction}}</p>\n        <br>\n        <p>on-scroll-debounce</p>\n        <p>scrollTop：{{scrollInfo2.scrollTop}}</p>\n        <p>maxScrollTop：{{scrollInfo2.maxScrollTop}}</p>\n        <p>direction：{{scrollInfo2.direction}}</p>\n      </div>\n    </Titlebar>\n    <div>\n      <p>心存美好，则无可恼之事；心存善良，则无可恨之人；心若简单，世间纷扰皆成空</p>\n      <p v-for="(item, index) in list" :key="index">{{item}}</p>\n      <p><input type="text"></p>\n      <p>如果有缘、错过了还会重来，如果无缘、相遇了也会离开；聚有聚的理由、离有离的借口；人生没有如果、只有后果和结果！</p>\n    </div>\n    <Button slot="footer">提交</Button>\n  </r-flexfixed>\n</template>\n\n<script>\nexport default {\n  data () {\n    let list = []\n    for (let i = 0; i < 100; i++) {\n      list.push(Math.random())\n    }\n    return {\n      list: list,\n      scrollInfo: {},\n      scrollInfo2: {},\n      direction: \'\',\n      theme: \'\'\n    }\n  },\n  methods: {\n    onScroll (scrollInfo) {\n      this.scrollInfo = scrollInfo\n      this.theme = scrollInfo.scrollTop > 0 ? \'e\' : \'\'\n    },\n    onScrollDebounce (scrollInfo) {\n      this.scrollInfo2 = scrollInfo\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.flexfixed-page .main-wrap {\n  background: url("https://img1.baidu.com/it/u=2098938867,1688028566&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500")\n    no-repeat;\n  background-size: contain;\n}\n</style>\n</textarea>\n  </div>\n</details>\n\n\n'},3700:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="form-表单">Form 表单</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。</p>\n</div>\n\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-form&gt;\n  &lt;r-input type=&quot;text&quot; name=&quot;username&quot; maxlength=&quot;6&quot; v-model=&quot;userName&quot;&gt;&lt;/r-input&gt;\n  &lt;r-input v-bind=&quot;user&quot; v-model=&quot;user.value&quot;&gt;&lt;/r-input&gt;\n  &lt;r-select v-bind=&quot;email&quot; v-model=&quot;email.value&quot;&gt;&lt;/r-select&gt;\n&lt;/r-form&gt;\n</code></pre>\n<pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      userName: &#39;zyx&#39;,\n      user: {\n        &quot;title&quot;: &quot;本人姓名&quot;,\n        &quot;placeholder&quot;: &quot;&quot;,\n        &quot;name&quot;: &quot;bureau_user_name&quot;,\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;maxlength&quot;: 6\n      },\n      email: {\n        &quot;title&quot;: &quot;邮箱&quot;,\n        &quot;name&quot;: &quot;email&quot;,\n        &quot;type&quot;: &quot;email&quot;,\n        &quot;data&quot;: &quot;&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;emailList&quot;: [\n          &quot;qq.com&quot;,\n          &quot;sina.com&quot;,\n          &quot;sohu.com&quot;,\n          &quot;163.com&quot;,\n          &quot;foxmail.com&quot;,\n          &quot;gmail.com&quot;,\n          &quot;rong360.com&quot;,\n          &quot;edu.cn&quot;,\n          &quot;outlook.com&quot;,\n          &quot;vip.qq.com&quot;,\n          &quot;126.com&quot;\n        ],\n        &quot;rules&quot;: [{\n          &quot;required&quot;: true,\n          &quot;message&quot;: &quot;邮箱不能为空&quot;,\n          &quot;trigger&quot;: &quot;blur&quot;\n        },\n        {\n          &quot;type&quot;: &quot;email&quot;,\n          &quot;message&quot;: &quot;邮箱格式不正确&quot;,\n          &quot;trigger&quot;: &quot;blur&quot;\n        }]\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>\n</div>\n\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>placeholder</td>\n<td>占位文本</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-width</td>\n<td>lebel标签宽度</td>\n<td>string</td>\n<td>如 <code>150px</code> <code>10rem</code>等</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-position</td>\n<td>label标签对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>right</code> <code>top</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>text-position</td>\n<td>input文字对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>center</code> <code>right</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>input-clear-style</td>\n<td>清空按钮样式</td>\n<td>object</td>\n<td>-</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>select-arrow-style</td>\n<td>清空按钮样式</td>\n<td>object</td>\n<td>-</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>select-cancel-btn-text</td>\n<td>select取消按钮文案</td>\n<td>string</td>\n<td>-</td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>select-confirm-btn-text</td>\n<td>select确定按钮文案</td>\n<td>string</td>\n<td>-</td>\n<td><code>确定</code></td>\n</tr>\n<tr>\n<td>date-picker-cancel-btn-text</td>\n<td>date-picker取消按钮文案</td>\n<td>string</td>\n<td>-</td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>date-picker-confirm-btn-text</td>\n<td>date-picker确定按钮文案</td>\n<td>string</td>\n<td>-</td>\n<td><code>确定</code></td>\n</tr>\n<tr>\n<td>show-message</td>\n<td>是否显示错误信息</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>title添加css效果</td>\n<td>string</td>\n<td><code>default</code> <code>to-top</code></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>error-at-placeholder</td>\n<td>error显示在placeholder位置</td>\n<td>boolean</td>\n<td>-</td>\n<td>false</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-iscompleted</td>\n<td>表单是否填完</td>\n<td>boolean</td>\n</tr>\n</tbody></table>\n<h3 id="methods">methods</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>validate</td>\n<td>校验所有表单项</td>\n<td>（result, message）</td>\n</tr>\n<tr>\n<td>validateOneByOne</td>\n<td>逐项校验表单项</td>\n<td>（result, message）</td>\n</tr>\n<tr>\n<td>getValue</td>\n<td>获取当前组件表单数据</td>\n<td>{name: name, value: value}</td>\n</tr>\n<tr>\n<td>getSerializeValue</td>\n<td>获取当前组件表单数据</td>\n<td>a=0&amp;b=1</td>\n</tr>\n<tr>\n<td>getObjectValue</td>\n<td>获取当前组件表单数据</td>\n<td>{a: 0, b: 1}</td>\n</tr>\n<tr>\n<td>resetFields</td>\n<td>重置表单</td>\n<td>-</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="form特殊效果">Form特殊效果</h3>\n<ul>\n<li><a href="#/formdynamicregistration">Form表单动态注册效果</a></li>\n<li><a href="#/formcss">Form表单添加css效果</a></div></li>\n</ul>\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="form-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Form</Titlebar>\n    <r-form :select-arrow-style="{color: \'#666\', width: \'0.32rem\'}"\n          :input-clear-style="{color: \'#C8C7CC\'}"\n          select-cancel-btn-text="cancel"\n          select-confirm-btn-text="confirm"\n          @on-iscompleted="setIsCompleted"\n          text-position="left"\n          label-position="left"\n          label-width="4.48rem"\n          placeholder="请输入"\n          select-placeholder="请选择"\n          ref="form">\n      <r-input :title="user.title"\n             :name="user.name"\n             :maxlength="user.maxlength"\n             :rules="user.rules"\n             v-model="user.value"></r-input>\n      <r-input v-bind="age"\n             v-model="age.value"></r-input>\n      <Input v-bind="amount"\n             v-model="amount.value"\n             @on-input="handleInputAmount"></Input>\n      <Input v-bind="phone"\n             v-model="phone.value"></Input>\n      <Input v-bind="email"\n             v-model="email.value"></Input>\n      <Input v-bind="IDCard"\n             v-model="IDCard.value"></Input>\n      <Select :title="loanTerm.title"\n              :name="loanTerm.name"\n              :data="loanTerm.data"\n              :rules="loanTerm.rules"\n              v-model="loanTerm.value"></Select>\n      <Select2 v-bind="contacts"\n               v-model="contacts.value"></Select2>\n      <Select2 v-bind="contacts2"\n               v-model="contacts2.value"></Select2>\n      <Select3 v-bind="shebao"\n               v-model="shebao.value"\n               ref="select1"></Select3>\n      <SelectDate v-bind="birthday"\n                  v-model="birthday.value"></SelectDate>\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn"\n             @click="doReset">重设</div>\n      </div>\n    </r-form>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      user: {\n        "type": "text",\n        "title": "本人姓名",\n        "name": "bureau_user_name",\n        "value": "",\n        "placeholder": "",\n        "readonly": 0,\n        "maxlength": 6,\n        "rules": [{\n          "required": true,\n          "message": "姓名不能为空2",\n          "trigger": "blur"\n        }, {\n          validator (rule, value, callback) {\n            if (value.length < 3) {\n              return new Error(\'姓名最少三个字\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        }]\n      },\n      age: {\n        "type": "number",\n        "title": "年龄",\n        "name": "age",\n        "value": "23",\n        "placeholder": "",\n        "fixed": 0,\n        "unit": "",\n        "readonly": 0,\n        "maxlength": 3\n      },\n      amount: {\n        "type": "number",\n        "title": "申请金额",\n        "name": "application_amount",\n        "value": "10000.00",\n        "fixed": 2,\n        "placeholder": "",\n        "unit": "",\n        "readonly": 0,\n        "maxlength": 8\n      },\n      phone: {\n        "type": "tel",\n        "title": "手机号码",\n        "name": "phone_number",\n        "value": "13122222222",\n        "unit": "",\n        "placeholder": "",\n        "readonly": 0,\n        "maxlength": 11\n      },\n      email: {\n        "type": "email",\n        "title": "邮箱",\n        "name": "email",\n        "value": "test@qq.com",\n        "readonly": 0,\n        "placeholder": "",\n        "emailList": [\n          "qq.com",\n          "sina.com",\n          "sohu.com",\n          "163.com",\n          "foxmail.com",\n          "gmail.com",\n          "rong360.com",\n          "edu.cn",\n          "outlook.com",\n          "vip.qq.com",\n          "126.com"\n        ],\n        "rules": [{\n          "required": true,\n          "message": "邮箱不能为空",\n          "trigger": "blur"\n        },\n        {\n          "type": "email",\n          "message": "邮箱格式不正确",\n          "trigger": "blur"\n        }]\n      },\n      IDCard: {\n        "type": "IDCard",\n        "title": "本人身份证号码",\n        "name": "user_id",\n        "value": "110101199003079614",\n        "placeholder": "",\n        "readonly": 0\n      },\n      shebao: {\n        "rely_policy_id": 0,\n        "id": "635",\n        "category_id": "1",\n        "title": "本地公积金",\n        "var_name": "user_social_security",\n        "type": "2",\n        "verify_type": "0",\n        "textPosition": \'right\',\n        "data": [{\n          "value": "1",\n          "text": "有",\n          "rely": []\n        }, {\n          "value": "2",\n          "text": "无",\n          "rely": []\n        }],\n        "unit": "",\n        "material_type": "101",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0\n      },\n      loanTerm: {\n        title: "贷款期限",\n        name: "loan_term",\n        value: \'\',\n        data: [{\n          text: "1个月",\n          value: "1"\n        }, {\n          text: "2个月",\n          value: \'2\'\n\n        }, {\n          text: "36个月",\n          value: "36"\n        }, {\n          text: "自己输入",\n          value: "0",\n          children: [{\n            componentType: \'Input\',\n            type: "number",\n            title: "输入您的贷款期限",\n            name: "m_term",\n            value: "",\n            unit: "个月",\n            placeholder: "请输入您期望的贷款期限",\n            onInput: (e, component) => {\n              let value = e.target.value\n              if (value > 12) {\n                component.setCurrentValue(12)\n                component.validateState = \'error\'\n                component.validateMessage = \'贷款期限最长12个月，以为您变更为12个月\'\n              }\n            },\n            rules: [{\n              validator (rule, value, callback, source, options) {\n                let { component } = options\n                if (value === \'\') {\n                  return new Error(component.title + \'不能为空\')\n                } else if (value > 12) {\n                  // component.setCurrentValue(12, {validateDisabled: true})\n                  // return new Error(\'贷款期限最长12个月，以为您变更为12个月\')\n                }\n                callback()\n              },\n              trigger: \'blur\'\n            }]\n          }]\n        }],\n        rules: [{\n          required: true,\n          message: \'贷款期限不能为空\'\n        }, {\n          validator (rule, value, callback, source, options) {\n            if (value == 1) {\n              return new Error(\'目前暂不支持1个月的贷款，请选择贷款期限\')\n            }\n            callback()\n          }\n        }]\n      },\n      contacts: {\n        title: "联系人",\n        name: "contacts",\n        value: \'\',\n        data: [{\n          text: "父母",\n          value: "1"\n        }, {\n          text: "配偶",\n          value: \'2\'\n\n        }, {\n          text: "子女",\n          value: "3"\n        }, {\n          text: "兄弟姐妹",\n          value: "4"\n        }]\n      },\n      contacts2: {\n        title: "联系人2",\n        name: "contacts2",\n        value: \'\',\n        data: [{\n          text: "父母",\n          value: "1"\n        }, {\n          text: "配偶",\n          value: \'2\'\n\n        }, {\n          text: "子女",\n          value: "3"\n        }, {\n          text: "兄弟姐妹",\n          value: "4"\n        }, {\n          text: "朋友",\n          value: "5"\n        }, {\n          text: "同学",\n          value: "6"\n        }, {\n          text: "老乡",\n          value: "7"\n        }, {\n          text: "战友",\n          value: "9"\n        }, {\n          text: "车友",\n          value: "10"\n        }]\n      },\n      birthday: {\n        title: \'现单位工作年限(年)\',\n        name: \'birthday\',\n        value: \'\',\n        valueFormat: \'yyyy/mm/dd\',\n        textFormat: \'yyyy年mm月dd日\'\n      },\n      fields: [],\n      isCompleted: false\n    }\n  },\n  // computed: {\n  //   isCompleted () {\n  //     return this.fields.every(field => {\n  //       if (field.fieldRules.length) {\n  //         return field.currentValue != \'\'\n  //       } else {\n  //         return true\n  //       }\n  //     })\n  //   }\n  // },\n  mounted () {\n    this.fields = this.$refs.form.fields\n  },\n  methods: {\n    handleInputAmount (e, component) {\n      let value = e.target.value\n      if (value > 10000) {\n        component.setCurrentValue(10000)\n        component.validateState = \'error\'\n        component.validateMessage = \'最大申请金额为10000元，已为你自动变更为10000元\'\n      }\n    },\n    doSubmit () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.join(\'<br/>\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    doSubmit2 () {\n      this.$refs.form.validateOneByOne((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    setIsCompleted (value) {\n      this.isCompleted = value\n    },\n    doReset () {\n      this.$refs.form.resetFields()\n    },\n    onEnter (e) {\n      console.log(e.target.value)\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.btn-wrap {\n  display: flex;\n  .btn {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    flex: 1;\n    margin: 10px;\n    padding: 10px 0;\n    text-align: center;\n    background-color: darkcyan;\n    color: #fff;\n    font-size: 12px;\n    &.disabled {\n      background-color: gray;\n    }\n  }\n}\n.form-example {\n  .r--form {\n    padding: 0 15px;\n  }\n  .result {\n    font-size: 14px;\n    color: #333333;\n    padding: 10px;\n    background-color: lightgray;\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},7866:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="input-输入框">Input 输入框</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用户可以在文本框内输入文字、整数、浮点、邮箱、身份证、手机号等类型。</p>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Input } from &#39;rong-ui2&#39;;\n\nVue.use(Input)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-input type=&quot;text&quot; name=&quot;username&quot; maxlength=&quot;6&quot; v-model=&quot;userName&quot;&gt;&lt;/r-input&gt;\n&lt;r-input v-bind=&quot;user&quot; v-model=&quot;user.value&quot;&gt;&lt;/r-input&gt;\n</code></pre>\n<pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      userName: &#39;zyx&#39;,\n      user: {\n        &quot;title&quot;: &quot;本人姓名&quot;,\n        &quot;placeholder&quot;: &quot;&quot;,\n        &quot;name&quot;: &quot;bureau_user_name&quot;,\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;maxlength&quot;: 6\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">props</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>placeholder</td>\n<td>占位文本</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-width</td>\n<td>lebel标签宽度</td>\n<td>string</td>\n<td>如 <code>150px</code> <code>10rem</code>等</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-position</td>\n<td>label标签对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>right</code> <code>top</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>text-position</td>\n<td>input文字对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>center</code> <code>right</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>input-clear-style</td>\n<td>清空按钮样式</td>\n<td>object</td>\n<td>-</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>show-message</td>\n<td>是否显示错误信息</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>required（v1.1.3）</td>\n<td>是否必填</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>className（v1.1.3）</td>\n<td>自定义class</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p><font color=\'red\'>特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type</td>\n<td>表单类型</td>\n<td>string</td>\n<td><code>text</code> <code>number</code> <code>tel</code> <code>email</code> <code>IDCard</code></td>\n<td><code>text</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>表单label</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>表单name</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>默认值</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>输入框提示文案</td>\n<td>string</td>\n<td></td>\n<td>``</td>\n</tr>\n<tr>\n<td>maxlength</td>\n<td>输入框最大输入长度</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>fixed</td>\n<td>保留几位小数</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>输入框是否禁用</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>readonly</td>\n<td>输入框是否只读</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>unit</td>\n<td>输入项单位</td>\n<td>string</td>\n<td></td>\n<td><code>&quot;&quot;</code></td>\n</tr>\n<tr>\n<td>rules</td>\n<td>类iview风格的校验规则</td>\n<td>array</td>\n<td></td>\n<td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td>\n</tr>\n<tr>\n<td>mode</td>\n<td>title添加css效果</td>\n<td>string</td>\n<td><code>default</code> <code>to-top</code></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>error-at-placeholder</td>\n<td>error显示在placeholder位置</td>\n<td>boolean</td>\n<td>-</td>\n<td>false</td>\n</tr>\n<tr>\n<td>required（v1.1.3）</td>\n<td>是否必填</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>className（v1.1.3）</td>\n<td>自定义class</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>emailList（v1.1.5）</td>\n<td>邮件后缀列表</td>\n<td>array</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>clearable（v1.2.2）</td>\n<td>是否显示清空按钮</td>\n<td>Boolean</td>\n<td>true</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onInput（v1.2.2）</td>\n<td>input回调</td>\n<td>function</td>\n<td>(e, component)</td>\n<td>-</td>\n</tr>\n<tr>\n<td>onBlur（v1.2.2）</td>\n<td>blur回调</td>\n<td>function</td>\n<td>(e, component)</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<pre><code>特别说明，rules校验规则文档详见https://www.npmjs.com/package/async-validator\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-input</td>\n<td>输入框输入事件</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-change</td>\n<td>输入变化</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-focus</td>\n<td>聚焦</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-blur</td>\n<td>失焦</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-enter</td>\n<td>回车键</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-clear</td>\n<td>清空输入时触发</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-keyup</td>\n<td>keyup</td>\n<td>event</td>\n</tr>\n<tr>\n<td>on-keydown</td>\n<td>keydown</td>\n<td>event</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="methods">methods</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getValue</td>\n<td>获取当前组件表单数据</td>\n<td></td>\n<td>{name: name, value: value}</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>prepend</td>\n<td>前置内容</td>\n</tr>\n<tr>\n<td>append</td>\n<td>后置内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="input-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Input</Titlebar>\n\n    <r-input :title="user.title"\n           :name="user.name"\n           :type="user.type"\n           :rules="user.rules"\n           :showEdit="false"\n           maxlength="6"\n           v-model="user.value"></r-input>\n\n    <Input v-bind="age"\n           v-model="age.value"></Input>\n\n    <Input v-bind="amount"\n           v-model="amount.value"\n           @on-input="handleInputAmount"></Input>\n\n    <Input v-bind="phone"\n           v-model="phone.value"></Input>\n    <Input v-bind="OTP"\n           v-model="OTP.value"><span slot="append"\n          style="display: inline-block; border: 1px solid #bebebe; font-size: 0.74667rem; padding: .1rem .3rem; border-radius: 1rem">Get OTP code</span></Input>\n\n    <Input v-bind="email"\n           v-model="email.value"></Input>\n\n    <Input v-bind="IDCard"\n           v-model="IDCard.value"></Input>\n\n    <div style="background: lightgray">\n      <p></p>\n      <Input v-bind="user"\n             label-position=\'right\'\n             label-width=\'150px\'\n             text-position="right"\n             v-model="user.value"></Input>\n      <Input v-bind="age"\n             label-position=\'right\'\n             label-width=\'150px\'\n             v-model="age.value"></Input>\n      <Input v-bind="amount"\n             label-position=\'right\'\n             label-width=\'150px\'\n             v-model="amount.value"></Input>\n      <Input v-bind="phone"\n             label-position=\'right\'\n             label-width=\'150px\'\n             v-model="phone.value"></Input>\n      <Input v-bind="email"\n             label-position=\'right\'\n             label-width=\'150px\'\n             v-model="email.value"></Input>\n      <Input v-bind="IDCard"\n             label-position=\'right\'\n             label-width=\'150px\'\n             v-model="IDCard.value"></Input>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      user: {\n        "rely_policy_id": 0,\n        "id": "277",\n        "category_id": "1",\n        "title": "本人姓名",\n        "placeholder": "",\n        "var_name": "bureau_user_name",\n        "type": "text",\n        "verify_type": "text",\n        "material_type": "100",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0,\n        "disabled": false,\n        "maxlength": 6,\n        "autofocus": false\n      },\n      age: {\n        "rely_policy_id": 0,\n        "id": "6922",\n        "category_id": "1",\n        "title": "年龄",\n        "var_name": "age",\n        "type": "number",\n        "verify_type": "0",\n        "data": "",\n        "unit": "",\n        "material_type": "107",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "fixed": 0,\n        "readonly": 0,\n        "maxlength": 3\n      },\n      amount: {\n        "rely_policy_id": 0,\n        "id": "692",\n        "category_id": "1",\n        "title": "申请金额",\n        "var_name": "application_amount",\n        "type": "number",\n        "verify_type": "0",\n        "data": "",\n        "unit": "",\n        "material_type": "107",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "1000",\n        "fixed": 2,\n        "readonly": 0,\n        "maxlength": 8,\n        "prepend": "RP"\n      },\n      phone: {\n        "rely_policy_id": 0,\n        "id": "6929",\n        "category_id": "1",\n        "title": "手机号码",\n        "var_name": "phone_number",\n        "type": "tel",\n        "verify_type": "0",\n        "data": "",\n        "unit": "",\n        "material_type": "107",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0,\n        "maxlength": 11,\n        "prepend": (h) => {\n          return h(\'span\', {\n            style: { color: \'red\' }\n          }, \'+91\')\n        }\n      },\n      OTP: {\n        "rely_policy_id": 0,\n        "id": "277",\n        "category_id": "1",\n        "title": "验证码",\n        "placeholder": "",\n        "var_name": "otp_code",\n        "type": "text",\n        "verify_type": "text",\n        "data": "",\n        "unit": "",\n        "material_type": "100",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0,\n        "maxlength": 6\n      },\n      email: {\n        "rely_policy_id": 0,\n        "id": "692999",\n        "category_id": "1",\n        "title": "邮箱",\n        "var_name": "email",\n        "type": "email",\n        "verify_type": "0",\n        "data": "",\n        "unit": "",\n        "material_type": "107",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0,\n        "emailList": [\n          "qq.com",\n          "sina.com",\n          "sohu.com",\n          "163.com",\n          "foxmail.com",\n          "gmail.com",\n          "rong360.com",\n          "edu.cn",\n          "outlook.com",\n          "vip.qq.com",\n          "126.com"\n        ],\n        "rules": [{\n          "required": true,\n          "message": "邮箱不能为空",\n          "trigger": "blur"\n        },\n        {\n          "type": "email",\n          "message": "邮箱格式不正确",\n          "trigger": "blur"\n        }]\n      },\n      IDCard: {\n        "rely_policy_id": 0,\n        "id": "372",\n        "category_id": "1",\n        "title": "本人身份证号码",\n        "var_name": "user_id",\n        "type": "IDCard",\n        "verify_type": "IDCard",\n        "data": "",\n        "unit": "",\n        "material_type": "100",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0\n      }\n    }\n  },\n  mounted () {\n    setTimeout(() => {\n      this.user.title = "本人姓名2"\n    }, 1000);\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    },\n    handleInputAmount (e, component) {\n      let value = e.target.value\n      if (value > 10000) {\n        component.setCurrentValue(10000)\n        component.validateState = \'error\'\n        component.validateMessage = \'最大申请金额为10000元，已为你自动变更为10000元\'\n      }\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.input-example {\n  .title {\n    font-size: 14px;\n    margin-top: 30px;\n    line-height: 30px;\n    background-color: lightsteelblue;\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},1359:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="loading-加载中">Loading 加载中</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>加载图标，用于表示加载中的过渡状态。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Loading } from &#39;rong-ui2&#39;;\n\nVue.use(Loading)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">// 默认\nvar loading = this.$loading();\n\nsetTimeout(function(){\n    loading.remove();\n}, 2000)\n</code></pre>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<pre><code class="language-html">// 倒计时\nvar loading = this.$loading({\n    propsData: {\n        text: &#39;3s&#39;,\n        textInside: true\n    }\n});\n\nvar count = 3;\n\nvar timer = setInterval(function(){\n    count--;\n    if(count == 0){\n        loading.remove();\n    }else{\n        loading.text = count + &#39;s&#39;;\n    }\n}, 1000)\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h4 id="自定义loading">自定义loading</h4>\n<pre><code class="language-js">import {Loading, Titlebar, Input} from &#39;rong-ui2&#39;\nLoading.config({\n  loading: require(&#39;./components/LoadingCattle.vue&#39;) // 项目中添加Loading组件\n})\nVue.use(Loading)\nVue.use(Titlebar)\nVue.use(Input)\n</code></pre>\n<p>or</p>\n<pre><code class="language-js">import rongUI2, {Loading} from &#39;rong-ui2&#39;\nLoading.config({\n  loading: require(&#39;./components/LoadingCattle.vue&#39;)\n})\nVue.use(rongUI2)\n</code></pre>\n</div>\n\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<p>loading实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted...</p>\n<h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>text</td>\n<td>加载文案</td>\n<td>string</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>width</td>\n<td>loading区的长度（750px设计图下）</td>\n<td>number</td>\n<td></td>\n<td><code>100</code></td>\n</tr>\n<tr>\n<td>cwidth</td>\n<td>loading区圆圈的大小（750px设计图下）</td>\n<td>number</td>\n<td></td>\n<td><code>30</code></td>\n</tr>\n<tr>\n<td>textInside</td>\n<td>文案位置是否在圆圈内</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>color</td>\n<td>loading圆圈的颜色</td>\n<td>string</td>\n<td></td>\n<td><code>#4080e8</code></td>\n</tr>\n<tr>\n<td>textColor</td>\n<td>文案的颜色</td>\n<td>string</td>\n<td></td>\n<td><code>#ffffff</code></td>\n</tr>\n<tr>\n<td>textFontSize</td>\n<td>文案的字体大小（750px设计图下）</td>\n<td>number</td>\n<td></td>\n<td><code>28</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="loading-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Loading</Titlebar>\n    <div class="p-20">\n      <nav-item class="item"\n           @on-click="showLoading0">默认</nav-item>\n      <nav-item class="item"\n           @on-click="showLoading1">添加文案</nav-item>\n      <nav-item class="item"\n           @on-click="showLoading2">倒计时</nav-item>\n      <nav-item class="item"\n           @on-click="showLoading3">改变大小、颜色、文字等</nav-item>\n      <nav-item class="item"\n           @on-click="showLoading4">自定义loading</nav-item>\n    </div>\n  </div>\n</template>\n<script>\n\nexport default {\n  name: "loadingExample",\n  methods: {\n    showLoading0 () {\n      let loading = this.$loading();\n      setTimeout(function () {\n        loading.remove();\n      }, 2000)\n    },\n    showLoading1 () {\n      let loading = this.$loading({\n        propsData: {\n          text: \'灰太狼快跑！\'\n        }\n      });\n      setTimeout(function () {\n        loading.remove();\n      }, 2000)\n    },\n    showLoading2 () {\n      let loading = this.$loading({\n        propsData: {\n          text: \'3s\',\n          textInside: true\n        }\n      });\n      let count = 3;\n      let timer = setInterval(function () {\n        count--;\n        if (count == 0) {\n          loading.remove();\n          clearInterval(timer)\n        } else {\n          loading.text = count + \'s\';\n        }\n      }, 1000)\n    },\n    showLoading3 () {\n      let loading = this.$loading({\n        propsData: {\n          text: \'Hello World，disappear in 2s\',\n          width: 140,\n          cwidth: 40,\n          textFontSize: 32,\n          color: \'#e0a711\',\n          textColor: \'#e0a711\'\n        }\n      })\n\n      setTimeout(function () {\n        loading.remove();\n      }, 2000)\n    },\n    showLoading4 () {\n      this.$dialog({\n        propsData: {\n          message: `\n<div style="width: 100%; overflow: scroll;" class="scroll-area">\n<pre>\n  注册Loading组件之前添加Loading.config配置文件即可，如：\n  import {Loading, Input, Titlebar} from \'rong-ui2\'\n  Loading.config({\n    loading: require(\'./components/LoadingCattle.vue\')\n  })\n  Vue.use(Loading)\n</pre>\n</div>\n          `,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n<style lang="less">\n</style>\n</textarea>\n  </div>\n</details>\n'},2963:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="radio-单选框">Radio 单选框</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>在一组备选项中进行单选。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Radio } from &#39;rong-ui2&#39;;\n\nVue.use(Radio)\n</code></pre>\n</div>\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">单个radio，绑定到布尔值：\n&lt;r-radio v-model=&quot;single&quot;&gt;Radio&lt;/r-radio&gt;\n</code></pre>\n<pre><code class="language-html">多个radio，绑定到同一个字符串：\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;apple&quot;&gt;苹果&lt;/r-radio&gt;\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;pear&quot;&gt;梨&lt;/r-radio&gt;\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;banana&quot;&gt;香蕉&lt;/r-radio&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>checkedValue</td>\n<td>可以使用 v-model 双向绑定数据</td>\n<td><code>boolean</code> <code>string</code></td>\n<td><code>true</code> <code>false</code> <code>&quot;&quot;</code></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>value</td>\n<td>radio的值</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-change</td>\n<td>点击checkbox回调函数</td>\n<td>event</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>radio标题</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="checkbox-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Radio</Titlebar>\n    <div class="p-15">\n      <div class="fs-14">一，单个Radio，绑定到布尔值：</div>\n      <r-radio v-model="single">Radio</r-radio>\n      <div class="fs-14">{{single}}</div>\n\n      <br><br>\n      <div class="fs-14">二，多个Radio，绑定到同一个字符串：</div>\n      <r-radio v-model="picked"\n             value="apple">苹果</r-radio>\n      <Radio v-model="picked"\n             value="pear">梨</Radio>\n      <Radio v-model="picked"\n             value="banana">香蕉</Radio>\n      <div class="fs-14">{{picked}}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      single: false,\n      picked: \'pear\'\n    }\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n</style>\n</textarea>\n  </div>\n</details>\n\n'},2420:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="range-滑动范围">Range 滑动范围</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>注意这个滑动效果在手机模式下正常展示，可以复制链接在新窗口中打开测试。</p>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;Range v-model=&quot;config0.amount&quot; :min=&quot;config0.min&quot; :max=&quot;config0.max&quot; :step=&quot;config0.step&quot;&gt;\n  &lt;span slot=&quot;start&quot;&gt;{{config0.min}}&lt;/span&gt;\n  &lt;span slot=&quot;end&quot;&gt;{{config0.max}}&lt;/span&gt;\n&lt;/Range&gt;\n</code></pre>\n<pre><code class="language-js">...\ndata(){\n  return {\n    config0: {\n      amount: 20000,\n      min: 0,\n      max: 100000,\n      step: 5000\n    }\n}\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>滑块的值</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>min</td>\n<td>最小值</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>max</td>\n<td>最大值</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>step</td>\n<td>步长</td>\n<td>number</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td></td>\n<td>false</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>start</td>\n<td>滑块左侧</td>\n</tr>\n<tr>\n<td>end</td>\n<td>滑块右侧</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="wrap">\n    <Titlebar theme="b"\n              @on-back="onBack">Range</Titlebar>\n    <div class="exp">\n      <div class="tip">效果一</div>\n      {{config0.amount}}\n      <Range v-model="config0.amount"\n             :min="config0.min"\n             :max="config0.max"\n             :step="config0.step">\n        <span slot="start">{{config0.min}}</span>\n        <span slot="end">{{config0.max}}</span>\n      </Range>\n\n      <br><br>\n\n      <div class="tip">效果二</div>\n      <div class="range-title">{{config1.amount}}</div>\n      <Range v-model="config1.amount"\n             :min="config1.min"\n             :max="config1.max"\n             :step="config1.step">\n        <span slot="start"\n              class="decrease"\n              @click="decrease">-</span>\n        <span slot="end"\n              class="increase"\n              @click="increase">+</span>\n      </Range>\n      <div class="range-footer">\n        <span class="min">{{config1.min}}</span>\n        <span class="max">{{config1.max}}</span>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: "RangeExp",\n  data () {\n    return {\n      config0: {\n        amount: 20000,\n        min: 0,\n        max: 100000,\n        step: 5000\n      },\n      config1: {\n        amount: 8000,\n        min: 5000,\n        max: 13000,\n        step: 3000\n      }\n    }\n  },\n  methods: {\n    decrease () {\n      let amount = this.config1.amount\n      amount -= this.config1.step\n      amount = Math.max(this.config1.min, amount)\n      this.config1.amount = amount\n    },\n    increase () {\n      let amount = this.config1.amount\n      amount += this.config1.step\n      amount = Math.min(this.config1.max, amount)\n      this.config1.amount = amount\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n<style lang="less" scoped>\n#ta {\n  color: #666;\n  border: 1px solid #e5e5e5;\n}\n.tip {\n  padding: 0.5rem 0.8rem;\n  text-align: left;\n  font-size: 0.8rem;\n  color: #4080e8;\n  background: rgb(245, 231, 185);\n}\n.r-range {\n  padding: 0 1rem;\n}\n.decrease,\n.increase {\n  width: 1rem;\n  height: 1rem;\n  line-height: 1rem;\n  border-radius: 50%;\n  border: 1px solid #ccc;\n  text-align: center;\n}\n.decrease {\n  margin-right: 1rem;\n}\n.increase {\n  margin-left: 1rem;\n}\n.range-footer {\n  display: flex;\n  justify-content: space-between;\n  .min {\n    padding-left: 1rem;\n  }\n  .max {\n    padding-right: 1rem;\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},5506:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="selectdate-选择日期">SelectDate 选择日期</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>提供多个选项集合供用户选择，支持单列选择和多列级联。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { SelectDate } from &#39;rong-ui2&#39;;\n\nVue.use(SelectDate)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-selectdate :attrs=&quot;config&quot; v-model=&quot;config.value&quot;&gt;&lt;/r-selectdate&gt;\n</code></pre>\n<pre><code class="language-js">...\ndata(){\n    return {\n        config: {\n      title: &#39;爸爸生日&#39;,\n      name: &#39;birthday&#39;,\n      value: &#39;&#39;,\n      placeholder: &#39;请选择&#39;,\n            valueFormat: &#39;yyyy/mm/dd&#39;,\n            // textFormat: &#39;yyyy年mm月dd日&#39;,\n            textFormat (val) {\n                return `${val.year.text},${val.month.text.substr(0, 4)},${val.day.text}`\n            },\n            startYear: &#39;&#39;,\n            endYear: &#39;&#39;,\n            offsetYear: &#39;&#39;,\n            yearsLength: &#39;&#39;,\n            disabled: false,\n            language: &#39;en&#39;,\n            pickerFormatter: function (type, val) {\n                // if (type == &#39;year&#39;) {\n                //   return val + &#39;年&#39;\n                // } else if (type == &#39;month&#39;) {\n                //   return val + &#39;月&#39;\n                // } else if (type == &#39;day&#39;) {\n                //   return val + &#39;日&#39;\n                // }\n            },\n            pickerTitle: &#39;hello&#39;,\n            pickerCancelBtnText: &#39;cancel&#39;,\n            pickerConfirmBtnText: &#39;confirm&#39;,\n            columnsOrder: [&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]\n      textPosition: &#39;right&#39;,\n      mode: &#39;&#39;\n    }\n    }\n},\nmethods: {\n    doConfirm(date){\n        console.log(date);\n    }\n}\n</code></pre>\n</div>\n\n\n\n\n<h3 id="attributes">Attributes</h3>\n<h3 id="selectdate基于datepicker组件开发，datepicker参数同样适合selectdate">SelectDate基于Datepicker组件开发，Datepicker参数同样适合SelectDate</h3>\n<p><font color=\'red\'>特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>同Datepicker ...</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>title</td>\n<td>表单label</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>表单name</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>默认值</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>输入框提示文案</td>\n<td>string</td>\n<td></td>\n<td>``</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>输入框是否禁用</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>unit</td>\n<td>输入项单位</td>\n<td>string</td>\n<td></td>\n<td><code>&quot;&quot;</code></td>\n</tr>\n<tr>\n<td>rules</td>\n<td>类iview风格的校验规则</td>\n<td>array</td>\n<td></td>\n<td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td>\n</tr>\n<tr>\n<td>mode</td>\n<td>title添加css效果</td>\n<td>string</td>\n<td><code>default</code> <code>to-top</code></td>\n<td><code>default</code></td>\n</tr>\n</tbody></table>\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-confirm</td>\n<td>键盘收起事件</td>\n<td>（{year: &quot;&quot;, month: &quot;&quot;, date: &quot;&quot;, value: &quot;&quot;}） - 年，月，日，选择值</td>\n</tr>\n</tbody></table>\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>日期后面可以通过slot插入icon等</td>\n</tr>\n</tbody></table>\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="selectdate-example">\n    <Titlebar theme="b"\n              @on-back="onBack">SelectDate</Titlebar>\n\n    <p class="fs-14 mt-20">1，默认</p>\n    <r-selectdate :title="config.title"\n                :name="config.name"\n                :placeholder="config.placeholder"\n                :valueFormat="config.valueFormat"\n                :textFormat="config.textFormat"\n                :startYear="config.startYear"\n                :endYear="config.endYear"\n                :yearsLength="config.yearsLength"\n                :offsetYear="config.offsetYear"\n                :disabled="config.disabled"\n                :pickerTitle="config.pickerTitle"\n                :pickerCancelBtnText="config.pickerCancelBtnText"\n                :pickerConfirmBtnText="config.pickerConfirmBtnText"\n                :textPosition="config.textPosition"\n                :rules="config.rules"\n                v-model="config.value"></r-selectdate>\n\n    <p class="fs-14 mt-20">2，只显示年份</p>\n    <SelectDate v-bind="config1"\n                v-model="config1.value"></SelectDate>\n\n    <p class="fs-14 mt-20">3，显示年、月</p>\n    <SelectDate v-bind="config2"\n                v-model="config2.value"></SelectDate>\n\n    <p class="fs-14 mt-20">4，添加css效果</p>\n    <SelectDate v-bind="config3"\n                v-model="config3.value"></SelectDate>\n    <div class="result">\n      <p v-for="(field, index) in fields"\n         :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      config: {\n        title: \'爸爸生日\',\n        name: \'birthday\',\n        value: \'\',\n        placeholder: \'请选择\',\n        valueFormat: \'yyyy/mm/dd\',\n        textFormat: \'yyyy年mm月dd日\',\n        startYear: \'\',\n        endYear: \'\',\n        yearsLength: \'10\',\n        offsetYear: \'-1\',\n        disabled: false,\n        pickerTitle: \'hello\',\n        pickerCancelBtnText: \'cancel\',\n        pickerConfirmBtnText: \'confirm\',\n        textPosition: \'right\',\n        rules: [\n          {\n            validator: (rule, value, cb) => {\n              console.log(value)\n              let d = new Date(value)\n              let y = d.getFullYear()\n              if (y >= 2024) {\n                return new Error(\'father is too old\')\n              }\n              cb()\n            },\n            trigger: \'select\'\n          }\n        ],\n        mode: \'\'\n      },\n      config1: {\n        title: \'妈妈出生年份\',\n        value: \'\',\n        valueFormat: \'yyyy\',\n        textFormat: \'yyyy年\',\n        textPosition: \'right\',\n        columnsOrder: [\'year\']\n      },\n      config2: {\n        title: \'哥哥出生日期\',\n        value: \'1988/10\',\n        startYear: \'1970\',\n        endYear: \'2030\',\n        valueFormat: \'yyyy/mm\',\n        textFormat: \'yyyy年mm月\',\n        columnsOrder: [\'year\', \'month\']\n      },\n      config3: {\n        title: \'妹妹出生日期\',\n        value: \'\',\n        mode: \'to-top\'\n      },\n      fields: []\n    }\n  },\n  mounted () {\n    this.fields = this.$children.filter(component => component.$options.name === \'r-select-date\')\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less" scoped>\n.result {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  font-size: 14px;\n  color: #333333;\n  padding: 10px;\n  background-color: lightgray;\n  line-height: 30px;\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},8752:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="select-选择">Select 选择</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>提供多个选项集合供用户选择。</p>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-select name=&quot;education&quot; :data=&quot;education.data&quot; v-model=&quot;education0&quot;&gt;&lt;/r-select&gt;\n&lt;r-select v-bind=&quot;education&quot; v-model=&quot;education.value&quot;&gt;&lt;/r-select&gt;\n</code></pre>\n<pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      education0: &#39;&#39;,\n      education: {\n        title: &quot;教育程度&quot;,\n        name: &quot;education&quot;,\n        value: &#39;2&#39;,\n        lr: &quot;right&quot;,\n        placeholder: &quot;请选择贷款期限&quot;,\n        readonly: true,\n        data: [{\n          text: &quot;硕士及以上&quot;,\n          value: &quot;1&quot;\n        }, {\n          text: &quot;本科&quot;,\n          value: &#39;2&#39;\n\n        }, {\n          text: &quot;大专&quot;,\n          value: &quot;3&quot;\n        }, {\n          text: &quot;中专/高中及以下&quot;,\n          value: &quot;4&quot;\n        }]\n      }\n  }\n}\n&lt;/script&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="select-props">Select props</h3>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>attrs</td>\n<td>表单配置项</td>\n<td>object</td>\n<td>-</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>占位文本</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-width</td>\n<td>lebel标签宽度</td>\n<td>string</td>\n<td>如 <code>150px</code> <code>10rem</code>等</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label-position</td>\n<td>label标签对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>right</code> <code>top</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>text-position</td>\n<td>select文字对齐方式</td>\n<td>string</td>\n<td><code>left</code> <code>center</code> <code>right</code></td>\n<td><code>left</code></td>\n</tr>\n<tr>\n<td>cancel-btn-text</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>confirm-btn-text</td>\n<td>确认按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>确认</code></td>\n</tr>\n<tr>\n<td>select-arrow-style</td>\n<td>清空按钮样式</td>\n<td>object</td>\n<td>-</td>\n<td>{}</td>\n</tr>\n<tr>\n<td>show-message</td>\n<td>是否显示错误信息</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>required（v1.1.3）</td>\n<td>是否必填</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>className（v1.1.3）</td>\n<td>自定义class</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<p><font color=\'red\'>特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>表单label</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>name</td>\n<td>表单name</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td>默认值</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>placeholder</td>\n<td>输入框提示文案</td>\n<td>string</td>\n<td></td>\n<td>``</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>输入框是否禁用</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>readonly</td>\n<td>输入框是否只读</td>\n<td>boolean</td>\n<td></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>unit</td>\n<td>输入项单位</td>\n<td>string</td>\n<td></td>\n<td><code>&quot;&quot;</code></td>\n</tr>\n<tr>\n<td>cancelBtnText</td>\n<td>取消按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>confirmBtnText</td>\n<td>确定按钮文案</td>\n<td>string</td>\n<td></td>\n<td><code>取消</code></td>\n</tr>\n<tr>\n<td>rules</td>\n<td>类iview风格的校验规则</td>\n<td>array</td>\n<td></td>\n<td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td>\n</tr>\n<tr>\n<td>mode</td>\n<td>title添加css效果</td>\n<td>string</td>\n<td><code>default</code> <code>to-top</code></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>error-at-placeholder</td>\n<td>error显示在placeholder位置</td>\n<td>boolean</td>\n<td>-</td>\n<td>false</td>\n</tr>\n<tr>\n<td>required（v1.1.3）</td>\n<td>是否必填</td>\n<td>boolean</td>\n<td>-</td>\n<td>true</td>\n</tr>\n<tr>\n<td>className（v1.1.3）</td>\n<td>自定义class</td>\n<td>string</td>\n<td>-</td>\n<td>-</td>\n</tr>\n</tbody></table>\n<pre><code>特别说明，rules校验规则文档详见https://www.npmjs.com/package/async-validator\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-confirm</td>\n<td>确定按钮</td>\n<td>selectedOption</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="methods">methods</h3>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>getValue</td>\n<td>获取当前组件表单数据</td>\n<td></td>\n<td>{name: name, value: value}</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>prepend</td>\n<td>前置内容</td>\n</tr>\n<tr>\n<td>append</td>\n<td>后置内容</td>\n</tr>\n<tr>\n<td>arrow-icon</td>\n<td>右侧箭头</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Select</Titlebar>\n    <div class="list">\n      请选择以下信息：\n      <Form ref="form">\n        <r-select :title="config.title"\n                :name="config.name"\n                :data="config.data"\n                v-model="config.value"\n                ref="select1"></r-select>\n        <Select v-bind="config2"\n                v-model="config2.value"\n                cancel-btn-text="cancel"\n                confirm-btn-text="confirm"\n                ref="select2"></Select>\n        <Select v-bind="config3"\n                v-model="config3.value"\n                ref="select3"></Select>\n        <button @click="doChangeData">点击改变人群类别data</button>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取人群类别数据</Button>\n          <Button @on-click="getValue2">获取贷款期限数据</Button>\n          <Button @on-click="getValue3">获取教育程度数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </Form>\n    </div>\n  </div>\n\n</template>\n<script>\nexport default {\n  name: "SelectExp",\n  data () {\n    return {\n      config: {},\n      config0: {\n        title: "人群类别-before",\n        name: "population_category0",\n        value: \'\',\n        cancelBtnText: \'cancel\',\n        confirmBtnText: \'confirm\',\n        data: [\n          {\n            text: \'企业主\',\n            value: \'office_lady\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "number",\n                title: "每月收入流水",\n                unit: "万元",\n                name: "waterflow",\n                value: "",\n                placeholder: "请输入每月收入流水"\n              }\n            ]\n          },\n          {\n            text: \'医生\',\n            value: \'doctor\',\n            children: [\n              {\n                type: "Select",\n                title: "职位",\n                name: "free_type",\n                value: 2,\n                data: [\n                  {\n                    text: "院长",\n                    value: 0\n                  },\n                  {\n                    text: "主任医师",\n                    value: 1\n                  },\n                  {\n                    text: "副主任医师",\n                    value: 2\n                  },\n                  {\n                    text: "住院医",\n                    value: 3\n                  },\n                  {\n                    text: "医学生",\n                    value: 4\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      config1: {\n        title: "人群类别-after",\n        name: "population_category1",\n        value: \'\',\n        data: [\n          {\n            text: \'上班族\',\n            value: \'office_lady\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "text",\n                title: "姓名(无需校验)",\n                name: "username",\n                value: \'\',\n                placeholder: "请输入用户姓名",\n                rules: []\n              },\n              {\n                componentType: \'Input\',\n                type: "IDCard",\n                title: "身份证号码",\n                name: "idcard",\n                value: \'\',\n                placeholder: "请输入身份证号码"\n              },\n              {\n                componentType: \'Input\',\n                type: "tel",\n                title: "手机号码",\n                name: "mobile",\n                value: \'\',\n                placeholder: "请输入您的手机号码"\n              }\n            ]\n          },\n          {\n            text: \'学生\',\n            value: \'student\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "number",\n                title: "每月花费",\n                name: "expense",\n                value: \'\',\n                unit: "元",\n                placeholder: "请输入您每月生活费"\n              },\n              {\n                type: "Select",\n                title: "爱好",\n                name: "interest",\n                value: \'maishu\',\n                data: [\n                  {\n                    text: "买书",\n                    value: \'maishu\',\n                    children: [\n                      {\n                        type: "Select",\n                        title: "书籍类型",\n                        name: "book_type",\n                        value: \'xiaoshuo\',\n                        data: [\n                          {\n                            text: \'外语\',\n                            value: \'waiyu\'\n                          },\n                          {\n                            text: \'汉语\',\n                            value: \'hanyu\'\n                          },\n                          {\n                            text: \'小说\',\n                            value: \'xiaoshuo\'\n                          }\n                        ]\n                      },\n                      {\n                        componentType: \'Input\',\n                        type: "number",\n                        title: "买书花费",\n                        name: "buy_book_expense",\n                        value: \'\',\n                        unit: "元",\n                        placeholder: "请输入您每月买书费用"\n                      }\n                    ]\n                  },\n                  {\n                    text: "娱乐",\n                    value: \'娱乐\'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            text: \'自由职业者\',\n            value: \'free\',\n            children: [\n              {\n                type: "Select",\n                title: "自由职业者类型",\n                name: "free_type",\n                value: 1,\n                data: [\n                  {\n                    text: "微商",\n                    value: 0\n                  },\n                  {\n                    text: "网络小说写手",\n                    value: 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      config2: {\n        title: "贷款期限",\n        name: "loan_term",\n        value: \'2\',\n        placeholder: "请选择贷款期限",\n        data: [{\n          text: "1个月",\n          value: "1"\n        }, {\n          text: "2个月",\n          value: \'2\'\n\n        }, {\n          text: "36个月",\n          value: "36"\n        }, {\n          text: "自己输入",\n          value: "0",\n          children: [{\n            componentType: \'Input\',\n            type: "number",\n            title: "输入您的贷款期限",\n            name: "m_term",\n            value: "",\n            unit: "个月",\n            placeholder: "请输入您期望的贷款期限",\n            rules: [{\n              validator (rule, value, callback, source, options) {\n                let { component } = options\n                if (value === \'\') {\n                  return new Error(component.title + \'不能为空\')\n                } else if (value > 12) {\n                  component.setCurrentValue(12)\n                  return new Error(\'贷款期限最长12个月，以为您变更为12个月\')\n                }\n                callback()\n              },\n              trigger: \'blur\'\n            }]\n          }]\n        }],\n        rules: [{\n          validator (rule, value, callback, source, options) {\n            if (value == 1) {\n              return new Error(\'目前暂不支持1个月的贷款，请选择贷款期限\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        }]\n      },\n      config3: {\n        title: "教育程度",\n        name: "education",\n        value: \'2\',\n        lr: "right",\n        placeholder: "请选择贷款期限",\n        readonly: true,\n        data: [{\n          text: "硕士及以上",\n          value: "1"\n        }, {\n          text: "本科",\n          value: \'2\'\n\n        }, {\n          text: "大专",\n          value: "3"\n        }, {\n          text: "中专/高中及以下",\n          value: "4"\n        }]\n      }\n    }\n  },\n  created () {\n    this.config = this.config0;\n  },\n  mounted () {\n    setTimeout(() => {\n      // this.config0.value = "doctor"\n    }, 2000);\n  },\n  methods: {\n    doChangeData () {\n      if (this.config.name == "population_category0") {\n        this.config = this.config1;\n      } else {\n        this.config = this.config0;\n      }\n    },\n    getValue1 () {\n      let obj = this.$refs.select1.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue2 () {\n      let obj = this.$refs.select2.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue3 () {\n      let obj = this.$refs.select3.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue4 () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.map(item => item.replace(\'不能为空\', \'\')).join(\'、\') + \'不能为空\'\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    resetFields () {\n      this.$refs.form.resetFields()\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n<style lang="less">\n.select-example {\n  .list {\n    padding: 15px 0 15px 15px;\n  }\n  .btn-wrap {\n    display: flex;\n    font-size: 12px;\n    padding-right: 15px;\n    margin-top: 30px;\n    > div {\n      flex: 1;\n    }\n    :nth-child(2) {\n      margin-left: 10px;\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n\n'},5249:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="select2">Select2</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>下拉列表数据小于6条时固定展示，超过6条出滚动条。</p>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Select2 } from &#39;rong-ui2&#39;;\n\nVue.use(Select2)\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">props</h3>\n<p><font color="red">Select2 props 同Select组件</font></p>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Select2</Titlebar>\n    <div class="tips">下拉列表数据小于6条时固定展示，超过6条出滚动条</div>\n    <div class="list">\n      请选择以下信息：\n      <r-form ref="r-form"\n            text-position="right">\n        <r-select2 :title="config.title"\n                 :name="config.name"\n                 :data="config.data"\n                 v-model="config.value"\n                 picker-title="标题"\n                 ref="select1"></r-select2>\n        <Select2 v-bind="config2"\n                 v-model="config2.value"\n                 cancel-btn-text="cancel"\n                 confirm-btn-text="confirm"\n                 ref="select2"></Select2>\n        <Select2 v-bind="config3"\n                 v-model="config3.value"\n                 ref="select3"></Select2>\n        <button @click="doChangeData">点击改变人群类别data</button>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取人群类别数据</Button>\n          <Button @on-click="getValue2">获取贷款期限数据</Button>\n          <Button @on-click="getValue3">获取教育程度数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </r-form>\n    </div>\n  </div>\n\n</template>\n<script>\nexport default {\n  name: "SelectExp",\n  data () {\n    return {\n      config: {},\n      config0: {\n        title: "人群类别-before",\n        name: "population_category0",\n        value: \'\',\n        cancelBtnText: \'cancel\',\n        confirmBtnText: \'confirm\',\n        pickerTitle: \'标题\',\n        data: [\n          {\n            text: \'企业主\',\n            value: \'office_lady\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "number",\n                title: "每月收入流水",\n                unit: "万元",\n                name: "waterflow",\n                value: "",\n                placeholder: "请输入每月收入流水"\n              }\n            ]\n          },\n          {\n            text: \'医生\',\n            value: \'doctor\',\n            children: [\n              {\n                type: "Select",\n                title: "职位",\n                name: "free_type",\n                value: 2,\n                data: [\n                  {\n                    text: "院长",\n                    value: 0\n                  },\n                  {\n                    text: "主任医师",\n                    value: 1\n                  },\n                  {\n                    text: "副主任医师",\n                    value: 2\n                  },\n                  {\n                    text: "住院医",\n                    value: 3\n                  },\n                  {\n                    text: "医学生",\n                    value: 4\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      config1: {\n        title: "人群类别-after",\n        name: "population_category1",\n        value: \'\',\n        data: [\n          {\n            text: \'上班族\',\n            value: \'office_lady\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "text",\n                title: "姓名(无需校验)",\n                name: "username",\n                value: \'\',\n                placeholder: "请输入用户姓名",\n                rules: []\n              },\n              {\n                componentType: \'Input\',\n                type: "IDCard",\n                title: "身份证号码",\n                name: "idcard",\n                value: \'\',\n                placeholder: "请输入身份证号码"\n              },\n              {\n                componentType: \'Input\',\n                type: "tel",\n                title: "手机号码",\n                name: "mobile",\n                value: \'\',\n                placeholder: "请输入您的手机号码"\n              }\n            ]\n          },\n          {\n            text: \'学生\',\n            value: \'student\',\n            children: [\n              {\n                componentType: \'Input\',\n                type: "number",\n                title: "每月花费",\n                name: "expense",\n                value: \'\',\n                unit: "元",\n                placeholder: "请输入您每月生活费"\n              },\n              {\n                type: "Select",\n                title: "爱好",\n                name: "interest",\n                value: \'maishu\',\n                data: [\n                  {\n                    text: "买书",\n                    value: \'maishu\',\n                    children: [\n                      {\n                        type: "Select",\n                        title: "书籍类型",\n                        name: "book_type",\n                        value: \'xiaoshuo\',\n                        data: [\n                          {\n                            text: \'外语\',\n                            value: \'waiyu\'\n                          },\n                          {\n                            text: \'汉语\',\n                            value: \'hanyu\'\n                          },\n                          {\n                            text: \'小说\',\n                            value: \'xiaoshuo\'\n                          }\n                        ]\n                      },\n                      {\n                        componentType: \'Input\',\n                        type: "number",\n                        title: "买书花费",\n                        name: "buy_book_expense",\n                        value: \'\',\n                        unit: "元",\n                        placeholder: "请输入您每月买书费用"\n                      }\n                    ]\n                  },\n                  {\n                    text: "娱乐",\n                    value: \'娱乐\'\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            text: \'自由职业者\',\n            value: \'free\',\n            children: [\n              {\n                type: "Select",\n                title: "自由职业者类型",\n                name: "free_type",\n                value: 1,\n                data: [\n                  {\n                    text: "微商",\n                    value: 0\n                  },\n                  {\n                    text: "网络小说写手",\n                    value: 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      config2: {\n        title: "贷款期限",\n        name: "loan_term",\n        value: \'\',\n        data: [{\n          text: "1个月",\n          value: "1"\n        }, {\n          text: "2个月",\n          value: \'2\'\n\n        }, {\n          text: "3个月",\n          value: \'3\'\n\n        },\n        {\n          text: "4个月",\n          value: \'4\'\n\n        },\n        {\n          text: "5个月",\n          value: \'5\'\n\n        },\n        {\n          text: "6个月",\n          value: \'6\'\n\n        },\n        {\n          text: "7个月",\n          value: \'7\'\n\n        },\n        {\n          text: "8个月",\n          value: \'8\'\n\n        },\n        {\n          text: "9个月",\n          value: \'9\'\n\n        },\n        {\n          text: "36个月",\n          value: "36"\n        }, {\n          text: "自己输入",\n          value: "0",\n          children: [{\n            componentType: \'Input\',\n            type: "number",\n            title: "输入您的贷款期限",\n            name: "m_term",\n            value: "",\n            unit: "个月",\n            placeholder: "请输入您期望的贷款期限",\n            rules: [{\n              validator (rule, value, callback, source, options) {\n                let { component } = options\n                if (value === \'\') {\n                  return new Error(component.title + \'不能为空\')\n                } else if (value > 12) {\n                  component.setCurrentValue(12)\n                  return new Error(\'贷款期限最长12个月，以为您变更为12个月\')\n                }\n                callback()\n                callback()\n              },\n              trigger: \'blur\'\n            }]\n          }]\n        }],\n        rules: [{\n          required: true,\n          message: \'贷款期限不能为空\'\n        }, {\n          validator (rule, value, callback, source, options) {\n            if (value == 1) {\n              return new Error(\'目前暂不支持1个月的贷款，请选择贷款期限\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        }]\n      },\n      config3: {\n        title: "教育程度",\n        name: "education",\n        value: \'2\',\n        lr: "right",\n        placeholder: "请选择贷款期限",\n        readonly: true,\n        data: [{\n          text: "硕士及以上",\n          value: "1"\n        }, {\n          text: "本科",\n          value: \'2\'\n\n        }, {\n          text: "大专",\n          value: "3"\n        }, {\n          text: "中专/高中及以下",\n          value: "4"\n        }]\n      }\n    }\n  },\n  created () {\n    this.config = this.config0;\n  },\n  methods: {\n    doChangeData () {\n      if (this.config.name == "population_category0") {\n        this.config = this.config1;\n      } else {\n        this.config = this.config0;\n      }\n    },\n    getValue1 () {\n      let obj = this.$refs.select1.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue2 () {\n      let obj = this.$refs.select2.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue3 () {\n      let obj = this.$refs.select3.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue4 () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.map(item => item.replace(\'不能为空\', \'\')).join(\'、\') + \'不能为空\'\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    resetFields () {\n      this.$refs.form.resetFields()\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n<style lang="less">\n.select-example {\n  .tips {\n    background-color: lightgoldenrodyellow;\n    padding: 15px;\n    font-size: 12px;\n  }\n  .list {\n    padding: 15px 0 15px 15px;\n  }\n  .btn-wrap {\n    display: flex;\n    font-size: 12px;\n    padding-right: 15px;\n    margin-top: 30px;\n    > div {\n      flex: 1;\n    }\n    :nth-child(2) {\n      margin-left: 10px;\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},1527:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="select3">Select3</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用于性别，有无等。</p>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Select3 } from &#39;rong-ui2&#39;;\n\nVue.use(Select3)\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">props</h3>\n<p><font color="red">Select3 props 同Select组件</font></p>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Select3</Titlebar>\n    <div class="tips">标题和选项在同一行展示， 用于性别选择等</div>\n    <div class="list">\n      请选择以下信息：\n      <Form ref="form"\n            text-position="right">\n        <Select3 :title="config.title"\n                 :name="config.name"\n                 :data="config.data"\n                 v-model="config.value"\n                 ref="select1"></Select3>\n        <Select3 v-bind="config2"\n                 v-model="config2.value"\n                 ref="select2"></Select3>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取公积金数据</Button>\n          <Button @on-click="getValue2">获取社保数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </Form>\n    </div>\n  </div>\n\n</template>\n<script>\nexport default {\n  name: "SelectExp",\n  data () {\n    return {\n      config: {\n        "rely_policy_id": 0,\n        "id": "635",\n        "category_id": "1",\n        "title": "本地公积金",\n        "name": "user_social_security",\n        "type": "2",\n        "verify_type": "0",\n        "data": [{\n          "value": "1",\n          "text": "有",\n          "rely": []\n        }, {\n          "value": "2",\n          "text": "无",\n          "rely": []\n        }],\n        "unit": "",\n        "material_type": "101",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0\n      },\n      config2: {\n        "rely_policy_id": 1,\n        "id": "636",\n        "category_id": "1",\n        "title": "本地社保",\n        "name": "shebao",\n        "type": "2",\n        "verify_type": "0",\n        "data": [{\n          "value": "1",\n          "text": "有",\n          "rely": []\n        }, {\n          "value": "2",\n          "text": "无",\n          "rely": []\n        }],\n        "unit": "",\n        "material_type": "101",\n        "info_property": "1",\n        "level": 1,\n        "desc": "",\n        "value": "",\n        "readonly": 0\n      }\n    }\n  },\n  methods: {\n    doChangeData () {\n      if (this.config.name == "population_category0") {\n        this.config = this.config1;\n      } else {\n        this.config = this.config0;\n      }\n    },\n    getValue1 () {\n      let obj = this.$refs.select1.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue2 () {\n      let obj = this.$refs.select2.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue3 () {\n      let obj = this.$refs.select3.getValue()\n      this.$dialog({\n        propsData: {\n          message: `<div style="word-break: break-all">${JSON.stringify(obj)}</div>`,\n          showCancelBtn: false\n        },\n        methods: {\n          onConfirm () {\n            this.remove()\n          }\n        }\n      })\n    },\n    getValue4 () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.map(item => item.replace(\'不能为空\', \'\')).join(\'、\') + \'不能为空\'\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    resetFields () {\n      this.$refs.form.resetFields()\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n<style lang="less">\n.select-example {\n  .tips {\n    background-color: lightgoldenrodyellow;\n    padding: 15px;\n    font-size: 12px;\n  }\n  .list {\n    padding: 15px 0 15px 15px;\n  }\n  .btn-wrap {\n    display: flex;\n    font-size: 12px;\n    padding-right: 15px;\n    margin-top: 30px;\n    > div {\n      flex: 1;\n    }\n    :nth-child(2) {\n      margin-left: 10px;\n      margin-right: 10px;\n    }\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},6560:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="steps">Steps</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置。</p>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;Steps :current=&quot;1&quot;&gt;\n  &lt;Step&gt;基本信息&lt;br&gt;utama&lt;/Step&gt;\n  &lt;Step&gt;个人信息&lt;br&gt;darurat&lt;/Step&gt;\n  &lt;Step&gt;联系人&lt;br&gt;wajah&lt;/Step&gt;\n  &lt;Step&gt;活体识别&lt;br&gt;wajah&lt;/Step&gt;\n&lt;/Steps&gt;\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>current</td>\n<td>当前步骤，从 0 开始计数</td>\n<td>Number</td>\n<td></td>\n<td><code>0</code></td>\n</tr>\n<tr>\n<td>progressLine</td>\n<td>当前进度条样式</td>\n<td>Object</td>\n<td></td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>notProgressLine</td>\n<td>未开始进度条样式</td>\n<td>Object</td>\n<td></td>\n<td><code>{}</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>icon</td>\n<td>自定义 icon</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="steps-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Steps</Titlebar>\n\n    <div class="fs-14 pt-30">1，默认</div>\n    <div class="box">\n      <Steps :current="current">\n        <Step>基本信息<br>utama</Step>\n        <Step>个人信息<br>darurat</Step>\n        <Step>联系人<br>wajah</Step>\n        <Step>活体识别<br>wajah</Step>\n      </Steps>\n    </div>\n\n    <div class="fs-14 pt-30">2，自定义icon和间隔线样式</div>\n    <div class="box">\n      <Steps :current="current"\n             :progressLine="{backgroundColor:\'#F43838\'}"\n             :notProgressLine="{backgroundColor:\'#f5f5f5\'}">\n        <Step>\n          <div class="icon"\n               slot="icon"></div>基本信息<br>utama\n        </Step>\n        <Step>\n          <div class="icon gray"\n               slot="icon"></div>个人信息<br>darurat\n        </Step>\n        <Step>\n          <div class="icon gray"\n               slot="icon"></div>联系人<br>wajah\n        </Step>\n        <Step>\n          <div class="icon gray"\n               slot="icon"></div>活体识别<br>wajah\n        </Step>\n      </Steps>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      current: 1\n    }\n  },\n  mounted () {\n    // setTimeout(() => {\n    //   this.current = 3\n    // }, 2000);\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.steps-example {\n  .box {\n    background: #ffffff;\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.1);\n    border-radius: 8px;\n    border-radius: 8px;\n    margin: 20px 20px 0 20px;\n    padding: 15px 0;\n  }\n  .icon {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: darkturquoise;\n    &.gray {\n      background-color: lightgrey;\n    }\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},7301:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="swiper-轮播图">Swiper 轮播图</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用于循环播放一组图片或内容。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Swiper } from &#39;rong-ui2&#39;;\n\nVue.use(Swiper)\n</code></pre>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;Swiper&gt;\n  &lt;SwiperItem @on-click=&quot;onClickSwiperItem&quot;&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n  &lt;SwiperItem&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n  &lt;SwiperItem&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n&lt;/Swiper&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>direction</td>\n<td>运动方向</td>\n<td>string</td>\n<td><code>scrollLeft</code> <code>scrollTop</code></td>\n<td><code>scrollLeft</code></td>\n</tr>\n<tr>\n<td>gap</td>\n<td>运动间隔时长</td>\n<td>number</td>\n<td></td>\n<td><code>2000</code></td>\n</tr>\n<tr>\n<td>autoPlay</td>\n<td>自动播放</td>\n<td>boolean</td>\n<td><code>true</code> <code>false</code></td>\n<td><code>true</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-page</td>\n<td>滚动到下一张时回调函数</td>\n<td>（current, total）</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>SwiperItem</td>\n</tr>\n<tr>\n<td>pagination</td>\n<td>页码指示器</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="swiperitem-props">SwiperItem Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>styleObj</td>\n<td>SwiperItem样式</td>\n<td>object</td>\n<td></td>\n<td><code>{}</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events-1">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-click</td>\n<td>点击SwiperItem回调函数</td>\n<td>event</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="Swiper-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Swiper</Titlebar>\n    <p class="fs-14 pt-30">1，默认</p>\n    <Swiper>\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg" /></SwiperItem>\n    </Swiper>\n\n    <p class="fs-14 pt-30">2，自定义页码</p>\n    <Swiper @on-page="onPage">\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg" /></SwiperItem>\n      <div slot="pagination"\n           style="position: absolute; bottom: 10px; right: 30px; font-size: 14px">{{curretPage}} / {{totalPage}}</div>\n    </Swiper>\n\n    <p class="fs-14 pt-30">3，自定义item样式</p>\n    <Swiper>\n      <SwiperItem :styleObj="{width: \'19rem\'}"\n                  @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem :styleObj="{width: \'19rem\'}"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem :styleObj="{width: \'19rem\'}"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg" /></SwiperItem>\n    </Swiper>\n\n    <p class="fs-14 pt-30">4，关闭自动播放</p>\n    <Swiper :auto-play="false">\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg" /></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg" /></SwiperItem>\n    </Swiper>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      curretPage: 0,\n      totalPage: 0\n    }\n  },\n  methods: {\n    onClickSwiperItem () {\n      console.log(9)\n    },\n    onPage (current, total) {\n      this.curretPage = current\n      this.totalPage = total\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.Swiper-example {\n  padding-bottom: 100px;\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},6580:function(n,t,e){"use strict";e.r(t);t.default='<h2 id="switch开关">Switch开关</h2>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用于在打开和关闭状态之间进行切换。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Switch } from &#39;rong-ui2&#39;;\n\nVue.use(Switch)\n</code></pre>\n</div>\n\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-switch v-model=&quot;switchVal&quot;&gt;&lt;/r-switch&gt;\n</code></pre>\n</div>\n\n\n\n<h1 id="api">API</h1>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value</td>\n<td>绑定的值，可使用 v-model 双向绑定</td>\n<td>Boolean</td>\n<td><code>true</code> <code>false</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>禁用开关</td>\n<td>Boolean</td>\n<td><code>true</code> <code>false</code></td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-change</td>\n<td>开关变化时触发，返回当前的状态</td>\n<td><code>true</code> <code>false</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>open</td>\n<td>自定义显示打开时的内容</td>\n</tr>\n<tr>\n<td>close</td>\n<td>自定义显示关闭时的内容</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="switch-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Switch</Titlebar>\n\n    <div class="p-15">\n      <p class="fs-14">1，默认</p>\n      <r-switch v-model="switchVal"></r-switch>\n\n      <br><br>\n\n      <p class="fs-14">2，文字或图标</p>\n      <r-switch v-model="switchVal">\n        <span slot="open">开</span>\n        <span slot="close">关</span>\n      </r-switch>\n\n      <br><br>\n\n      <p class="fs-14">3，禁用</p>\n      <r-switch v-model="switchVal"\n                :disabled="true"></r-switch>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      switchVal: false\n    }\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.switch-example {\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},8978:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="textscroll">TextScroll</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>跑马灯效果。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { TextScroll } from &#39;rong-ui2&#39;;\n\nVue.use(TextScroll)\n</code></pre>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;TextScroll :list=&quot;list&quot;&gt;&lt;/TextScroll&gt;\n</code></pre>\n<pre><code class="language-js">export default {\n  data () {\n    return {\n      list: [\n        &#39;让子弹飞一会儿，网络流行词，是2010年末上映的电影《让子弹飞》中的一句对白。&#39;\n      ]\n    }\n  }\n}\n</code></pre>\n</div>\n\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>list</td>\n<td>文案列表</td>\n<td>Array</td>\n<td></td>\n<td><code>[]</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>prepend</td>\n<td>scrollbar前插槽</td>\n</tr>\n<tr>\n<td>append</td>\n<td>scrollbar后插槽</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="textscroll-example">\n    <Titlebar theme="b"\n              @on-back="onBack">TextScroll</Titlebar>\n    <div class="fs-14">1, 默认</div>\n    <TextScroll :list="list"></TextScroll>\n    <br>\n    <r-textscroll :list="list"></r-textscroll>\n\n    <br><br>\n    <div class="fs-14">2, 插槽</div>\n    <TextScroll :list="list"><span slot="prepend" style="padding: 0 10px"> Tips:</span></TextScroll>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      list: [\n        \'让子弹飞一会儿，网络流行词，是2010年末上映的电影《让子弹飞》中的一句对白。\'\n      ]\n    }\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n\n</style>\n</textarea>\n  </div>\n</details>\n'},512:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="titlebar-标题">Titlebar 标题</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>为页面提供导航功能，常用于页面顶部。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Titlebar } from &#39;rong-ui2&#39;;\n\nVue.use(Titlebar)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-titlebar theme=&quot;d&quot; title=&quot;主题d&quot;&gt;\n    &lt;div slot=&quot;l&quot; @click=&quot;goHome&quot;&gt;首页&lt;/div&gt;\n    &lt;div slot=&quot;r&quot; @click=&quot;goCenter&quot;&gt;账户&lt;/div&gt;\n&lt;/r-titlebar&gt;\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>标题文案</td>\n<td>string</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>theme</td>\n<td>标题栏背景主题</td>\n<td>string</td>\n<td><code>a</code> <code>b</code> <code>c</code> <code>d</code> <code>e</code> <code>f</code></td>\n<td><code>a</code></td>\n</tr>\n<tr>\n<td>showBackto</td>\n<td>是否显示返回按钮</td>\n<td>Boolean</td>\n<td></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>backArrowStyle</td>\n<td>箭头自定义样式</td>\n<td>object</td>\n<td></td>\n<td><code>{}</code></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>on-back</td>\n<td>点击返回按钮触发的操作</td>\n<td></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>l</td>\n<td>左侧内容区</td>\n</tr>\n<tr>\n<td>不具名slot</td>\n<td>中间内容区，默认显示标题</td>\n</tr>\n<tr>\n<td>r</td>\n<td>右侧内容区</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="titlebar-example pb-20">\n    <Titlebar theme="b"\n              @on-back="onBack">Titlebar</Titlebar>\n\n    <div class="title">default</div>\n    <r-titlebar>标题</r-titlebar>\n\n    <div class="title">theme=b</div>\n    <Titlebar theme="b">标题</Titlebar>\n\n    <div class="title">theme=c</div>\n    <Titlebar theme="c">标题</Titlebar>\n\n    <div class="title">theme=d</div>\n    <Titlebar theme="d">标题</Titlebar>\n\n    <div class="title">theme=e</div>\n    <Titlebar theme="e">标题</Titlebar>\n\n    <div class="title">theme=f</div>\n    <Titlebar theme="f">标题</Titlebar>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.titlebar-example {\n  .title {\n    font-size: 14px;\n    margin-top: 30px;\n  }\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},2762:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="toast-提示">Toast 提示</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>在页面中间弹出黑色半透明提示，用于消息通知、加载提示、操作结果提示等场景。</p>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Toast } from &#39;rong-ui2&#39;;\n\nVue.use(Toast)\n</code></pre>\n</div>\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-js">this.$toast({\n    propsData: {\n        message: &#39;芭芭拉小魔仙，变身!&#39;,\n        type: &#39;positive&#39;,\n        time: 5000\n    },\n    methods: {\n        callback(){\n            self.count++;\n        }\n    }\n});\n\nthis.$toast(&quot;芭芭拉小魔仙，变身&quot;);\n</code></pre>\n<p>or</p>\n<pre><code class="language-js">this.$toast.long(&quot;芭芭拉小魔仙，变身&quot;)\nthis.$toast.positive(&quot;芭芭拉小魔仙，变身&quot;)\nthis.$toast.negetive(&quot;芭芭拉小魔仙，变身&quot;)\n</code></pre>\n</div>\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<p>toast实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted...</p>\n<h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>wrapStyleObj</td>\n<td>样式</td>\n<td>object</td>\n<td>-</td>\n<td><code>{top: &#39;35%&#39;}</code></td>\n</tr>\n<tr>\n<td>message</td>\n<td>提示内容</td>\n<td>string</td>\n<td>-</td>\n<td>&quot;&quot;</td>\n</tr>\n<tr>\n<td>type</td>\n<td>icon类型</td>\n<td>string</td>\n<td><code>positive</code> <code>negetive</code> <code>long</code></td>\n<td><code>long</code></td>\n</tr>\n<tr>\n<td>time</td>\n<td>多少ms后toast消失</td>\n<td>number</td>\n<td>—</td>\n<td><code>2000</code></td>\n</tr>\n</tbody></table>\n<h3 id="events-methods属性下">Events (methods属性下)</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>callback</td>\n<td>toast消失时回调函数</td>\n<td>—</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="toast-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Toast</Titlebar>\n    <div class="p-20">\n      <nav-item class="item"\n           @on-click="defaultOnClick">默认 default</nav-item>\n      <nav-item class="item"\n           @on-click="positiveOnClick">积极文案（type="positive"）</nav-item>\n      <nav-item class="item"\n           @on-click="negetiveOnClick">消极文案（type="negetive"）</nav-item>\n      <nav-item class="item"\n           @on-click="callbackOnClick">消失时回调</nav-item>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  methods: {\n    defaultOnClick () {\n      this.$toast(\'长文本形式为文字超过十个时使用，宽度固定\')\n    },\n    positiveOnClick () {\n      this.$toast({\n        propsData: {\n          type: \'positive\',\n          message: \'积极文案不超过十个字\'\n        }\n      })\n    },\n    negetiveOnClick () {\n      this.$toast({\n        propsData: {\n          type: \'negetive\',\n          message: \'消极文案不超过十个字\'\n        }\n      })\n    },\n    callbackOnClick () {\n      this.$toast({\n        propsData: {\n          message: \'消失时回调，出alert\',\n          callback: function () {\n            alert(0)\n          }\n        }\n      })\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n</style>\n</textarea>\n  </div>\n</details>\n'},3441:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="uploader-文件上传">Uploader 文件上传</h1>\n<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>用于将本地的图片或文件上传至服务器。</p>\n</div>\n\n\n\n\n<div class="r-doc-card">\n\n<h3 id="引入">引入</h3>\n<p>通过以下方式来全局注册组件</p>\n<pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Uploader } from &#39;rong-ui2&#39;;\n\nVue.use(Uploader)\n</code></pre>\n</div>\n\n\n\n<h2 id="基本用法">基本用法</h2>\n<div class="r-doc-card">\n\n<pre><code class="language-html">&lt;r-uploader action=&quot;/test/fileUpload&quot;&gt;&lt;/r-uploader&gt;\n</code></pre>\n</div>\n\n\n\n\n<h2 id="api">API</h2>\n<div class="r-doc-card">\n\n<h3 id="props">Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>action</td>\n<td>上传的地址，必填</td>\n<td>String</td>\n<td></td>\n</tr>\n<tr>\n<td>headers</td>\n<td>设置上传的请求头部</td>\n<td>Object</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>data</td>\n<td>上传时附带的额外参数</td>\n<td>Object</td>\n<td><code>{}</code></td>\n</tr>\n<tr>\n<td>name</td>\n<td>上传的文件字段名</td>\n<td>String</td>\n<td><code>file</code></td>\n</tr>\n<tr>\n<td>withCredentials</td>\n<td>支持发送 cookie 凭证信息</td>\n<td>Boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>showUploadList</td>\n<td>是否显示已上传文件列表</td>\n<td>Boolean</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>Boolean</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>maxSize</td>\n<td>文件大小限制，单位 kb</td>\n<td>Number</td>\n<td></td>\n</tr>\n<tr>\n<td>accept</td>\n<td>接受上传的文件类型</td>\n<td>String</td>\n<td></td>\n</tr>\n<tr>\n<td>format</td>\n<td>支持的文件类型，与 accept 不同的是，format 是识别文件的后缀名，accept 为 input 标签原生的 accept 属性，会在选择文件时过滤，可以两者结合使用</td>\n<td>Array</td>\n<td>[]</td>\n</tr>\n<tr>\n<td>defaultFileList</td>\n<td>默认已上传的文件列表,如：[{url: &quot;<a href="http://www.xxx.com/xxx.jpg&quot;%7D%5D">http://www.xxx.com/xxx.jpg&quot;}]</a></td>\n<td>Array</td>\n<td></td>\n</tr>\n<tr>\n<td>onSuccess</td>\n<td>文件上传成功时的钩子，返回字段为 response, file, fileList</td>\n<td>Function</td>\n<td></td>\n</tr>\n<tr>\n<td>onError</td>\n<td>文件上传失败时的钩子，返回字段为 error, file, fileList</td>\n<td>Function</td>\n<td></td>\n</tr>\n<tr>\n<td>onRemove</td>\n<td>文件列表移除文件时的钩子，返回字段为 file, fileList</td>\n<td>Function</td>\n<td></td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="slot">slot</h3>\n<table>\n<thead>\n<tr>\n<th>slot名称</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>不具名slot</td>\n<td>触发上传组件的控件</td>\n</tr>\n</tbody></table>\n</div>\n\n\n\n\n<details>\n  <summary>查看右侧demo源码</summary>\n  <div class="r-doc-card">\n  <textarea rows="50" cols=""><template>\n  <div class="upload-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Uploader</Titlebar>\n    <br>\n    <r-uploader action="/test/fileUpload"\n            :defaultFileList="fileList"\n            :disabled="fileList.length >= 3"\n            :onSuccess="handleSuccess"\n            :onRemove="handleRemove"></r-uploader>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      fileList: [{\n        url: \'https://t7.baidu.com/it/u=737555197,308540855&fm=193&f=GIF\'\n      }]\n    }\n  },\n  methods: {\n    onBack () {\n      this.$router.push(\'/\')\n    },\n    handleSuccess (res, file, fileList) {\n      this.fileList = fileList\n    },\n    handleRemove (file, fileList) {\n      this.fileList = fileList\n    }\n  }\n}\n<\/script>\n\n<style lang="less" scoped>\n.upload-example {\n  background-color: #bebebe;\n}\n</style>\n</textarea>\n  </div>\n</details>\n'},978:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="form-css效果">Form css效果</h1>\n<p>通过设置mode=&quot;to-top&quot;参数，给title添加css动画效果</p>\n<blockquote>\n<p><font color="red">FormCss props 同Form组件</font></p>\n</blockquote>\n<details>\n  <summary>查看右侧demo源码</summary>\n  <textarea rows="50" cols=""><template>\n  <div class="form-example-css">\n    <Titlebar theme="b"\n              @on-back="onBack">FormCss效果</Titlebar>\n    <Form :select-arrow-style="{color: \'#C8C7CC\'}"\n          :input-clear-style="{color: \'#C8C7CC\'}"\n          @on-iscompleted="setIsCompleted"\n          text-position="left"\n          placeholder=""\n          mode="to-top"\n          ref="form">\n      <Input :title="user.title"\n             :name="user.name"\n             :maxlength="user.maxlength"\n             :rules="user.rules"\n             v-model="user.value"></Input>\n      <Input v-bind="age"\n             v-model="age.value"></Input>\n      <Input v-bind="amount"\n             v-model="amount.value"\n             @on-input="handleInputAmount"></Input>\n      <Input v-bind="phone"\n             v-model="phone.value"></Input>\n      <Input v-bind="email"\n             v-model="email.value"></Input>\n      <Input v-bind="IDCard"\n             v-model="IDCard.value"></Input>\n      <Select v-bind="loanTerm"\n              v-model="loanTerm.value"></Select>\n      <SelectDate :title="birthday.title"\n                  :name="birthday.name"\n                  v-model="birthday.value"></SelectDate>\n\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn"\n             @click="doReset">重设</div>\n      </div>\n    </Form>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      user: {\n        "type": "text",\n        "title": "本人姓名",\n        "name": "bureau_user_name",\n        "value": "zyx",\n        "placeholder": "",\n        "readonly": 0,\n        "maxlength": 6,\n        "rules": [{\n          "required": true,\n          "message": "姓名不能为空",\n          "trigger": "blur"\n        }, {\n          validator (rule, value, callback) {\n            if (value.length < 3) {\n              return new Error(\'姓名最少三个字\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        }]\n      },\n      age: {\n        "type": "number",\n        "title": "年龄",\n        "name": "age",\n        "value": "",\n        "placeholder": "",\n        "fixed": 0,\n        "unit": "",\n        "readonly": 0,\n        "maxlength": 3\n      },\n      amount: {\n        "type": "number",\n        "title": "申请金额",\n        "name": "application_amount",\n        "value": "10000.00",\n        "fixed": 2,\n        "placeholder": "",\n        "unit": "",\n        "readonly": 0,\n        "maxlength": 8,\n        "prepend": "RP"\n      },\n      phone: {\n        "type": "tel",\n        "title": "手机号码",\n        "name": "phone_number",\n        "value": "13122222222",\n        "unit": "",\n        "placeholder": "",\n        "readonly": 0,\n        "maxlength": 11\n      },\n      email: {\n        "type": "email",\n        "title": "邮箱",\n        "name": "email",\n        "value": "test@qq.com",\n        "readonly": 0,\n        "placeholder": "",\n        "emailList": [\n          "qq.com",\n          "sina.com",\n          "sohu.com",\n          "163.com",\n          "foxmail.com",\n          "gmail.com",\n          "rong360.com",\n          "edu.cn",\n          "outlook.com",\n          "vip.qq.com",\n          "126.com"\n        ],\n        "rules": [{\n          "required": true,\n          "message": "邮箱不能为空",\n          "trigger": "blur"\n        },\n        {\n          "type": "email",\n          "message": "邮箱格式不正确",\n          "trigger": "blur"\n        }]\n      },\n      IDCard: {\n        "type": "IDCard",\n        "title": "本人身份证号码",\n        "name": "user_id",\n        "value": "110101199003079614",\n        "placeholder": "",\n        "readonly": 0\n      },\n      loanTerm: {\n        title: "贷款期限",\n        name: "loan_term",\n        value: \'\',\n        placeholder: "",\n        data: [{\n          text: "1个月",\n          value: "1"\n        }, {\n          text: "2个月",\n          value: \'2\'\n\n        }, {\n          text: "36个月",\n          value: "36"\n        }, {\n          text: "自己输入",\n          value: "0",\n          children: [{\n            componentType: \'Input\',\n            type: "number",\n            title: "输入您的贷款期限",\n            name: "m_term",\n            value: "",\n            unit: "个月",\n            placeholder: "请输入您期望的贷款期限",\n            onInput: (e, component) => {\n              let value = e.target.value\n              if (value > 12) {\n                component.setCurrentValue(12)\n                component.validateState = \'error\'\n                component.validateMessage = \'贷款期限最长12个月，以为您变更为12个月\'\n              }\n            },\n            rules: [{\n              validator (rule, value, callback, source, options) {\n                let { component } = options\n                if (value === \'\') {\n                  return new Error(component.title + \'不能为空\')\n                } else if (value > 12) {\n                  // component.setCurrentValue(12, {validateDisabled: true})\n                  // return new Error(\'贷款期限最长12个月，以为您变更为12个月\')\n                }\n                callback()\n              },\n              trigger: \'blur\'\n            }]\n          }]\n        }],\n        rules: [{\n          validator (rule, value, callback) {\n            if (value == 1) {\n              return new Error(\'目前暂不支持1个月的贷款，请选择贷款期限\')\n            } else if (value == \'\') {\n              return new Error(\'贷款期限不能为空\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        }]\n      },\n      birthday: {\n        title: \'妹妹出生日期\',\n        name: \'birthday\',\n        value: \'\',\n        valueFormat: \'yyyy/mm/dd\',\n        textFormat: \'yyyy年mm月dd日\'\n      },\n      fields: [],\n      isCompleted: false\n    }\n  },\n  // computed: {\n  //   isCompleted () {\n  //     return this.fields.every(field => {\n  //       if (field.fieldRules.length) {\n  //         return field.currentValue != \'\'\n  //       } else {\n  //         return true\n  //       }\n  //     })\n  //   }\n  // },\n  mounted () {\n    this.fields = this.$refs.form.fields\n  },\n  methods: {\n    handleInputAmount (e, component) {\n      let value = e.target.value\n      if (value > 10000) {\n        component.setCurrentValue(10000)\n        component.validateState = \'error\'\n        component.validateMessage = \'最大申请金额为10000元，已为你自动变更为10000元\'\n      }\n    },\n    doSubmit () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.join(\'<br/>\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    doSubmit2 () {\n      this.$refs.form.validateOneByOne((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    setIsCompleted (value) {\n      this.isCompleted = value\n    },\n    doReset () {\n      this.$refs.form.resetFields()\n    },\n    onEnter (e) {\n      console.log(e.target.value)\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.btn-wrap {\n  display: flex;\n  .btn {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    flex: 1;\n    margin: 10px;\n    padding: 10px 0;\n    text-align: center;\n    background-color: darkcyan;\n    color: #fff;\n    font-size: 12px;\n    &.disabled {\n      background-color: gray;\n    }\n  }\n}\n.form-example-css {\n  .result {\n    font-size: 14px;\n    color: #333333;\n    padding: 10px;\n    background-color: lightgray;\n  }\n}\n</style>\n</textarea>\n</details>\n'},6080:function(n,t,e){"use strict";e.r(t);t.default='<h1 id="formdynamicregistration-动态注册">FormDynamicRegistration 动态注册</h1>\n<p>表单展示项目不固定，展示项由后端接口返回决定。</p>\n<blockquote>\n<p><font color="red">FormDynamicRegistration props 同Form组件</font></p>\n</blockquote>\n<details>\n  <summary>查看右侧demo源码</summary>\n  <textarea rows="50" cols=""><template>\n  <div class="form-reg-example">\n    <Titlebar theme="b"\n              @on-back="onBack">Form 动态注册</Titlebar>\n    <Form :select-arrow-style="{color: \'#C8C7CC\'}"\n          :input-clear-style="{color: \'#C8C7CC\'}"\n          @on-iscompleted="setIsCompleted"\n          text-position="right"\n          placeholder="请输入"\n          ref="form">\n      <components v-for="item in viewData.firstLevel"\n                  v-model="item.value"\n                  v-bind="item"\n                  :is="item.componentType"\n                  :key="item.id"\n                  ref="cpList" />\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']"\n             @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn"\n             @click="doReset">重设</div>\n      </div>\n    </Form>\n    <div class="result">\n      <p v-for="(field, index) in fields"\n         :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _ from \'lodash\'\n\nlet basicInfo = {\n  "status": 1,\n  "data": {\n    "basic": [{\n      "rely_policy_id": 0,\n      "id": "123277",\n      "category_id": "1",\n      "title": "本人姓名",\n      "placeholder": "",\n      "var_name": "user_name",\n      "type": "text",\n      "verify_type": "text",\n      "data": "",\n      "unit": "",\n      "material_type": "100",\n      "info_property": "1",\n      "level": 1,\n      "desc": "",\n      "value": "",\n      "readonly": 0,\n      "maxlength": 800,\n      "rules": [{\n        "required": true,\n        "message": "姓名不能为空",\n        "trigger": "blur"\n      }]\n    }, {\n      "rely_policy_id": 0,\n      "id": "323472",\n      "category_id": "1",\n      "title": "本人身份证号码",\n      "var_name": "user_id",\n      "type": "5",\n      "verify_type": "50",\n      "data": "",\n      "unit": "",\n      "material_type": "100",\n      "info_property": "1",\n      "level": 1,\n      "desc": "",\n      "value": "110101199003079614",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "832336",\n      "category_id": "2",\n      "title": "GPS信息",\n      "var_name": "gps_location",\n      "type": "5",\n      "verify_type": "0",\n      "data": "",\n      "unit": "",\n      "material_type": "0",\n      "info_property": "0",\n      "level": 1,\n      "desc": "",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "612321392",\n      "category_id": "1",\n      "title": "申请金额",\n      "var_name": "application_amount",\n      "type": "9",\n      "verify_type": "0",\n      "data": "",\n      "unit": "",\n      "material_type": "107",\n      "info_property": "1",\n      "level": 1,\n      "desc": "",\n      "value": "10000.00",\n      "fixed": 2,\n      "readonly": 0,\n      "maxlength": 8,\n      "onInput": (e, component) => {\n        let value = e.target.value\n        if (value > 10000) {\n          component.setCurrentValue(10000)\n          component.validateState = \'error\'\n          component.validateMessage = \'最大申请金额为10000元，已为你自动变更为10000元\'\n        }\n      }\n    }, {\n      "rely_policy_id": 0,\n      "id": "84821212",\n      "category_id": "1",\n      "title": "贷款申请期限",\n      "var_name": "apply_term",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": 90,\n        "desc": "3个月",\n        "rely": []\n      }, {\n        "value": 180,\n        "desc": "6个月",\n        "rely": []\n      }, {\n        "value": 360,\n        "desc": "12个月",\n        "rely": []\n      }, {\n        "value": 540,\n        "desc": "18个月",\n        "rely": []\n      }, {\n        "value": 720,\n        "desc": "24个月",\n        "rely": []\n      }],\n      "unit": "",\n      "material_type": "107",\n      "info_property": "0",\n      "level": 1,\n      "desc": "",\n      "value": "",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "163",\n      "category_id": "1",\n      "title": "可接受最高月还款额度（元）",\n      "var_name": "max_repayment",\n      "type": "9",\n      "verify_type": "0",\n      "data": "",\n      "unit": "元/月",\n      "material_type": "100",\n      "info_property": "0",\n      "level": 1,\n      "desc": "",\n      "value": "2000",\n      "readonly": 0,\n      "maxlength": 8\n    }, {\n      "rely_policy_id": 0,\n      "id": "45256233",\n      "category_id": "112",\n      "title": "教育程度",\n      "var_name": "user_education",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "硕士及以上",\n        "rely": []\n      }, {\n        "value": "2",\n        "desc": "本科",\n        "rely": []\n      }, {\n        "value": "3",\n        "desc": "大专",\n        "rely": []\n      }, {\n        "value": "4",\n        "desc": "中专/高中及以下",\n        "rely": []\n      }],\n      "unit": "",\n      "material_type": "100",\n      "info_property": "1",\n      "level": 1,\n      "desc": "",\n      "value": "2",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "6351222",\n      "category_id": "1",\n      "title": "现单位是否缴纳社保",\n      "var_name": "social_security",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "缴纳本地社保",\n        "rely": []\n      }, {\n        "value": "2",\n        "desc": "未缴纳社保",\n        "rely": []\n      }],\n      "unit": "",\n      "material_type": "101",\n      "info_property": "1",\n      "level": 1,\n      "desc": "",\n      "value": "2",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "26",\n      "category_id": "1",\n      "title": "车辆情况",\n      "var_name": "auto_type",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "无车",\n        "rely": []\n      }, {\n        "value": "2",\n        "desc": "本人名下有车，无贷款",\n        "rely": []\n      }, {\n        "value": "3",\n        "desc": "本人名下有车，有按揭贷款",\n        "rely": []\n      }, {\n        "value": "4",\n        "desc": "本人名下有车，但已被抵押",\n        "rely": []\n      }, {\n        "value": "5",\n        "desc": "其他（请备注）",\n        "rely": []\n      }],\n      "unit": "",\n      "material_type": "103",\n      "info_property": "0",\n      "level": 1,\n      "desc": "",\n      "value": "1",\n      "readonly": 0\n    }, {\n      "rely_policy_id": 0,\n      "id": "26489",\n      "category_id": "1",\n      "title": "职业类别",\n      "var_name": "op_type",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "企业主",\n        "rely": ["20996", "28905"]\n      }, {\n        "value": "2",\n        "desc": "个体工商户",\n        "rely": ["20996", "28905"]\n      }, {\n        "value": "4",\n        "desc": "上班人群",\n        "rely": ["5998", "5256"]\n      }, {\n        "value": "5",\n        "desc": "学生",\n        "rely": []\n      }, {\n        "value": "10",\n        "desc": "无固定职业",\n        "rely": ["832"]\n      }],\n      "unit": "",\n      "material_type": "101",\n      "info_property": "0",\n      "level": 1,\n      "desc": "",\n      "value": "4",\n      "readonly": 0\n    }, {\n      "rely_policy_id": "26489",\n      "id": "5998",\n      "category_id": "1",\n      "title": "月工资收入（元）",\n      "var_name": "user_income_by_card",\n      "type": "9",\n      "verify_type": "0",\n      "data": "",\n      "unit": "元",\n      "material_type": "101",\n      "info_property": "1",\n      "level": 2,\n      "desc": "",\n      "value": "7000",\n      "readonly": 0,\n      "onInput": (e, component) => {\n        let value = e.target.value\n        if (value > 60000) {\n          component.setCurrentValue(60000)\n          component.validateState = \'error\'\n          component.validateMessage = \'月工资最多为60000元，已为你自动变更为60000元\'\n        }\n      }\n    }, {\n      "rely_policy_id": "26489",\n      "id": "5256",\n      "category_id": "1",\n      "title": "现单位工作年限",\n      "var_name": "work_period",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "0-5个月",\n        "rely": []\n      }, {\n        "value": "2",\n        "desc": "6-12个月",\n        "rely": []\n      }, {\n        "value": "3",\n        "desc": "1-3年",\n        "rely": []\n      }, {\n        "value": "4",\n        "desc": "3-7年",\n        "rely": []\n      }, {\n        "value": "5",\n        "desc": "7年以上",\n        "rely": []\n      }],\n      "unit": "个月",\n      "material_type": "101",\n      "info_property": "1",\n      "level": 2,\n      "desc": "",\n      "value": "1",\n      "readonly": 0\n    }, {\n      "rely_policy_id": "26489",\n      "id": "20996",\n      "category_id": "1",\n      "title": "经营流水（对公流水）",\n      "var_name": "corporate_flow",\n      "type": "9",\n      "verify_type": "0",\n      "data": "",\n      "unit": "",\n      "material_type": "102",\n      "info_property": "0",\n      "level": 2,\n      "desc": "",\n      "readonly": 0\n    }, {\n      "rely_policy_id": "26489",\n      "id": "28905",\n      "category_id": "1",\n      "title": "经营年限",\n      "var_name": "operating_year",\n      "type": "2",\n      "verify_type": "0",\n      "data": [{\n        "value": "1",\n        "desc": "0-3个月",\n        "rely": []\n      }, {\n        "value": "2",\n        "desc": "3-6个月",\n        "rely": []\n      }, {\n        "value": "3",\n        "desc": "7-12个月",\n        "rely": []\n      }, {\n        "value": "4",\n        "desc": "1-2年",\n        "rely": []\n      }, {\n        "value": "5",\n        "desc": "3-4年",\n        "rely": []\n      }, {\n        "value": "6",\n        "desc": "5年以上",\n        "rely": []\n      }],\n      "unit": "",\n      "material_type": "102",\n      "info_property": "1",\n      "level": 2,\n      "desc": "",\n      "readonly": 0\n    }, {\n      "rely_policy_id": "26489",\n      "id": "832",\n      "category_id": "1",\n      "title": "月平均收入",\n      "var_name": "monthly_average_income",\n      "type": "9",\n      "verify_type": "0",\n      "unit": "",\n      "material_type": "101",\n      "info_property": "0",\n      "level": 2,\n      "desc": "",\n      "value": "8000",\n      "readonly": 0\n    }],\n    "loan_amount_min": "3000",\n    "loan_amount_max": "100000",\n    "is_pop": 1,\n    "pop_str": "xxxx"\n  }\n}\n\nfunction componentfactory (type) {\n  let component = { componentType: \'Input\', verifyType: \'text\' };\n  switch (type) {\n    case "3":\n    case "4":\n    case "9":\n      component = {\n        componentType: \'Input\',\n        verifyType: \'number\'\n      }\n      break;\n    case "email":\n      component = {\n        componentType: \'Input\',\n        verifyType: \'email\'\n      }\n      break;\n    case "50":\n      component = {\n        componentType: \'Input\',\n        verifyType: \'IDCard\'\n      }\n      break;\n    case "select":\n    case "2":\n    case "1":\n      component = {\n        componentType: \'Select\',\n        verifyType: \'\'\n      }\n      break;\n  }\n  return component;\n}\n\nexport default {\n  data () {\n    let basic = basicInfo.data.basic,\n      basicMap = {},\n      firstLevel = []\n    _.each(basic, item => {\n      let type = item.verify_type == 0 ? item.type : item.verify_type\n      item.componentType = componentfactory(type).componentType\n      item.type = componentfactory(type).verifyType\n      // 用户姓名特殊校验\n      if (item.id == 123277) {\n        item.rules.push({\n          validator (rule, value, callback) {\n            if (value.length < 3) {\n              return new Error(\'姓名最少三个字\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        })\n      }\n      // 申请金额不能为0\n      if (item.id == 612321392) {\n        item.rules = [{ required: true, message: \'***申请金额不能为空***\', trigger: \'blur\' }]\n        item.rules.push({\n          validator (rule, value, callback) {\n            if (value == 0) {\n              return new Error(\'申请金额不能为零！\')\n            }\n            callback()\n          },\n          trigger: \'blur\'\n        })\n      }\n      if (item.id == 832336) {\n        item.componentType = \'Input\'\n        item.type = \'hidden\'\n        item.rules = []\n        if (window.navigator.geolocation) {\n          window.navigator.geolocation.getCurrentPosition && window.navigator.geolocation.getCurrentPosition(function (position) {\n            // coords.latitude十进制数的纬度\n            // coords.longitude十进制数的经度\n            item.value = position.coords.longitude + \',\' + position.coords.latitude\n          }, function () { }, {\n            enableHighAccuracy: true,\n            timeout: 45000\n          })\n        } else {\n          _.remove(basic, { id: "836" })\n          item.value = \'无法获取gps\'\n          console.log(\'Your browser does not natively support geolocation.\');\n        }\n      }\n      // basic生成map机构，方便数据查找\n      basicMap[item.id] = item\n      // 数据分级\n      if (item.level == 1) firstLevel.push(item)\n      // 添加name属性\n      item.name = item.id\n      item.var_name = \'\'\n    })\n    // 构造rSelect的children数据\n    _.each(basic, item => {\n      if (item.componentType == \'Select\') {\n        item.data.forEach(option => {\n          option.text = option.desc\n          if (option.rely && option.rely.length) {\n            option.children = option.rely.map(id => {\n              return basicMap[id]\n            })\n          }\n        })\n      }\n    })\n\n    let userbasicinfo = {\n      basic: basic,\n      firstLevel: firstLevel\n    }\n\n    return {\n      viewData: userbasicinfo,\n      fields: [],\n      isCompleted: false\n    }\n  },\n  // computed: {\n  //   isCompleted () {\n  //     return this.fields.every(field => {\n  //       if (field.fieldRules.length) {\n  //         return field.currentValue != \'\'\n  //       } else {\n  //         return true\n  //       }\n  //     })\n  //   }\n  // },\n  mounted () {\n    this.fields = this.$refs.form.fields\n  },\n  methods: {\n    doSubmit () {\n      this.$refs.form.validate((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage.join(\'<br/>\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    doSubmit2 () {\n      this.$refs.form.validateOneByOne((valid, validateMessage) => {\n        if (valid) {\n          this.$dialog({\n            propsData: {\n              message: this.$refs.form.getValue().map(field => `<p class="ta-l fs-14"><span class="fw-b">${field.title}:</span>${field.value}</p>`).join(\'\')\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n          console.log(\'getValue\', this.$refs.form.getValue())\n          console.log(\'getSerializeValue\', this.$refs.form.getSerializeValue())\n          console.log(\'getObjectValue\', this.$refs.form.getObjectValue())\n        } else {\n          this.$dialog({\n            propsData: {\n              message: validateMessage\n            },\n            methods: {\n              onConfirm () {\n                this.remove()\n              }\n            }\n          })\n        }\n      })\n    },\n    setIsCompleted (value) {\n      this.isCompleted = value\n    },\n    doReset () {\n      this.$refs.form.resetFields()\n    },\n    onEnter (e) {\n      console.log(e.target.value)\n    },\n    onBack () {\n      this.$router.push(\'/\')\n    }\n  }\n}\n<\/script>\n\n<style lang="less">\n.btn-wrap {\n  display: flex;\n  .btn {\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    flex: 1;\n    margin: 10px;\n    padding: 10px 0;\n    text-align: center;\n    background-color: darkcyan;\n    color: #fff;\n    font-size: 12px;\n    &.disabled {\n      background-color: gray;\n    }\n  }\n}\n.form-reg-example {\n  .result {\n    font-size: 14px;\n    color: #333333;\n    padding: 10px;\n    background-color: lightgray;\n  }\n}\n</style>\n</textarea>\n</details>\n'},8829:function(n,t,e){"use strict";e.r(t);t.default='<div class="r-doc-card">\n\n<h3 id="介绍">介绍</h3>\n<p>rong-ui2 是融360风格的移动端组件库。使用 Vue 语言来编写，帮助研发人员提升开发效率，改善开发体验。</p>\n</div>\n\n<div class="r-doc-card">\n\n<h3 id="特性">特性</h3>\n<ul>\n<li>20+ 个高质量组件，覆盖移动端主流场景</li>\n<li>提供丰富的中英文文档和组件示例</li>\n<li>支持按需引入和 Tree Shaking</li>\n</ul>\n</div>\n'},7825:function(n,t,e){"use strict";e.r(t);t.default='<div class="r-doc-card">\n\n<h3 id="安装">安装</h3>\n<pre><code class="language-bash">npm install rong-ui2 --save\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="npm-使用示例">NPM 使用示例</h3>\n<h4 id="按需引用（推荐）">按需引用（推荐）</h4>\n<pre><code class="language-js">npm install babel-plugin-import --save-dev\n\n// .babelrc\n{\n  &quot;plugins&quot;: [[&quot;import&quot;, {\n    &quot;libraryName&quot;: &quot;rong-ui2&quot;,\n    &quot;libraryDirectory&quot;: &quot;es&quot;,\n    &quot;style&quot;: &quot;css&quot;\n  }]]\n}\n\n\nimport {Titlebar, Button} from &#39;rong-ui2&#39;;\nVue.use(Titlebar)\nVue.use(Button)\n</code></pre>\n<details>\n  <summary>v1.2.3之前按需加载配置方式</summary>\n  <pre>\n  // .babelrc\n  {\n    "plugins": [["import", {\n      "libraryName": "rong-ui2",\n      "libraryDirectory": "src/components"\n    }]]\n  }\n\n<p>  注意：项目需要安装less文件：\n  npm install less less-loader --save-dev （低版本可以用less@^2.7.2 less-loader@^4.0.3）\n  </pre></p>\n</details>\n\n\n<h4 id="导入全部组件（不推荐）">导入全部组件（不推荐）</h4>\n<p>rong-ui2 支持一次性导入所有组件，引入所有组件会<strong>增加代码包体积</strong>，因此不推荐这种做法</p>\n<pre><code class="language-js">import RongUi2 from &#39;rong-ui2&#39;;\nimport &#39;rong-ui2/lib/style.css&#39;\nVue.use(RongUi2)\n</code></pre>\n<details>\n  <summary>v1.2.3之前导入全部组件</summary>\n  <pre>\n  import RongUi2 from \'rong-ui2\';\n  import \'rong-ui2/dist/styles/rong-ui.css\'\n  Vue.use(RongUi2)\n  </pre>\n</details>\n\n<h4 id="手动按需引入组件（不推荐）">手动按需引入组件（不推荐）</h4>\n<p>在不使用任何构建插件的情况下，可以手动引入需要使用的组件和样式。</p>\n<pre><code class="language-js">// 引入组件脚本\nimport Button from &#39;rong-ui2/es/button/index&#39;;\n// 引入组件样式\n// 若组件没有样式文件，则无须引入\nimport &#39;rong-ui2/es/button/style/index&#39;;\n</code></pre>\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="cdn-安装使用示例">CDN 安装使用示例</h3>\n<pre><code class="language-js">引入全部组件\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/index.js\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/style.css\n\n...\n\nrong-ui2/lib/ 文件夹下含有所有组件的单独打包，可单独引用某个组件，如：\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/button/index.js\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/button/style/index.css\n\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/titlebar/index.js\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/titlebar/style/index.css\n\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/flex-fixed/index.js\nhttps://cdn.jsdelivr.net/npm/rong-ui2/lib/flex-fixed/style/index.css\n...\n</code></pre>\n<details>\n  <summary>v1.2.3之前cdn引入方式</summary>\n  <pre>\n  https://cdn.jsdelivr.net/npm/rong-ui2/dist/js/rong-ui.js\n  https://cdn.jsdelivr.net/npm/rong-ui2/dist/styles/rong-ui.css\n  注意：v1.2.3之前版本不支持cdn方式按需引入\n  </pre>\n</details>\n\n</div>\n\n\n\n<div class="r-doc-card">\n\n<h3 id="使用">使用</h3>\n<p>Dialog提示框、Toast弹框、Loading加载中、Keyboard虚拟数字键盘 均以挂载到Vue.prototype，引入后，直接使用$dialog(options),$toast(options),$loading(options),$keyboard(options)使用</p>\n<p>其他组件未挂载到Vue.prototype上，组件名均已&#39;r-组件小写&#39;</p>\n<p>template中格式如下：</p>\n<pre><code class="language-html">&lt;r-titlebar&gt;&lt;/r-titlebar&gt;\n&lt;r-button&gt;&lt;/r-button&gt;\n&lt;r-flexfixed&gt;&lt;/r-flexfixed&gt;\n&lt;r-scrollarea&gt;&lt;/r-scrollarea&gt;\n\n...\n\n旧版使用PascalCase，后续可能会不兼容\n&lt;Titlebar theme=&quot;a&quot; title=&quot;Title标题&quot;&gt;&lt;/Titlebar&gt;\n</code></pre>\n</div>\n\n\n'},107:function(n,t,e){"use strict";e.r(t)},9129:function(n,t,e){"use strict";e.r(t)},4673:function(n,t,e){"use strict";e.r(t),e.d(t,{__esModule:function(){return d.X},default:function(){return a}});var d=e(4293),o=d.Z,a=(0,e(1900).Z)(o,(function(){var n=this,t=n.$createElement,d=n._self._c||t;return d("div",{staticClass:"r-doc"},[n._m(0),n._v(" "),d("div",{staticClass:"r-doc-nav"},n._l(n.nav,(function(t,e){return d("div",{key:e,staticClass:"r-doc-nav__group"},[d("div",{staticClass:"r-doc-nav__title"},[n._v(n._s(t.title))]),n._v(" "),n._l(t.children,(function(t){return d("div",{directives:[{name:"show",rawName:"v-show",value:t.show,expression:"item.show"}],key:t.name,staticClass:"r-doc-nav__item"},[d("router-link",{attrs:{to:{name:t.name},title:t.desc}},[n._v(n._s(t.name)+" "),d("span",[n._v(n._s(t.title))])])],1)}))],2)})),0),n._v(" "),d("div",{staticClass:"r-doc-container"},[d("router-view")],1),n._v(" "),d("div",{staticClass:"r-doc-simulator"},[d("div",{staticClass:"phone-status-bar"},[d("img",{attrs:{src:e(6342)}}),n._v(" "),d("input",{attrs:{type:"text"},domProps:{value:n.pageUrl}})]),n._v(" "),d("iframe",{attrs:{src:n.pageUrl,frameborder:"0",marginwidth:"0",marginheight:"0"}})])])}),[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"r-doc-header"},[e("div",{staticClass:"r-doc-header__logo"},[e("span",{staticClass:"r-doc-header__title"},[n._v("Rong-ui2")]),n._v(" "),e("span",{staticClass:"r-doc-header__subtitle"},[n._v("(适用于 Vue2)")])])])}],!1,null,null,null).exports},1539:function(n,t,e){var d={"./action-sheet/README.md":389,"./button/README.md":82,"./checkbox/README.md":8499,"./date-picker/README.md":681,"./dialog/README.md":281,"./flex-fixed/README.md":5984,"./form/README.md":3700,"./input/README.md":7866,"./loading/README.md":1359,"./radio/README.md":2963,"./range/README.md":2420,"./select-date/README.md":5506,"./select/README.md":8752,"./select2/README.md":5249,"./select3/README.md":1527,"./steps/README.md":6560,"./swiper/README.md":7301,"./switch/README.md":6580,"./text-scroll/README.md":8978,"./titlebar/README.md":512,"./toast/README.md":2762,"./uploader/README.md":3441};function o(n){var t=a(n);return e(t)}function a(n){if(!e.o(d,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return d[n]}o.keys=function(){return Object.keys(d)},o.resolve=a,n.exports=o,o.id=1539},1243:function(n,t,e){var d={"./form-css/README.md":978,"./form-dynamic-registration/README.md":6080,"./introduce/README.md":8829,"./quick-start/README.md":7825};function o(n){var t=a(n);return e(t)}function a(n){if(!e.o(d,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return d[n]}o.keys=function(){return Object.keys(d)},o.resolve=a,n.exports=o,o.id=1243},6342:function(n,t,e){"use strict";n.exports=e.p+"img/phtitle..png?t=74a7ddf"},9455:function(n){"use strict";n.exports=JSON.parse('{"docs":{"name":"指南","children":[{"name":"intro","title":"介绍","show":true},{"name":"start","title":"快速上手","show":true}]},"nav":[{"name":"Guide","title":"开发指南","children":[{"name":"Introduce","title":"介绍","type":"src","show":true,"author":"zyx"},{"name":"QuickStart","title":"快速上手","type":"src","show":true,"author":"zyx"}]},{"name":"feedback","title":"操作反馈","children":[{"name":"Dialog","type":"component","title":"对话框","show":true,"author":"zyx"},{"name":"Loading","type":"component","title":"加载中","show":true,"author":"zyx"},{"name":"Toast","type":"component","title":"提示","show":true,"author":"zyx"},{"name":"ActionSheet","title":"动作面板","type":"component","show":true,"author":"zyx"}]},{"name":"layout","title":"布局组件","children":[{"name":"FlexFixed","title":"固定","type":"component","show":true,"desc":"简便地创建header和footer布局","author":"zyx"}]},{"name":"nav","title":"导航组件","children":[{"name":"Titlebar","title":"导航栏","type":"component","desc":"头部导航","show":true,"author":"zyx"}]},{"name":"Base","title":"基础组件","children":[{"name":"Button","title":"按钮","type":"component","show":true,"author":"zyx"}]},{"name":"dentry","title":"数据录入","children":[{"name":"Input","title":"输入框","type":"component","desc":"输入框组件","show":true,"author":"zyx"},{"name":"Select","title":"选择器","type":"component","desc":"提供多个选项集合供用户选择","show":true,"author":"zyx"},{"name":"Select2","title":"选择器","type":"component","desc":"提供多个选项集合供用户选择","show":true,"author":"zyx"},{"name":"Select3","title":"选择器","type":"component","desc":"性别、是否等选择","show":true,"author":"zyx"},{"name":"SelectDate","title":"日期选择器","type":"component","desc":"日期选择","show":true,"author":"zyx"},{"name":"Checkbox","title":"复选按钮","type":"component","desc":"复选按钮","show":true,"author":"zyx"},{"name":"Radio","type":"component","title":"单选按钮","desc":"单选按钮","show":true,"author":"zyx"},{"name":"DatePicker","type":"component","title":"日期选择器","desc":"提供多个选型集合供用户选择,支持单列选择和多列级联,通常与弹出层配合使用","show":true,"author":"zyx"},{"name":"Uploader","title":"上传","type":"component","desc":"上传文件、图片","show":true,"author":"zyx"},{"name":"Switch","title":"开关","type":"component","desc":"滑动开关","show":true,"author":"zyx"},{"name":"Form","title":"表单","type":"component","desc":"表单","show":true,"author":"richard1015"},{"name":"FormDynamicRegistration","title":"表单动态注册","type":"src","desc":"form表单项不固定","show":false,"author":"zyx"},{"name":"FormCss","title":"表单Css效果","type":"src","desc":"给title添加动画效果","show":false,"author":"zyx"}]},{"name":"display","title":"展示组件","children":[{"name":"TextScroll","type":"component","title":"文字滚动","desc":"跑马灯效果","show":true,"author":"zyx"},{"name":"Swiper","type":"component","title":"轮播","desc":"轮播组件","show":true,"author":"zyx"},{"name":"Steps","type":"component","title":"步骤条","desc":"用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置","show":true,"author":"zyx"},{"name":"Range","type":"component","title":"滑动选择","desc":"在范围区间内选择","show":true,"author":"zyx"}]}]}')}},function(n){n.O(0,[736],(function(){return t=3140,n(n.s=t);var t}));n.O()}]);