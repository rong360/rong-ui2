(self.webpackChunkrong_ui2=self.webpackChunkrong_ui2||[]).push([[143],{7204:function(t,e,d){"use strict";var o=d(5318);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(d(8128));d(7004);var r=function(t){t.directive("hljs",(function(t){var e=t.querySelectorAll("pre code");Array.prototype.forEach.call(e,a.default.highlightBlock)}))};e.default=r},3140:function(t,e,d){"use strict";var o=d(5318),a=o(d(538)),r=o(d(2537)),n=o(d(8675)),l=o(d(7204));d(9129),d(107),a.default.use(l.default),a.default.config.debug=!0,new a.default({router:r.default,render:function(t){return t(n.default)}}).$mount("#app")},2537:function(t,e,d){"use strict";var o=d(5318);Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var a=o(d(538)),r=o(d(8345)),n=d(9455);a.default.use(r.default);var l=[];n.nav.forEach((function(t){t.children.forEach((function(t){var e=t.name,o=t.type;t.desc;l.push({path:"/".concat(e.toLowerCase()),name:e,component:{render:function(t){var a={},r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase();try{a="component"===o?d(1539)("./".concat(r,"/README.md")):d(1243)("./".concat(r,"/README.md"))}catch(t){a={default:'<div class="error-page">'.concat(t.message," <strong>in ").concat("component"===o?"/packages/":"/src/views/docs/","</div></strong>")}}return t("div",{class:{"markdown-body":!0},domProps:{innerHTML:a.default}})}}})}))})),l.push({path:"*",redirect:function(t){return{path:"/introduce"}}});var i=new r.default({routes:l});e.default=i},4293:function(t,e,d){"use strict";Object.defineProperty(e,"X",{value:!0}),e.Z=void 0;var o=d(9455),a={name:"app",data:function(){return{nav:o.nav,page:""}},mounted:function(){this.page=this.$route.name.toLowerCase()},beforeUpdate:function(){this.page=this.$route.name.toLowerCase()},computed:{pageUrl:function(){return"".concat(location.origin,"/demo.html#/").concat(this.page)}}};e.Z=a},389:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="actionsheet">ActionSheet</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>底部弹出动作菜单面板。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { ActionSheet } from &#39;rong-ui2&#39;;\n\nVue.use(ActionSheet)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-actionsheet v-model=&quot;showActionSheet&quot; title=&quot;标题&quot; :actions=&quot;actions&quot;  @on-select=&quot;handleSelect&quot; @on-close=&quot;handleClose&quot;&gt;&lt;/r-actionsheet&gt;\n</code></pre> <pre><code class="language-js">export default {\n  data () {\n    return {\n      actions: [\n        { name: &#39;选项一&#39;, color: &#39;red&#39; },\n        { name: &#39;选项二&#39;, disabled: true },\n        { name: &#39;选项三&#39; }\n      ],\n      showActionSheet: false\n    }\n  },\n  methods: {\n    handleSelect (item) {\n      this.showActionSheet = false\n    },\n    handleClose () {\n    }\n  }\n}\n</code></pre> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>default</td> <td>自定义面板的展示内容</td> </tr> </tbody></table> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>v-model:show</td> <td>是否显示动作面板</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>actions</td> <td>面板选项列表</td> <td>array</td> <td>[]</td> </tr> <tr> <td>radius</td> <td>是否显示圆角</td> <td>boolean</td> <td><code>true</code></td> </tr> <tr> <td>title</td> <td>面板标题</td> <td>string</td> <td></td> </tr> <tr> <td>showCloseBtn</td> <td>是否显示右上角关闭按钮</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>showCancelBtn</td> <td>是否显示底部取消按钮</td> <td>boolean</td> <td><code>true</code></td> </tr> <tr> <td>cancelBtnText</td> <td>底部取消按钮文案</td> <td>string</td> <td><code>取消</code></td> </tr> </tbody></table> <h3 id="actiions数据结构">actiions数据结构</h3> <table> <thead> <tr> <th>键名</th> <th>说明</th> <th>类型</th> </tr> </thead> <tbody><tr> <td>name</td> <td>标题</td> <td>string</td> </tr> <tr> <td>color</td> <td>选项文字颜色</td> <td>string</td> </tr> <tr> <td>disabled</td> <td>是否为禁用状态</td> <td>boolean</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-select</td> <td>点击选项时触发，禁用或加载状态下不会触发</td> <td>(item, index）</td> </tr> <tr> <td>on-close</td> <td>页面关闭时触发</td> <td>-</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="action-sheet-demo">\n    <Titlebar theme="b" @on-back="onBack">Action Sheet</Titlebar>\n    <div class="p-20">\n      <nav-item @on-click="showActionSheet = true">action sheet</nav-item>\n      <r-actionsheet v-model="showActionSheet" title="标题" :actions="actions" :show-close-btn="true" :radius="true" @on-select="handleSelect" @on-close="handleClose"></r-actionsheet>\n\n      <nav-item @on-click="showCustomActionSheet = true">自定义action sheet内容</nav-item>\n      <action-sheet v-model="showCustomActionSheet">\n        <p>1</p>\n        <p>2</p>\n        <p>3</p>\n        <p>4</p>\n        <p>5</p>\n        <p>6</p>\n        <p>7</p>\n        <p>8</p>\n      </action-sheet>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({message:"",actions:[{name:"选项一",color:"red"},{name:"选项二",disabled:!0},{name:"选项三"}],showActionSheet:!1,showCustomActionSheet:!1}),methods:{handleSelect(e,t){this.message=e.name,this.showActionSheet=!1},handleClose(){},onBack(){this.$router.push("/")}}}<\/script>\n</textarea> </div> </details> '},82:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="button">Button</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>按钮用于触发一个操作，如提交表单。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件。</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Button } from &#39;rong-ui2&#39;;\n\nVue.use(Button)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-button&gt;提交&lt;/r-button&gt;\n</code></pre> </div> <h2 id="代码演示">代码演示</h2> <div class="r-doc-card"> <h3 id="按钮类型">按钮类型</h3> <p>按钮支持 default、warning、disabled 三种种类型，默认为 default。</p> <pre><code class="language-html">&lt;r-button type=&quot;warning&quot;&gt;提交&lt;/r-button&gt;\n&lt;r-button type=&quot;disabled&quot;&gt;提交&lt;/r-button&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th align="left">参数</th> <th align="left">说明</th> <th align="left">类型</th> <th align="left">可选值</th> <th align="left">默认值</th> </tr> </thead> <tbody><tr> <td align="left">type</td> <td align="left">按钮类型</td> <td align="left">string</td> <td align="left"><code>default</code> <code>warning</code> <code>disabled</code></td> <td align="left"><code>default</code></td> </tr> <tr> <td align="left">radius</td> <td align="left">按钮是否有圆角</td> <td align="left">boolean</td> <td align="left"></td> <td align="left">false</td> </tr> <tr> <td align="left">fill</td> <td align="left">背景是否填充</td> <td align="left">boolean</td> <td align="left"></td> <td align="left">true</td> </tr> <tr> <td align="left">className</td> <td align="left">自定义 CSS class</td> <td align="left">string</td> <td align="left"></td> <td align="left"></td> </tr> <tr> <td align="left">style</td> <td align="left">自定义样式</td> <td align="left">CSSProperties</td> <td align="left"></td> <td align="left"></td> </tr> <tr> <td align="left">onClick</td> <td align="left">点击button回调</td> <td align="left">function</td> <td align="left"></td> <td align="left"></td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="button-example">\n    <Titlebar theme="b" @on-back="onBack">Button</Titlebar>\n\n    <div class="title">default</div>\n    <r-button>提交</r-button>\n\n    <div class="title">空心默认圆角按钮（:fill="false" :radius="true"）</div>\n    <Button :fill="false" :radius="true">提交</Button>\n\n    <div class="title">示警按钮（type="warning"）</div>\n    <Button type="warning">提交</Button>\n\n    <div class="title">空心示警按钮(type="warning" :fill="false" :radius="true")</div>\n    <Button type="warning" :fill="false" :radius="true">提交</Button>\n\n    <div class="title">不可用按钮（type="disabled"）</div>\n    <Button type="disabled">提交</Button>\n\n    <div class="title">不可用按钮（type="disabled" :fill="false" :radius="true"）</div>\n    <Button type="disabled" :fill="false" :radius="true">提交</Button>\n\n    <div class="title">自定义（type="dark-yellow", 样式表里定义.r--button-dark-yellow相关样式 ）</div>\n    <Button type="dark-yellow">提交2</Button>\n\n  </div>\n</template>\n\n<script>export default{methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.button-example{margin-top:30px}</style>\n</textarea> </div> </details> '},8499:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="checkbox-复选框">Checkbox 复选框</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>在一组备选项中进行多选。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Checkbox } from &#39;rong-ui2&#39;;\n\nVue.use(Checkbox)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">单个复选框，绑定到布尔值：\n&lt;Checkbox v-model=&quot;checked&quot;&gt;北京&lt;/Checkbox&gt;\n</code></pre> <pre><code class="language-html">多个复选框，绑定到同一个数组：\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;apple&quot;&gt;苹果&lt;/Checkbox&gt;\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;pear&quot;&gt;梨&lt;/Checkbox&gt;\n&lt;Checkbox v-model=&quot;fruitList&quot; value=&quot;banana&quot;&gt;香蕉&lt;/Checkbox&gt;\n</code></pre> </div> <h1 id="api">API</h1> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>checkedValue</td> <td>可以使用 v-model 双向绑定数据</td> <td><code>boolean</code> <code>array</code></td> <td><code>true</code> <code>false</code> <code>[]</code></td> <td><code>true</code></td> </tr> <tr> <td>value</td> <td>复选框的值</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>shape</td> <td>checkbox形状</td> <td>string</td> <td><code>square</code> <code>circle</code> <code>rect</code></td> <td><code>square</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-change</td> <td>点击checkbox回调函数</td> <td>event</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>checkbox标题</td> </tr> <tr> <td>prepend</td> <td>前置内容(v.1.1.4)</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="checkbox-example">\n    <Titlebar theme="b" @on-back="onBack">Checkbox</Titlebar>\n    <div class="fs-14">一，单个复选框，绑定到布尔值：</div>\n    <Checkbox v-model="checked" shape="circle">北京</Checkbox>\n    <div class="fs-14">{{checked}}</div>\n\n    <br><br>\n    <div class="fs-14">二，多个复选框，绑定到同一个数组：</div>\n    <Checkbox v-model="fruitList" value="apple">苹果</Checkbox>\n    <Checkbox v-model="fruitList" value="pear">梨</Checkbox>\n    <Checkbox v-model="fruitList" value="banana">香蕉</Checkbox>\n    <Checkbox v-model="fruitList" value="orange">橘子</Checkbox>\n    <div class="fs-14">{{fruitList}}</div>\n\n    <br>\n    <Checkbox v-model="fruitList" value="apple" shape="circle">苹果</Checkbox>\n    <Checkbox v-model="fruitList" value="pear" shape="circle" iconStyle="font-size: 25px; color: red">梨</Checkbox>\n    <Checkbox v-model="fruitList" value="banana" shape="circle" checkCircleTwoToneColor="red">香蕉</Checkbox>\n    <Checkbox v-model="fruitList" value="orange" shape="circle">橘子</Checkbox>\n    <div class="fs-14">{{fruitList}}</div>\n\n    <br>\n    <div class="fs-14">您需要的贷款额度（单选）</div>\n    <Checkbox v-model="loanLimitList" value="1" shape="rect" @on-change="changeLoanLimit(\'1\')">2万以下</Checkbox>\n    <Checkbox v-model="loanLimitList" value="2" shape="rect" @on-change="changeLoanLimit(\'2\')">2-5万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="3" shape="rect" @on-change="changeLoanLimit(\'3\')">5-10万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="4" shape="rect" @on-change="changeLoanLimit(\'4\')">10-50万</Checkbox>\n    <Checkbox v-model="loanLimitList" value="5" shape="rect" @on-change="changeLoanLimit(\'5\')">50万以上</Checkbox>\n    <div class="fs-14">{{loanLimitList}}</div>\n\n    <br>\n    <div class="fs-14">选择您的资质, 提高贷款成功率（可多选）</div>\n    <Checkbox v-model="qualificationsList" value="1" shape="rect" @on-change="changeQualifications(\'1\')">有房</Checkbox>\n    <Checkbox v-model="qualificationsList" value="2" shape="rect" @on-change="changeQualifications(\'2\')">有车</Checkbox>\n    <Checkbox v-model="qualificationsList" value="3" shape="rect" @on-change="changeQualifications(\'3\')">有公积金</Checkbox>\n    <Checkbox v-model="qualificationsList" value="4" shape="rect" @on-change="changeQualifications(\'4\')">有社保</Checkbox>\n    <Checkbox v-model="qualificationsList" value="5" shape="rect" @on-change="changeQualifications(\'5\')">有保单</Checkbox>\n    <Checkbox v-model="qualificationsList" value="6" shape="rect" @on-change="changeQualifications(\'6\')">有企业</Checkbox>\n    <Checkbox v-model="qualificationsList" value="0" shape="rect" @on-change="changeQualifications(\'0\')">以上都无</Checkbox>\n    <div class="fs-14">{{qualificationsList}}</div>\n\n  </div>\n</template>\n\n<script>export default{data:()=>({checked:!0,fruitList:["apple","pear","banana"],loanLimitList:[],qualificationsList:[]}),methods:{changeLoanLimit(i){this.loanLimitList=[i]},changeQualifications(i){if("0"==i)this.qualificationsList=["0"];else{let i=this.qualificationsList,t=i.findIndex((i=>"0"===i));t>-1&&i.splice(t,1),this.qualificationsList=i}},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.checkbox-example{font-size:16px}</style>\n</textarea> </div> </details> '},681:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="datepicker-时间选择">Datepicker 时间选择</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>时间选择器，支持年月日、日月年、年月、日等维度。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { DatePicker } from &#39;rong-ui2&#39;;\n\nVue.use(DatePicker)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-datepicker v-bind=&#39;config1&#39; @onconfirm=&quot;birthDate&quot;&gt;&lt;/r-datepicker&gt;\n</code></pre> <pre><code class="language-js">...\ndata(){\n    return {\n        config: {\n            value: &#39;2022/10/22&#39;,\n            placeholder: &#39;请选择&#39;,\n            valueFormat: &#39;yyyy/mm/dd&#39;,\n            // textFormat: &#39;yyyy年mm月dd日&#39;,\n            textFormat (val) {\n                return `${val.year.text},${val.month.text.substr(0, 4)},${val.day.text}`\n            },\n            startYear: &#39;&#39;,\n            endYear: &#39;&#39;,\n            offsetYear: &#39;&#39;,\n            yearsLength: &#39;&#39;,\n            disabled: false,\n            language: &#39;en&#39;,\n            pickerFormatter: function (type, val) {\n                // if (type == &#39;year&#39;) {\n                //   return val + &#39;年&#39;\n                // } else if (type == &#39;month&#39;) {\n                //   return val + &#39;月&#39;\n                // } else if (type == &#39;day&#39;) {\n                //   return val + &#39;日&#39;\n                // }\n            },\n            pickerTitle: &#39;hello&#39;,\n            pickerCancelBtnText: &#39;cancel&#39;,\n            pickerConfirmBtnText: &#39;confirm&#39;,\n            columnsOrder: [&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]\n        }\n    }\n},\nmethods: {\n    doConfirm(date){\n        console.log(date);\n    }\n}\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <p><font color="red">特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>value</td> <td>默认显示日期</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>valueFormat</td> <td>value日期格式</td> <td>string, function</td> <td><code>yyyy</code> <code>yyyy/mm</code> <code>yyyy-mm-dd</code> <code>yyyy年</code> <code>yyyy年mm月dd日</code>等</td> <td><code>yyyy/mm/dd</code></td> </tr> <tr> <td>textFormat</td> <td>placeholder区域日期显示格式</td> <td>string, function</td> <td><code>yyyy</code> <code>yyyy/mm</code> <code>yyyy-mm-dd</code> <code>yyyy年</code> <code>yyyy年mm月dd日</code>等</td> <td><code>yyyy/mm/dd</code></td> </tr> <tr> <td>placeholder</td> <td>日期选择提示词</td> <td>string</td> <td></td> <td><code>请选择日期</code></td> </tr> <tr> <td>disabled</td> <td>是否禁用</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>startYear</td> <td>起始年份</td> <td>string,number</td> <td></td> <td>this year</td> </tr> <tr> <td>endYear</td> <td>截止年份</td> <td>string,number</td> <td></td> <td></td> </tr> <tr> <td>offsetYear</td> <td>startYear的偏移量</td> <td>string,number</td> <td>负数、0、正数</td> <td><code>0</code></td> </tr> <tr> <td>yearsLength</td> <td>年份跨度</td> <td>string,number</td> <td></td> <td><code>10</code></td> </tr> <tr> <td>columnsOrder</td> <td>年月日顺序</td> <td>array</td> <td></td> <td><code>[&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]</code></td> </tr> <tr> <td>language</td> <td>语言(月份可显示英文等)</td> <td>string</td> <td><code>zh</code> <code>en</code> <code>id</code></td> <td><code>zh</code></td> </tr> <tr> <td>pickerTitle</td> <td>picker标题</td> <td>string</td> <td></td> <td>``</td> </tr> <tr> <td>pickerCancelBtnText</td> <td>picker取消按钮文案</td> <td>string</td> <td></td> <td><code>取消</code></td> </tr> <tr> <td>pickerConfirmBtnText</td> <td>picker确定按钮文案</td> <td>string</td> <td></td> <td><code>确定</code></td> </tr> <tr> <td>pickerFormatter</td> <td>可设置picker上年月日单位等</td> <td>function</td> <td>回调参数(type, val)</td> <td>``</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>onconfirm</td> <td>键盘收起事件</td> <td>（{year: &quot;&quot;, month: &quot;&quot;, date: &quot;&quot;, value: &quot;&quot;}） - 年，月，日，选择值</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>日期后面可以通过slot插入icon等</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="datepicker-example">\n    <Titlebar theme="b" @on-back="onBack">DatePicker</Titlebar>\n    <div class="fs-14">请选择以下信息：</div>\n    <div class="list">\n      <div class="item">\n        <div class="label">爸爸生日：</div>\n        <r-datepicker :value="config.value" :valueFormat="config.valueFormat" :textFormat="config.textFormat" :startYear="config.startYear" :endYear="config.endYear" :offsetYear="config.offsetYear" :yearsLength="config.yearsLength" :disabled="config.disabled" :language="config.language" :pickerFormatter="config.pickerFormatter" :pickerTitle="config.pickerTitle" :pickerCancelBtnText="config.pickerCancelBtnText" :pickerConfirmBtnText="config.pickerConfirmBtnText" :columnsOrder="config.columnsOrder" :placeholder="config.placeholder" @onconfirm="birthDate"></r-datepicker>\n      </div>\n    </div>\n\n    <div class="list">\n      <div class="item">\n        <div class="label">妈妈出生年份：</div>\n        <DatePicker v-bind="config1" @onconfirm="birthDate"></DatePicker>\n      </div>\n    </div>\n\n    <div class="list">\n      <div class="item">\n        <div class="label">哥哥出生日期：</div>\n        <DatePicker v-bind="config2" @onconfirm="birthDate"></DatePicker>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>export default{data:()=>({config:{value:"2022/10/22",placeholder:"请选择爸爸生日",valueFormat:"yyyy/mm/dd",textFormat:e=>`${e.year.text},${e.month.text.substr(0,4)},${e.day.text}`,startYear:"",endYear:"",offsetYear:"-1",yearsLength:"10",disabled:!1,language:"zh",pickerFormatter:function(e,t){return"year"==e?t+"年":"month"==e?t+"月":"day"==e?t+"日":void 0},pickerTitle:"hello",pickerCancelBtnText:"cancel",pickerConfirmBtnText:"confirm",columnsOrder:["year","month","day"]},config1:{valueFormat:"yyyy",textFormat:"yyyy年",columnsOrder:["year"]},config2:{value:"2022/10",valueFormat:"yyyy/mm",textFormat:"yyyy年mm月",columnsOrder:["year","month"]}}),methods:{birthDate(e){console.log(e)},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.datepicker-example{margin-top:20px;align-items:center;text-align:right}.r--datepicker{padding:10px;border:1px solid #efeff4}</style>\n</textarea> </div> </details> '},281:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="dialog-弹框">Dialog 弹框</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>模态对话框，在浮层中显示，引导用户进行相关操作，支持图片以及单文件组件等对话框。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Dialog } from &#39;rong-ui2&#39;;\n\nVue.use(Dialog)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <h3 id="函数调用">函数调用</h3> <p>挂载在vue.prototype上，vue实例中，直接使用this.$dialog({options})使用。</p> <pre><code class="language-js">\nvar dialog = this.$dialog({\n    propsData: {\n        //标题\n        showTitle: true,\n        title: &#39;标题&#39;,\n        titleStyleObj: {color:&#39;green&#39;},\n    },\n    methods: {\n        //取消按钮\n        onCancel: function(){\n            this.remove();\n        },\n        //确认按钮\n        onConfirm: function(){\n            alert(&#39;点击了确认按钮&#39;);\n        }\n    }\n});\n</code></pre> <p>弹窗中插入组件 (v1.1.2版本开始 message支持Render 写法)</p> <pre><code>let RepaymentTip = resolve =&gt; resolve(require(&quot;./repaymentTip.vue&quot;))\nthis.$dialog({\n    propsData: {\n        // 内容(文本或自定义组件)\n        message: (h) =&gt; h(RepaymentTip, {props: { name: &#39;zyx&#39; }})\n    },\n    methods: {\n        onConfirm: function () {\n            this.remove();\n        }\n    }\n});\n------ ./repaymentTip.vue ------\n&lt;template&gt;\n    &lt;div&gt;\n        hello {{name}}\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script type=&quot;text/javascript&quot;&gt;\n    export default {\n        props: [&#39;name&#39;]\n    }\n&lt;/script&gt;\n</code></pre> <p>or</p> <pre><code>this.$dialog({\n    propsData: {\n        message: (h) =&gt; h({\n          template: `&lt;div&gt; hello {{name}} &lt;/div&gt;`,\n          props: [&#39;name&#39;]\n        }, {props: { name: &#39;zyx&#39; }})\n    },\n    methods: {\n        onConfirm: function () {\n            this.remove();\n        }\n    }\n});\n</code></pre> <h3 id="template模板中插入dialog">template模板中插入Dialog</h3> <pre><code class="language-html">在template模板中使用时，可借助portal-vue插件，把Dialog显示在文档的任意位置。Dialog是否显示可通过v-model双向绑定，在回调函数中可通过第二个参数获得dialog实例关闭dialog\n// https://www.npmjs.com/package/portal-vue\n// https://portal-vue.linusb.org/api/portal.html\n&lt;template&gt;\n    &lt;div&gt;\n        &lt;portal to=&quot;modal&quot;&gt;\n            &lt;Dialog v-model=&quot;showDialog&quot; :showCancelBtn=&quot;false&quot; @on-confirm=&quot;onConfirm&quot; @on-cancel=&quot;onCancel&quot;&gt;\n                &lt;p&gt;test&lt;/p&gt;\n                &lt;div class=&quot;hasread&quot; @click=&quot;doRead&quot;&gt;我已经阅读 &lt;a href=&quot;javascript:;&quot;&gt;《用户知情书》&lt;/a&gt;&lt;/div&gt;\n            &lt;/Dialog&gt;\n        &lt;/portal&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\nonCancel (e, dialog) {\n  // this.showDialog = false\n  dialog.remove()\n},\n------ app.vue ------\n&lt;template&gt;\n  &lt;div id=&quot;app&quot;&gt;\n    &lt;router-view&gt;&lt;/router-view&gt;\n    &lt;portal-target name=&quot;modal&quot; multiple /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre> <h4 id="dialog-拓展">dialog 拓展</h4> <pre><code class="language-html">1，this.$dialog.tip({ message: &#39;hello&#39;, confirmBtnText: &#39;Ok&#39;, onConfirm: function () { this.remove() } })\n2，this.$dialog.confirm({ message: &#39;hello&#39;, confirmBtnText: &#39;confirm&#39;, cancelBtnText: &#39;cancel&#39;, onConfirm: function () { }, onCancel: function () { this.remove() } })\n3，this.$dialog.select({ menus: [{title: &#39;操作1&#39;}, {title: &#39;操作2&#39;}], cancelBtnText: &#39;取消&#39;, onCancel: function () { this.remove() }, onSelect: function (obj) { console.log(obj); this.remove() } })\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <p>dialog实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted... <br/> 弹窗大致由以下几部分元素：<code>弹窗标题</code>、<code>右上角close按钮</code>、<code>弹窗内容</code>、<code>弹窗cancel按钮</code>、<code>弹窗confirm按钮</code></p> <h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>showTitle</td> <td>是否显示标题</td> <td>boolean</td> <td><code>true</code> <code>false</code></td> <td><code>false</code></td> </tr> <tr> <td>title</td> <td>标题内容</td> <td>string</td> <td></td> <td><code>&#39;&#39;</code></td> </tr> <tr> <td>titleStyleObj</td> <td>标题样式</td> <td>Object</td> <td>—</td> <td>{}</td> </tr> <tr> <td>showCloseBtn</td> <td>是否显示关闭按钮</td> <td>boolean</td> <td>—</td> <td><code>false</code></td> </tr> <tr> <td>closeStyleObj</td> <td>标题样式</td> <td>Object</td> <td>—</td> <td>{}</td> </tr> <tr> <td>message</td> <td>弹框内容（普通文本或简单html，v1.1.2支持render函数）</td> <td>string, function</td> <td>—</td> <td>&#39;&#39;</td> </tr> <tr> <td>contentStyleObj</td> <td>内容样式</td> <td>object</td> <td>—</td> <td>{}</td> </tr> <tr> <td>showCancelBtn</td> <td>是否显示取消按钮</td> <td>boolean</td> <td>—</td> <td><code>true</code></td> </tr> <tr> <td>cancelBtnText</td> <td>取消按钮文案</td> <td>string</td> <td>—</td> <td><code>取消</code></td> </tr> <tr> <td>cancelBtnStyleObj</td> <td>取消按钮样式</td> <td>object</td> <td>—</td> <td><code>false</code></td> </tr> <tr> <td>showConfirmBtn</td> <td>是否显示确认按钮</td> <td>boolean</td> <td>—</td> <td><code>true</code></td> </tr> <tr> <td>confirmBtnText</td> <td>确认按钮文案</td> <td>string</td> <td>—</td> <td><code>确认</code></td> </tr> <tr> <td>confirmBtnStyleObj</td> <td>确认按钮样式</td> <td>object</td> <td>—</td> <td>{}</td> </tr> <tr> <td>CliperStyleObj</td> <td>遮罩样式</td> <td>object</td> <td>—</td> <td></td> </tr> <tr> <td>dlgStyleObj</td> <td>弹框样式</td> <td>object</td> <td>—</td> <td></td> </tr> <tr> <td>position</td> <td>弹框位置</td> <td>object</td> <td>{x: &#39;left/center/right&#39;,y: &#39;top/center/bottom&#39;}</td> <td>{x: &#39;center&#39;, y: &#39;center&#39;}</td> </tr> <tr> <td>removeDialogOnHashChange</td> <td>hash变化时是否移除dialog</td> <td>boolean</td> <td>—</td> <td><code>false</code></td> </tr> <tr> <td>className(v1.1.3)</td> <td>自定义样式</td> <td>string</td> <td>—</td> <td><code>&#39;&#39;</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-cancel</td> <td>取消操作</td> <td>—</td> </tr> <tr> <td>on-confirm</td> <td>确认操作</td> <td>—</td> </tr> <tr> <td>on-close</td> <td>关闭点击操作</td> <td>—</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>弹框内容</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="特别提示">特别提示</h3> <p>弹框里插入滚动区域时，需在滚动区域上添加&quot;scroll-area&quot;样式，如:</p> <pre><code class="language-html">&lt;div class=&quot;scroll-area&quot;&gt;&lt;/div&gt;\n</code></pre> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="r-demo dialog">\n    <Titlebar theme="b" @on-back="onBack">Dialog</Titlebar>\n    <div class="p-20">\n      <nav-item class="item" @on-click="showDialog1">常规</nav-item>\n      <nav-item class="item" @on-click="showDialog2">所有配置项</nav-item>\n      <nav-item class="item" @on-click="showDialog3">配置title</nav-item>\n      <nav-item class="item" @on-click="showDialog4">配置右上角关闭按钮</nav-item>\n      <nav-item class="item" @on-click="showDialog5">自定义内容(Render函数)</nav-item>\n      <nav-item class="item" @on-click="showDialog6">配置btn</nav-item>\n      <nav-item class="item" @on-click="showDialog7">宽度+位置变化</nav-item>\n      <nav-item class="item" @on-click="showDialog8">this.$dialog.tip</nav-item>\n      <nav-item class="item" @on-click="showDialog9">this.$dialog.confirm</nav-item>\n      <nav-item class="item" @on-click="showDialog10">this.$dialog.select</nav-item>\n      <nav-item class="item" @on-click="showDialog11">模板方式插入Dialog\n        <Dialog v-model="showDlg11" @on-cancel="onCancelDialog11" @on-mask="onMaskDialog11">\n          <nav-item style="text-align:center;padding:50px 0">hello</nav-item>\n        </Dialog>\n      </nav-item>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({showDlg11:!1}),methods:{showDialog1(){const o=this;this.$dialog({propsData:{message:"生如夏花之绚烂，死如秋叶之静美<br>泰戈尔《生如夏花》"},methods:{onCancel(){this.remove()},onConfirm(){o.$toast("这是点击确认按钮的自定义回调"),this.remove()}}})},showDialog2(){const o=this;this.$dialog({propsData:{showTitle:!0,title:"标题",titleStyleObj:{color:"green"},showCloseBtn:!0,showIcon:!0,icon:"beiju",message:"泰戈尔",contentStyleObj:{fontSize:"30px"},cancelBtnText:"取消",showCancelBtn:!0,cancelBtnStyleObj:{color:"white",background:"#4080e8"},confirmBtnText:"确认",showConfirmBtn:!0,confirmBtnStyleObj:{color:"white",background:"#4080e8"},CliperStyleObj:{background:"rgba(14, 14, 14, 0.5)"},dlgStyleObj:{background:"#fff",width:"15rem"},animate:!0,position:{x:"center",y:"center"}},methods:{onCancel:function(){this.remove()},onConfirm:function(){o.$toast("这是点击确认按钮的自定义回调"),this.remove()},onClose:function(){o.$toast("这是点击关闭按钮的自定义回调"),this.remove()},onMask:function(){this.remove()},onDlg(){this.resetPos()}}})},showDialog3(){this.$dialog({propsData:{showTitle:!0,title:"飞鸟集",message:"当你为错过太阳而哭泣的时候，你也要再错过群星了。",titleStyleObj:{color:"green"}},methods:{onCancel:function(){this.remove()},onConfirm:function(){this.remove()}}})},showDialog4(){this.$dialog({propsData:{showCloseBtn:!0,message:\'<div style="padding: 30px 0">我们把世界看错，反说它欺骗了我们。</div>\'},methods:{onCancel:function(){this.remove()},onConfirm:function(){this.remove()},onClose:function(){this.remove()}}})},showDialog5(){let o=this,e=o=>o(require("./repaymentTip.vue"));this.$dialog({propsData:{className:"custom-tip",message:o=>o(e,{props:{name:"zyx"}})},methods:{onCancel:function(){this.remove()},onConfirm:function(){o.$toast("这是点击确认按钮的自定义回调"),this.remove()}}})},showDialog6(){let o=this;this.$dialog({propsData:{message:"眼睛为她下着雨，心却为她打着伞，这就是爱情",contentStyleObj:{fontSize:"24px",color:"#4080e8"},cancelBtnText:"取消",showCancelBtn:!0,cancelBtnStyleObj:{color:"white",background:"#4080e8"},confirmBtnText:"已阅",showConfirmBtn:!0,confirmBtnStyleObj:{color:"white",background:"#4080e8"}},methods:{onCancel:function(){this.remove()},onConfirm:function(){o.$toast("这是点击确认按钮的自定义回调"),this.remove()}}})},showDialog7(){this.$dialog({propsData:{message:"Eyes are raining for her,heart is holding umbrella for her,this is love.",dlgStyleObj:{width:"100%",borderRadius:0},position:{x:"center",y:"bottom"}},methods:{onCancel:function(){this.remove()},onConfirm:function(){this.remove()}}})},showDialog8(){this.$dialog.tip({message:"hello",confirmBtnText:"Ok",onConfirm:function(){this.remove()}})},showDialog9(){this.$dialog.confirm({message:"hello",confirmBtnText:"confirm",cancelBtnText:"cancel",onConfirm:function(){},onCancel:function(){this.remove()}})},showDialog10(){this.$dialog.select({menus:[{title:"操作1"},{title:"操作2"}],cancelBtnText:"取消",onCancel:function(){this.remove()},onSelect:function(o){console.log(o),this.remove()},onMask:function(){this.remove()}})},showDialog11(){this.showDlg11=this.true},onCancelDialog11(o,e){e.remove()},onMaskDialog11(o,e){e.remove()},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less"></style>\n</textarea> </div> </details> '},5984:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="flexfixed-flex布局">FlexFixed (flex布局)</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>header和footer可以固定展示，不随页面滚动。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { FlexFixed } from &#39;rong-ui2&#39;;\n\nVue.use(FlexFixed)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;template&gt;\n  &lt;r-flexfixed @on-scroll=&quot;scroll&quot; @on-scroll-debounce=&quot;scrollDebounce&quot;&gt;\n    &lt;Titlebar slot=&quot;header&quot;&gt;标题&lt;/Titlebar&gt;\n    &lt;p&gt;content 1&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 2&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 3&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 4&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 5&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 6&lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content &lt;/p&gt;\n    &lt;p&gt;content 7&lt;/p&gt;\n    &lt;p&gt;&lt;/p&gt;\n    &lt;Button slot=&quot;footer&quot;&gt;下一步&lt;/Button&gt;\n  &lt;/r-flexfixed&gt;\n&lt;/template&gt;\n</code></pre> <pre><code class="language-js">  methods: {\n    scroll ({scrollTop, maxScrollTop, direction}) {\n      if( (maxScrollTop-scrollTop) &lt; 10 ){\n          console.log(&#39;滚动底啦~&#39;)\n      }\n    },\n    scrollDebounce ({scrollTop, maxScrollTop, direction}) {\n      if( (maxScrollTop-scrollTop) &lt; 10 ){\n          console.log(&#39;滚动底啦~&#39;)\n      }\n    }\n  }\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>hideFooterOnKeyboardShow</td> <td>键盘弹起时隐藏footer</td> <td>boolean</td> <td>-</td> <td><code>false</code></td> </tr> <tr> <td>useFixed(v1.2.3)</td> <td>header、footer采用position: fixed方式固定。滚动区域为整个屏幕</td> <td>boolean</td> <td>-</td> <td><code>false</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>滚动区域</td> </tr> <tr> <td>header</td> <td>头部</td> </tr> <tr> <td>footer</td> <td>底部</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-scroll</td> <td>滚动事件</td> <td>({scrollTop, maxScrollTop, direction}）</td> </tr> <tr> <td>on-scroll-debounce</td> <td>滚动事件</td> <td>({scrollTop, maxScrollTop, direction}）</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="特别提示">特别提示</h3> <p>嵌套overflow-x:scroll 或 overflow-y:scroll滚动元素时需在滚动元素上添加scroll-area样式</p> <pre><code class="language-html">如&lt;div style=&quot;overflow-x:scroll&quot; class=&quot;scroll-area&quot;&gt;&lt;/div&gt;\n</code></pre> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <r-flexfixed :hideFooterOnKeyboardShow="true" :useFixed="true" class="flexfixed-page" @on-scroll="onScroll" @on-scroll-debounce="onScrollDebounce">\n    <Titlebar :theme="theme" slot="header" @on-back="onBack">\n      FlexFixed\n      <div style="position:fixed;top:49px;right:0;text-align:left;padding:10px;font-size:14px;line-height:24px;background-color:rgba(0,0,0,.7)">\n        <p>on-scroll</p>\n        <p>scrollTop：{{scrollInfo.scrollTop}}</p>\n        <p>maxScrollTop：{{scrollInfo.maxScrollTop}}</p>\n        <p>direction：{{scrollInfo.direction}}</p>\n        <br>\n        <p>on-scroll-debounce</p>\n        <p>scrollTop：{{scrollInfo2.scrollTop}}</p>\n        <p>maxScrollTop：{{scrollInfo2.maxScrollTop}}</p>\n        <p>direction：{{scrollInfo2.direction}}</p>\n      </div>\n    </Titlebar>\n    <div>\n      <p>心存美好，则无可恼之事；心存善良，则无可恨之人；心若简单，世间纷扰皆成空</p>\n      <p v-for="(item, index) in list" :key="index">{{item}}</p>\n      <p><input type="text"></p>\n      <p>如果有缘、错过了还会重来，如果无缘、相遇了也会离开；聚有聚的理由、离有离的借口；人生没有如果、只有后果和结果！</p>\n    </div>\n    <Button slot="footer">提交</Button>\n  </r-flexfixed>\n</template>\n\n<script>export default{data(){let o=[];for(let l=0;l<100;l++)o.push(Math.random());return{list:o,scrollInfo:{},scrollInfo2:{},direction:"",theme:""}},methods:{onScroll(o){this.scrollInfo=o,this.theme=o.scrollTop>0?"e":""},onScrollDebounce(o){this.scrollInfo2=o},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.flexfixed-page .main-wrap{background:url("https://img1.baidu.com/it/u=2098938867,1688028566&fm=253&fmt=auto&app=138&f=JPEG?w=800&h=500") no-repeat;background-size:contain}</style>\n</textarea> </div> </details> '},3700:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="form-表单">Form 表单</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>具有数据收集、校验和提交功能的表单，包含复选框、单选框、输入框、下拉选择框等元素。</p> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-form&gt;\n  &lt;r-input type=&quot;text&quot; name=&quot;username&quot; maxlength=&quot;6&quot; v-model=&quot;userName&quot;&gt;&lt;/r-input&gt;\n  &lt;r-input v-bind=&quot;user&quot; v-model=&quot;user.value&quot;&gt;&lt;/r-input&gt;\n  &lt;r-select v-bind=&quot;email&quot; v-model=&quot;email.value&quot;&gt;&lt;/r-select&gt;\n&lt;/r-form&gt;\n</code></pre> <pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      userName: &#39;zyx&#39;,\n      user: {\n        &quot;title&quot;: &quot;本人姓名&quot;,\n        &quot;placeholder&quot;: &quot;&quot;,\n        &quot;name&quot;: &quot;bureau_user_name&quot;,\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;maxlength&quot;: 6\n      },\n      email: {\n        &quot;title&quot;: &quot;邮箱&quot;,\n        &quot;name&quot;: &quot;email&quot;,\n        &quot;type&quot;: &quot;email&quot;,\n        &quot;data&quot;: &quot;&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;emailList&quot;: [\n          &quot;qq.com&quot;,\n          &quot;sina.com&quot;,\n          &quot;sohu.com&quot;,\n          &quot;163.com&quot;,\n          &quot;foxmail.com&quot;,\n          &quot;gmail.com&quot;,\n          &quot;rong360.com&quot;,\n          &quot;edu.cn&quot;,\n          &quot;outlook.com&quot;,\n          &quot;vip.qq.com&quot;,\n          &quot;126.com&quot;\n        ],\n        &quot;rules&quot;: [{\n          &quot;required&quot;: true,\n          &quot;message&quot;: &quot;邮箱不能为空&quot;,\n          &quot;trigger&quot;: &quot;blur&quot;\n        },\n        {\n          &quot;type&quot;: &quot;email&quot;,\n          &quot;message&quot;: &quot;邮箱格式不正确&quot;,\n          &quot;trigger&quot;: &quot;blur&quot;\n        }]\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>属性</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>placeholder</td> <td>占位文本</td> <td>string</td> <td>-</td> <td>-</td> </tr> <tr> <td>label-width</td> <td>lebel标签宽度</td> <td>string</td> <td>如 <code>150px</code> <code>10rem</code>等</td> <td>-</td> </tr> <tr> <td>label-position</td> <td>label标签对齐方式</td> <td>string</td> <td><code>left</code> <code>right</code> <code>top</code></td> <td><code>left</code></td> </tr> <tr> <td>text-position</td> <td>input文字对齐方式</td> <td>string</td> <td><code>left</code> <code>center</code> <code>right</code></td> <td><code>left</code></td> </tr> <tr> <td>input-clear-style</td> <td>清空按钮样式</td> <td>object</td> <td>-</td> <td>{}</td> </tr> <tr> <td>select-arrow-style</td> <td>清空按钮样式</td> <td>object</td> <td>-</td> <td>{}</td> </tr> <tr> <td>select-cancel-btn-text</td> <td>select取消按钮文案</td> <td>string</td> <td>-</td> <td><code>取消</code></td> </tr> <tr> <td>select-confirm-btn-text</td> <td>select确定按钮文案</td> <td>string</td> <td>-</td> <td><code>确定</code></td> </tr> <tr> <td>date-picker-cancel-btn-text</td> <td>date-picker取消按钮文案</td> <td>string</td> <td>-</td> <td><code>取消</code></td> </tr> <tr> <td>date-picker-confirm-btn-text</td> <td>date-picker确定按钮文案</td> <td>string</td> <td>-</td> <td><code>确定</code></td> </tr> <tr> <td>show-message</td> <td>是否显示错误信息</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>mode</td> <td>title添加css效果</td> <td>string</td> <td><code>default</code> <code>to-top</code></td> <td><code>default</code></td> </tr> <tr> <td>error-at-placeholder</td> <td>error显示在placeholder位置</td> <td>boolean</td> <td>-</td> <td>false</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-iscompleted</td> <td>表单是否填完</td> <td>boolean</td> </tr> </tbody></table> <h3 id="methods">methods</h3> <table> <thead> <tr> <th>名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>validate</td> <td>校验所有表单项</td> <td>（result, message）</td> </tr> <tr> <td>validateOneByOne</td> <td>逐项校验表单项</td> <td>（result, message）</td> </tr> <tr> <td>getValue</td> <td>获取当前组件表单数据</td> <td>{name: name, value: value}</td> </tr> <tr> <td>getSerializeValue</td> <td>获取当前组件表单数据</td> <td>a=0&amp;b=1</td> </tr> <tr> <td>getObjectValue</td> <td>获取当前组件表单数据</td> <td>{a: 0, b: 1}</td> </tr> <tr> <td>resetFields</td> <td>重置表单</td> <td>-</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>内容</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="form特殊效果">Form特殊效果</h3> <ul> <li><a href="#/formdynamicregistration">Form表单动态注册效果</a></li> <li><a href="#/formcss">Form表单添加css效果</a></li></ul></div>  <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="form-example">\n    <Titlebar theme="b" @on-back="onBack">Form</Titlebar>\n    <r-form :select-arrow-style="{color: \'#666\', width: \'0.32rem\'}" :input-clear-style="{color: \'#C8C7CC\'}" select-cancel-btn-text="cancel" select-confirm-btn-text="confirm" @on-iscompleted="setIsCompleted" text-position="left" label-position="left" label-width="4.48rem" placeholder="请输入" select-placeholder="请选择" ref="form">\n      <r-input :title="user.title" :name="user.name" :maxlength="user.maxlength" :rules="user.rules" v-model="user.value"></r-input>\n      <r-input v-bind="age" v-model="age.value"></r-input>\n      <Input v-bind="amount" v-model="amount.value" @on-input="handleInputAmount">\n      <Input v-bind="phone" v-model="phone.value">\n      <Input v-bind="email" v-model="email.value">\n      <Input v-bind="IDCard" v-model="IDCard.value">\n      <Select :title="loanTerm.title" :name="loanTerm.name" :data="loanTerm.data" :rules="loanTerm.rules" v-model="loanTerm.value"></Select>\n      <Select2 v-bind="contacts" v-model="contacts.value"></Select2>\n      <Select2 v-bind="contacts2" v-model="contacts2.value"></Select2>\n      <Select3 v-bind="shebao" v-model="shebao.value" ref="select1"></Select3>\n      <SelectDate v-bind="birthday" v-model="birthday.value"></SelectDate>\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn" @click="doReset">重设</div>\n      </div>\n    </r-form>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({user:{type:"text",title:"本人姓名",name:"bureau_user_name",value:"",placeholder:"",readonly:0,maxlength:6,rules:[{required:!0,message:"姓名不能为空2",trigger:"blur"},{validator(e,t,a){if(t.length<3)return new Error("姓名最少三个字");a()},trigger:"blur"}]},age:{type:"number",title:"年龄",name:"age",value:"23",placeholder:"",fixed:0,unit:"",readonly:0,maxlength:3},amount:{type:"number",title:"申请金额",name:"application_amount",value:"10000.00",fixed:2,placeholder:"",unit:"",readonly:0,maxlength:8},phone:{type:"tel",title:"手机号码",name:"phone_number",value:"13122222222",unit:"",placeholder:"",readonly:0,maxlength:11},email:{type:"email",title:"邮箱",name:"email",value:"test@qq.com",readonly:0,placeholder:"",emailList:["qq.com","sina.com","sohu.com","163.com","foxmail.com","gmail.com","rong360.com","edu.cn","outlook.com","vip.qq.com","126.com"],rules:[{required:!0,message:"邮箱不能为空",trigger:"blur"},{type:"email",message:"邮箱格式不正确",trigger:"blur"}]},IDCard:{type:"IDCard",title:"本人身份证号码",name:"user_id",value:"110101199003079614",placeholder:"",readonly:0},shebao:{rely_policy_id:0,id:"635",category_id:"1",title:"本地公积金",var_name:"user_social_security",type:"2",verify_type:"0",textPosition:"right",data:[{value:"1",text:"有",rely:[]},{value:"2",text:"无",rely:[]}],unit:"",material_type:"101",info_property:"1",level:1,desc:"",value:"",readonly:0},loanTerm:{title:"贷款期限",name:"loan_term",value:"",data:[{text:"1个月",value:"1"},{text:"2个月",value:"2"},{text:"36个月",value:"36"},{text:"自己输入",value:"0",children:[{componentType:"Input",type:"number",title:"输入您的贷款期限",name:"m_term",value:"",unit:"个月",placeholder:"请输入您期望的贷款期限",onInput:(e,t)=>{e.target.value>12&&(t.setCurrentValue(12),t.validateState="error",t.validateMessage="贷款期限最长12个月，以为您变更为12个月")},rules:[{validator(e,t,a,l,r){let{component:o}=r;if(""===t)return new Error(o.title+"不能为空");a()},trigger:"blur"}]}]}],rules:[{required:!0,message:"贷款期限不能为空"},{validator(e,t,a,l,r){if(1==t)return new Error("目前暂不支持1个月的贷款，请选择贷款期限");a()}}]},contacts:{title:"联系人",name:"contacts",value:"",data:[{text:"父母",value:"1"},{text:"配偶",value:"2"},{text:"子女",value:"3"},{text:"兄弟姐妹",value:"4"}]},contacts2:{title:"联系人2",name:"contacts2",value:"",data:[{text:"父母",value:"1"},{text:"配偶",value:"2"},{text:"子女",value:"3"},{text:"兄弟姐妹",value:"4"},{text:"朋友",value:"5"},{text:"同学",value:"6"},{text:"老乡",value:"7"},{text:"战友",value:"9"},{text:"车友",value:"10"}]},birthday:{title:"现单位工作年限(年)",name:"birthday",value:"",valueFormat:"yyyy/mm/dd",textFormat:"yyyy年mm月dd日"},fields:[],isCompleted:!1}),mounted(){this.fields=this.$refs.form.fields},methods:{handleInputAmount(e,t){e.target.value>1e4&&(t.setCurrentValue(1e4),t.validateState="error",t.validateMessage="最大申请金额为10000元，已为你自动变更为10000元")},doSubmit(){this.$refs.form.validate(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.join("<br/>")},methods:{onConfirm(){this.remove()}}})}))},doSubmit2(){this.$refs.form.validateOneByOne(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t},methods:{onConfirm(){this.remove()}}})}))},setIsCompleted(e){this.isCompleted=e},doReset(){this.$refs.form.resetFields()},onEnter(e){console.log(e.target.value)},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.btn-wrap{display:flex;border-radius:4px;flex:1;margin:10px;padding:10px 0;text-align:center;background-color:#008b8b;color:#fff;font-size:12px}.result{font-size:14px;color:#333;padding:10px;background-color:#d3d3d3}</style>\n</textarea> </div> </details> '},7866:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="input-输入框">Input 输入框</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用户可以在文本框内输入文字、整数、浮点、邮箱、身份证、手机号等类型。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Input } from &#39;rong-ui2&#39;;\n\nVue.use(Input)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-input type=&quot;text&quot; name=&quot;username&quot; maxlength=&quot;6&quot; v-model=&quot;userName&quot;&gt;&lt;/r-input&gt;\n&lt;r-input v-bind=&quot;user&quot; v-model=&quot;user.value&quot;&gt;&lt;/r-input&gt;\n</code></pre> <pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      userName: &#39;zyx&#39;,\n      user: {\n        &quot;title&quot;: &quot;本人姓名&quot;,\n        &quot;placeholder&quot;: &quot;&quot;,\n        &quot;name&quot;: &quot;bureau_user_name&quot;,\n        &quot;type&quot;: &quot;text&quot;,\n        &quot;value&quot;: &quot;&quot;,\n        &quot;maxlength&quot;: 6\n      }\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">props</h3> <table> <thead> <tr> <th>属性</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>placeholder</td> <td>占位文本</td> <td>string</td> <td>-</td> <td>-</td> </tr> <tr> <td>label-width</td> <td>lebel标签宽度</td> <td>string</td> <td>如 <code>150px</code> <code>10rem</code>等</td> <td>-</td> </tr> <tr> <td>label-position</td> <td>label标签对齐方式</td> <td>string</td> <td><code>left</code> <code>right</code> <code>top</code></td> <td><code>left</code></td> </tr> <tr> <td>text-position</td> <td>input文字对齐方式</td> <td>string</td> <td><code>left</code> <code>center</code> <code>right</code></td> <td><code>left</code></td> </tr> <tr> <td>input-clear-style</td> <td>清空按钮样式</td> <td>object</td> <td>-</td> <td>{}</td> </tr> <tr> <td>show-message</td> <td>是否显示错误信息</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>required（v1.1.3）</td> <td>是否必填</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>className（v1.1.3）</td> <td>自定义class</td> <td>string</td> <td>-</td> <td>-</td> </tr> </tbody></table> <p><font color="red">特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>type</td> <td>表单类型</td> <td>string</td> <td><code>text</code> <code>number</code> <code>tel</code> <code>email</code> <code>IDCard</code></td> <td><code>text</code></td> </tr> <tr> <td>title</td> <td>表单label</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>name</td> <td>表单name</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>value</td> <td>默认值</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>placeholder</td> <td>输入框提示文案</td> <td>string</td> <td></td> <td>``</td> </tr> <tr> <td>maxlength</td> <td>输入框最大输入长度</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>fixed</td> <td>保留几位小数</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>disabled</td> <td>输入框是否禁用</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>readonly</td> <td>输入框是否只读</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>unit</td> <td>输入项单位</td> <td>string</td> <td></td> <td><code>&quot;&quot;</code></td> </tr> <tr> <td>rules</td> <td>类iview风格的校验规则</td> <td>array</td> <td></td> <td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td> </tr> <tr> <td>mode</td> <td>title添加css效果</td> <td>string</td> <td><code>default</code> <code>to-top</code></td> <td><code>default</code></td> </tr> <tr> <td>error-at-placeholder</td> <td>error显示在placeholder位置</td> <td>boolean</td> <td>-</td> <td>false</td> </tr> <tr> <td>required（v1.1.3）</td> <td>是否必填</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>className（v1.1.3）</td> <td>自定义class</td> <td>string</td> <td>-</td> <td>-</td> </tr> <tr> <td>emailList（v1.1.5）</td> <td>邮件后缀列表</td> <td>array</td> <td>-</td> <td>-</td> </tr> <tr> <td>clearable（v1.2.2）</td> <td>是否显示清空按钮</td> <td>Boolean</td> <td>true</td> <td>-</td> </tr> <tr> <td>onInput（v1.2.2）</td> <td>input回调</td> <td>function</td> <td>(e, component)</td> <td>-</td> </tr> <tr> <td>onBlur（v1.2.2）</td> <td>blur回调</td> <td>function</td> <td>(e, component)</td> <td>-</td> </tr> </tbody></table> <pre><code>特别说明，rules校验规则文档详见https://www.npmjs.com/package/async-validator\n</code></pre> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-input</td> <td>输入框输入事件</td> <td>event</td> </tr> <tr> <td>on-change</td> <td>输入变化</td> <td>event</td> </tr> <tr> <td>on-focus</td> <td>聚焦</td> <td>event</td> </tr> <tr> <td>on-blur</td> <td>失焦</td> <td>event</td> </tr> <tr> <td>on-enter</td> <td>回车键</td> <td>event</td> </tr> <tr> <td>on-clear</td> <td>清空输入时触发</td> <td>event</td> </tr> <tr> <td>on-keyup</td> <td>keyup</td> <td>event</td> </tr> <tr> <td>on-keydown</td> <td>keydown</td> <td>event</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="methods">methods</h3> <table> <thead> <tr> <th>名称</th> <th>说明</th> <th>参数</th> <th>返回值</th> </tr> </thead> <tbody><tr> <td>getValue</td> <td>获取当前组件表单数据</td> <td></td> <td>{name: name, value: value}</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>prepend</td> <td>前置内容</td> </tr> <tr> <td>append</td> <td>后置内容</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="input-example">\n    <Titlebar theme="b" @on-back="onBack">Input</Titlebar>\n\n    <r-input :title="user.title" :name="user.name" :type="user.type" :rules="user.rules" :showEdit="false" maxlength="6" v-model="user.value"></r-input>\n\n    <Input v-bind="age" v-model="age.value">\n\n    <Input v-bind="amount" v-model="amount.value" @on-input="handleInputAmount">\n\n    <Input v-bind="phone" v-model="phone.value">\n    <Input v-bind="OTP" v-model="OTP.value"><span slot="append" style="display:inline-block;border:1px solid #bebebe;font-size:.74667rem;padding:.1rem .3rem;border-radius:1rem">Get OTP code</span>\n\n    <Input v-bind="email" v-model="email.value">\n\n    <Input v-bind="IDCard" v-model="IDCard.value">\n\n    <div style="background:#d3d3d3">\n      <p></p>\n      <Input v-bind="user" label-position="right" label-width="150px" text-position="right" v-model="user.value">\n      <Input v-bind="age" label-position="right" label-width="150px" v-model="age.value">\n      <Input v-bind="amount" label-position="right" label-width="150px" v-model="amount.value">\n      <Input v-bind="phone" label-position="right" label-width="150px" v-model="phone.value">\n      <Input v-bind="email" label-position="right" label-width="150px" v-model="email.value">\n      <Input v-bind="IDCard" label-position="right" label-width="150px" v-model="IDCard.value">\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({user:{rely_policy_id:0,id:"277",category_id:"1",title:"本人姓名",placeholder:"",var_name:"bureau_user_name",type:"text",verify_type:"text",material_type:"100",info_property:"1",level:1,desc:"",value:"",readonly:0,disabled:!1,maxlength:6,autofocus:!1},age:{rely_policy_id:0,id:"6922",category_id:"1",title:"年龄",var_name:"age",type:"number",verify_type:"0",data:"",unit:"",material_type:"107",info_property:"1",level:1,desc:"",value:"",fixed:0,readonly:0,maxlength:3},amount:{rely_policy_id:0,id:"692",category_id:"1",title:"申请金额",var_name:"application_amount",type:"number",verify_type:"0",data:"",unit:"",material_type:"107",info_property:"1",level:1,desc:"",value:"1000",fixed:2,readonly:0,maxlength:8,prepend:"RP"},phone:{rely_policy_id:0,id:"6929",category_id:"1",title:"手机号码",var_name:"phone_number",type:"tel",verify_type:"0",data:"",unit:"",material_type:"107",info_property:"1",level:1,desc:"",value:"",readonly:0,maxlength:11,prepend:e=>e("span",{style:{color:"red"}},"+91")},OTP:{rely_policy_id:0,id:"277",category_id:"1",title:"验证码",placeholder:"",var_name:"otp_code",type:"text",verify_type:"text",data:"",unit:"",material_type:"100",info_property:"1",level:1,desc:"",value:"",readonly:0,maxlength:6},email:{rely_policy_id:0,id:"692999",category_id:"1",title:"邮箱",var_name:"email",type:"email",verify_type:"0",data:"",unit:"",material_type:"107",info_property:"1",level:1,desc:"",value:"",readonly:0,emailList:["qq.com","sina.com","sohu.com","163.com","foxmail.com","gmail.com","rong360.com","edu.cn","outlook.com","vip.qq.com","126.com"],rules:[{required:!0,message:"邮箱不能为空",trigger:"blur"},{type:"email",message:"邮箱格式不正确",trigger:"blur"}]},IDCard:{rely_policy_id:0,id:"372",category_id:"1",title:"本人身份证号码",var_name:"user_id",type:"IDCard",verify_type:"IDCard",data:"",unit:"",material_type:"100",info_property:"1",level:1,desc:"",value:"",readonly:0}}),mounted(){setTimeout((()=>{this.user.title="本人姓名2"}),1e3)},methods:{onBack(){this.$router.push("/")},handleInputAmount(e,t){e.target.value>1e4&&(t.setCurrentValue(1e4),t.validateState="error",t.validateMessage="最大申请金额为10000元，已为你自动变更为10000元")}}}<\/script>\n\n<style lang="less">.input-example{margin-top:30px;line-height:30px;background-color:#b0c4de}</style>\n</textarea> </div> </details> '},1359:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="loading-加载中">Loading 加载中</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>加载图标，用于表示加载中的过渡状态。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Loading } from &#39;rong-ui2&#39;;\n\nVue.use(Loading)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">// 默认\nvar loading = this.$loading();\n\nsetTimeout(function(){\n    loading.remove();\n}, 2000)\n</code></pre> </div> <div class="r-doc-card"> <pre><code class="language-html">// 倒计时\nvar loading = this.$loading({\n    propsData: {\n        text: &#39;3s&#39;,\n        textInside: true\n    }\n});\n\nvar count = 3;\n\nvar timer = setInterval(function(){\n    count--;\n    if(count == 0){\n        loading.remove();\n    }else{\n        loading.text = count + &#39;s&#39;;\n    }\n}, 1000)\n</code></pre> </div> <div class="r-doc-card"> <h4 id="自定义loading">自定义loading</h4> <pre><code class="language-js">import {Loading, Titlebar, Input} from &#39;rong-ui2&#39;\nLoading.config({\n  loading: require(&#39;./components/LoadingCattle.vue&#39;) // 项目中添加Loading组件\n})\nVue.use(Loading)\nVue.use(Titlebar)\nVue.use(Input)\n</code></pre> <p>or</p> <pre><code class="language-js">import rongUI2, {Loading} from &#39;rong-ui2&#39;\nLoading.config({\n  loading: require(&#39;./components/LoadingCattle.vue&#39;)\n})\nVue.use(rongUI2)\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <p>loading实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted...</p> <h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>text</td> <td>加载文案</td> <td>string</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>width</td> <td>loading区的长度（750px设计图下）</td> <td>number</td> <td></td> <td><code>100</code></td> </tr> <tr> <td>cwidth</td> <td>loading区圆圈的大小（750px设计图下）</td> <td>number</td> <td></td> <td><code>30</code></td> </tr> <tr> <td>textInside</td> <td>文案位置是否在圆圈内</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>color</td> <td>loading圆圈的颜色</td> <td>string</td> <td></td> <td><code>#4080e8</code></td> </tr> <tr> <td>textColor</td> <td>文案的颜色</td> <td>string</td> <td></td> <td><code>#ffffff</code></td> </tr> <tr> <td>textFontSize</td> <td>文案的字体大小（750px设计图下）</td> <td>number</td> <td></td> <td><code>28</code></td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="loading-example">\n    <Titlebar theme="b" @on-back="onBack">Loading</Titlebar>\n    <div class="p-20">\n      <nav-item class="item" @on-click="showLoading0">默认</nav-item>\n      <nav-item class="item" @on-click="showLoading1">添加文案</nav-item>\n      <nav-item class="item" @on-click="showLoading2">倒计时</nav-item>\n      <nav-item class="item" @on-click="showLoading3">改变大小、颜色、文字等</nav-item>\n      <nav-item class="item" @on-click="showLoading4">自定义loading</nav-item>\n    </div>\n  </div>\n</template>\n<script>export default{name:"loadingExample",methods:{showLoading0(){let o=this.$loading();setTimeout((function(){o.remove()}),2e3)},showLoading1(){let o=this.$loading({propsData:{text:"灰太狼快跑！"}});setTimeout((function(){o.remove()}),2e3)},showLoading2(){let o=this.$loading({propsData:{text:"3s",textInside:!0}}),e=3,t=setInterval((function(){e--,0==e?(o.remove(),clearInterval(t)):o.text=e+"s"}),1e3)},showLoading3(){let o=this.$loading({propsData:{text:"Hello World，disappear in 2s",width:140,cwidth:40,textFontSize:32,color:"#e0a711",textColor:"#e0a711"}});setTimeout((function(){o.remove()}),2e3)},showLoading4(){this.$dialog({propsData:{message:"\\n<div style=\\"width: 100%; overflow: scroll;\\" class=\\"scroll-area\\">\\n<pre>\\n  注册Loading组件之前添加Loading.config配置文件即可，如：\\n  import {Loading, Input, Titlebar} from \'rong-ui2\'\\n  Loading.config({\\n    loading: require(\'./components/LoadingCattle.vue\')\\n  })\\n  Vue.use(Loading)\\n</pre>\\n</div>\\n          ",showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},onBack(){this.$router.push("/")}}}<\/script>\n<style lang="less"></style>\n</textarea> </div> </details> '},2963:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="radio-单选框">Radio 单选框</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>在一组备选项中进行单选。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Radio } from &#39;rong-ui2&#39;;\n\nVue.use(Radio)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">单个radio，绑定到布尔值：\n&lt;r-radio v-model=&quot;single&quot;&gt;Radio&lt;/r-radio&gt;\n</code></pre> <pre><code class="language-html">多个radio，绑定到同一个字符串：\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;apple&quot;&gt;苹果&lt;/r-radio&gt;\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;pear&quot;&gt;梨&lt;/r-radio&gt;\n&lt;r-radio v-model=&quot;picked&quot; value=&quot;banana&quot;&gt;香蕉&lt;/r-radio&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>checkedValue</td> <td>可以使用 v-model 双向绑定数据</td> <td><code>boolean</code> <code>string</code></td> <td><code>true</code> <code>false</code> <code>&quot;&quot;</code></td> <td><code>true</code></td> </tr> <tr> <td>value</td> <td>radio的值</td> <td>string</td> <td></td> <td></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-change</td> <td>点击checkbox回调函数</td> <td>event</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>radio标题</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="checkbox-example">\n    <Titlebar theme="b" @on-back="onBack">Radio</Titlebar>\n    <div class="p-15">\n      <div class="fs-14">一，单个Radio，绑定到布尔值：</div>\n      <r-radio v-model="single">Radio</r-radio>\n      <div class="fs-14">{{single}}</div>\n\n      <br><br>\n      <div class="fs-14">二，多个Radio，绑定到同一个字符串：</div>\n      <r-radio v-model="picked" value="apple">苹果</r-radio>\n      <Radio v-model="picked" value="pear">梨</Radio>\n      <Radio v-model="picked" value="banana">香蕉</Radio>\n      <div class="fs-14">{{picked}}</div>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({single:!1,picked:"pear"}),methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less"></style>\n</textarea> </div> </details> '},2420:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="range-滑动范围">Range 滑动范围</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>注意这个滑动效果在手机模式下正常展示，可以复制链接在新窗口中打开测试。</p> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;Range v-model=&quot;config0.amount&quot; :min=&quot;config0.min&quot; :max=&quot;config0.max&quot; :step=&quot;config0.step&quot;&gt;\n  &lt;span slot=&quot;start&quot;&gt;{{config0.min}}&lt;/span&gt;\n  &lt;span slot=&quot;end&quot;&gt;{{config0.max}}&lt;/span&gt;\n&lt;/Range&gt;\n</code></pre> <pre><code class="language-js">...\ndata(){\n  return {\n    config0: {\n      amount: 20000,\n      min: 0,\n      max: 100000,\n      step: 5000\n    }\n}\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>value</td> <td>滑块的值</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>min</td> <td>最小值</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>max</td> <td>最大值</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>step</td> <td>步长</td> <td>number</td> <td></td> <td></td> </tr> <tr> <td>disabled</td> <td>是否禁用</td> <td>Boolean</td> <td></td> <td>false</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>name</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>start</td> <td>滑块左侧</td> </tr> <tr> <td>end</td> <td>滑块右侧</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="wrap">\n    <Titlebar theme="b" @on-back="onBack">Range</Titlebar>\n    <div class="exp">\n      <div class="tip">效果一</div>\n      {{config0.amount}}\n      <Range v-model="config0.amount" :min="config0.min" :max="config0.max" :step="config0.step">\n        <span slot="start">{{config0.min}}</span>\n        <span slot="end">{{config0.max}}</span>\n      </Range>\n\n      <br><br>\n\n      <div class="tip">效果二</div>\n      <div class="range-title">{{config1.amount}}</div>\n      <Range v-model="config1.amount" :min="config1.min" :max="config1.max" :step="config1.step">\n        <span slot="start" class="decrease" @click="decrease">-</span>\n        <span slot="end" class="increase" @click="increase">+</span>\n      </Range>\n      <div class="range-footer">\n        <span class="min">{{config1.min}}</span>\n        <span class="max">{{config1.max}}</span>\n      </div>\n    </div>\n  </div>\n</template>\n<script>export default{name:"RangeExp",data:()=>({config0:{amount:2e4,min:0,max:1e5,step:5e3},config1:{amount:8e3,min:5e3,max:13e3,step:3e3}}),methods:{decrease(){let t=this.config1.amount;t-=this.config1.step,t=Math.max(this.config1.min,t),this.config1.amount=t},increase(){let t=this.config1.amount;t+=this.config1.step,t=Math.min(this.config1.max,t),this.config1.amount=t},onBack(){this.$router.push("/")}}}<\/script>\n<style lang="less" scoped>#ta{color:#666;border:1px solid #e5e5e5}.tip{padding:.5rem .8rem;text-align:left;font-size:.8rem;color:#4080e8;background:#f5e7b9}.r-range{padding:0 1rem}.decrease,.increase{width:1rem;height:1rem;line-height:1rem;border-radius:50%;border:1px solid #ccc;text-align:center}.decrease{margin-right:1rem}.increase{margin-left:1rem}.range-footer{display:flex;justify-content:space-between}.max{padding-right:1rem}</style>\n</textarea> </div> </details> '},5506:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="selectdate-选择日期">SelectDate 选择日期</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>提供多个选项集合供用户选择，支持单列选择和多列级联。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { SelectDate } from &#39;rong-ui2&#39;;\n\nVue.use(SelectDate)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-selectdate :attrs=&quot;config&quot; v-model=&quot;config.value&quot;&gt;&lt;/r-selectdate&gt;\n</code></pre> <pre><code class="language-js">...\ndata(){\n    return {\n        config: {\n      title: &#39;爸爸生日&#39;,\n      name: &#39;birthday&#39;,\n      value: &#39;&#39;,\n      placeholder: &#39;请选择&#39;,\n            valueFormat: &#39;yyyy/mm/dd&#39;,\n            // textFormat: &#39;yyyy年mm月dd日&#39;,\n            textFormat (val) {\n                return `${val.year.text},${val.month.text.substr(0, 4)},${val.day.text}`\n            },\n            startYear: &#39;&#39;,\n            endYear: &#39;&#39;,\n            offsetYear: &#39;&#39;,\n            yearsLength: &#39;&#39;,\n            disabled: false,\n            language: &#39;en&#39;,\n            pickerFormatter: function (type, val) {\n                // if (type == &#39;year&#39;) {\n                //   return val + &#39;年&#39;\n                // } else if (type == &#39;month&#39;) {\n                //   return val + &#39;月&#39;\n                // } else if (type == &#39;day&#39;) {\n                //   return val + &#39;日&#39;\n                // }\n            },\n            pickerTitle: &#39;hello&#39;,\n            pickerCancelBtnText: &#39;cancel&#39;,\n            pickerConfirmBtnText: &#39;confirm&#39;,\n            columnsOrder: [&#39;year&#39;, &#39;month&#39;, &#39;day&#39;]\n      textPosition: &#39;right&#39;,\n      mode: &#39;&#39;\n    }\n    }\n},\nmethods: {\n    doConfirm(date){\n        console.log(date);\n    }\n}\n</code></pre> </div> <h3 id="attributes">Attributes</h3> <h3 id="selectdate基于datepicker组件开发，datepicker参数同样适合selectdate">SelectDate基于Datepicker组件开发，Datepicker参数同样适合SelectDate</h3> <p><font color="red">特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>同Datepicker ...</td> <td></td> <td></td> <td></td> <td></td> </tr> <tr> <td>title</td> <td>表单label</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>name</td> <td>表单name</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>value</td> <td>默认值</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>placeholder</td> <td>输入框提示文案</td> <td>string</td> <td></td> <td>``</td> </tr> <tr> <td>disabled</td> <td>输入框是否禁用</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>unit</td> <td>输入项单位</td> <td>string</td> <td></td> <td><code>&quot;&quot;</code></td> </tr> <tr> <td>rules</td> <td>类iview风格的校验规则</td> <td>array</td> <td></td> <td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td> </tr> <tr> <td>mode</td> <td>title添加css效果</td> <td>string</td> <td><code>default</code> <code>to-top</code></td> <td><code>default</code></td> </tr> </tbody></table> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-confirm</td> <td>键盘收起事件</td> <td>（{year: &quot;&quot;, month: &quot;&quot;, date: &quot;&quot;, value: &quot;&quot;}） - 年，月，日，选择值</td> </tr> </tbody></table> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>日期后面可以通过slot插入icon等</td> </tr> </tbody></table> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="selectdate-example">\n    <Titlebar theme="b" @on-back="onBack">SelectDate</Titlebar>\n\n    <p class="fs-14 mt-20">1，默认</p>\n    <r-selectdate :title="config.title" :name="config.name" :placeholder="config.placeholder" :valueFormat="config.valueFormat" :textFormat="config.textFormat" :startYear="config.startYear" :endYear="config.endYear" :yearsLength="config.yearsLength" :offsetYear="config.offsetYear" :disabled="config.disabled" :pickerTitle="config.pickerTitle" :pickerCancelBtnText="config.pickerCancelBtnText" :pickerConfirmBtnText="config.pickerConfirmBtnText" :textPosition="config.textPosition" :rules="config.rules" v-model="config.value"></r-selectdate>\n\n    <p class="fs-14 mt-20">2，只显示年份</p>\n    <SelectDate v-bind="config1" v-model="config1.value"></SelectDate>\n\n    <p class="fs-14 mt-20">3，显示年、月</p>\n    <SelectDate v-bind="config2" v-model="config2.value"></SelectDate>\n\n    <p class="fs-14 mt-20">4，添加css效果</p>\n    <SelectDate v-bind="config3" v-model="config3.value"></SelectDate>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({config:{title:"爸爸生日",name:"birthday",value:"",placeholder:"请选择",valueFormat:"yyyy/mm/dd",textFormat:"yyyy年mm月dd日",startYear:"",endYear:"",yearsLength:"10",offsetYear:"-1",disabled:!1,pickerTitle:"hello",pickerCancelBtnText:"cancel",pickerConfirmBtnText:"confirm",textPosition:"right",rules:[{validator:(e,t,r)=>{if(console.log(t),new Date(t).getFullYear()>=2024)return new Error("father is too old");r()},trigger:"select"}],mode:""},config1:{title:"妈妈出生年份",value:"",valueFormat:"yyyy",textFormat:"yyyy年",textPosition:"right",columnsOrder:["year"]},config2:{title:"哥哥出生日期",value:"1988/10",startYear:"1970",endYear:"2030",valueFormat:"yyyy/mm",textFormat:"yyyy年mm月",columnsOrder:["year","month"]},config3:{title:"妹妹出生日期",value:"",mode:"to-top"},fields:[]}),mounted(){this.fields=this.$children.filter((e=>"r-select-date"===e.$options.name))},methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less" scoped>.result{position:fixed;left:0;right:0;bottom:0;font-size:14px;color:#333;padding:10px;background-color:#d3d3d3;line-height:30px}</style>\n</textarea> </div> </details> '},8752:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="select-选择">Select 选择</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>提供多个选项集合供用户选择。</p> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-select name=&quot;education&quot; :data=&quot;education.data&quot; v-model=&quot;education0&quot;&gt;&lt;/r-select&gt;\n&lt;r-select v-bind=&quot;education&quot; v-model=&quot;education.value&quot;&gt;&lt;/r-select&gt;\n</code></pre> <pre><code class="language-js">&lt;script&gt;\nexport default {\n  data () {\n    return {\n      education0: &#39;&#39;,\n      education: {\n        title: &quot;教育程度&quot;,\n        name: &quot;education&quot;,\n        value: &#39;2&#39;,\n        lr: &quot;right&quot;,\n        placeholder: &quot;请选择贷款期限&quot;,\n        readonly: true,\n        data: [{\n          text: &quot;硕士及以上&quot;,\n          value: &quot;1&quot;\n        }, {\n          text: &quot;本科&quot;,\n          value: &#39;2&#39;\n\n        }, {\n          text: &quot;大专&quot;,\n          value: &quot;3&quot;\n        }, {\n          text: &quot;中专/高中及以下&quot;,\n          value: &quot;4&quot;\n        }]\n      }\n  }\n}\n&lt;/script&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="select-props">Select props</h3> <table> <thead> <tr> <th>属性</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>attrs</td> <td>表单配置项</td> <td>object</td> <td>-</td> <td>{}</td> </tr> <tr> <td>placeholder</td> <td>占位文本</td> <td>string</td> <td>-</td> <td>-</td> </tr> <tr> <td>label-width</td> <td>lebel标签宽度</td> <td>string</td> <td>如 <code>150px</code> <code>10rem</code>等</td> <td>-</td> </tr> <tr> <td>label-position</td> <td>label标签对齐方式</td> <td>string</td> <td><code>left</code> <code>right</code> <code>top</code></td> <td><code>left</code></td> </tr> <tr> <td>text-position</td> <td>select文字对齐方式</td> <td>string</td> <td><code>left</code> <code>center</code> <code>right</code></td> <td><code>left</code></td> </tr> <tr> <td>cancel-btn-text</td> <td>取消按钮文案</td> <td>string</td> <td></td> <td><code>取消</code></td> </tr> <tr> <td>confirm-btn-text</td> <td>确认按钮文案</td> <td>string</td> <td></td> <td><code>确认</code></td> </tr> <tr> <td>select-arrow-style</td> <td>清空按钮样式</td> <td>object</td> <td>-</td> <td>{}</td> </tr> <tr> <td>show-message</td> <td>是否显示错误信息</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>required（v1.1.3）</td> <td>是否必填</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>className（v1.1.3）</td> <td>自定义class</td> <td>string</td> <td>-</td> <td>-</td> </tr> </tbody></table> <p><font color="red">特别说明：v1.2.2之前版本下列参数通过attrs对象传入 :attrs=&quot;{}&quot;</font></p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>title</td> <td>表单label</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>name</td> <td>表单name</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>value</td> <td>默认值</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>placeholder</td> <td>输入框提示文案</td> <td>string</td> <td></td> <td>``</td> </tr> <tr> <td>disabled</td> <td>输入框是否禁用</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>readonly</td> <td>输入框是否只读</td> <td>boolean</td> <td></td> <td><code>false</code></td> </tr> <tr> <td>unit</td> <td>输入项单位</td> <td>string</td> <td></td> <td><code>&quot;&quot;</code></td> </tr> <tr> <td>cancelBtnText</td> <td>取消按钮文案</td> <td>string</td> <td></td> <td><code>取消</code></td> </tr> <tr> <td>confirmBtnText</td> <td>确定按钮文案</td> <td>string</td> <td></td> <td><code>取消</code></td> </tr> <tr> <td>rules</td> <td>类iview风格的校验规则</td> <td>array</td> <td></td> <td><code>[{required: true, message:&#39;xxx不能为空&#39;, trigger:&#39;blur&#39;}]</code></td> </tr> <tr> <td>mode</td> <td>title添加css效果</td> <td>string</td> <td><code>default</code> <code>to-top</code></td> <td><code>default</code></td> </tr> <tr> <td>error-at-placeholder</td> <td>error显示在placeholder位置</td> <td>boolean</td> <td>-</td> <td>false</td> </tr> <tr> <td>required（v1.1.3）</td> <td>是否必填</td> <td>boolean</td> <td>-</td> <td>true</td> </tr> <tr> <td>className（v1.1.3）</td> <td>自定义class</td> <td>string</td> <td>-</td> <td>-</td> </tr> </tbody></table> <pre><code>特别说明，rules校验规则文档详见https://www.npmjs.com/package/async-validator\n</code></pre> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-confirm</td> <td>确定按钮</td> <td>selectedOption</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="methods">methods</h3> <table> <thead> <tr> <th>名称</th> <th>说明</th> <th>参数</th> <th>返回值</th> </tr> </thead> <tbody><tr> <td>getValue</td> <td>获取当前组件表单数据</td> <td></td> <td>{name: name, value: value}</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>prepend</td> <td>前置内容</td> </tr> <tr> <td>append</td> <td>后置内容</td> </tr> <tr> <td>arrow-icon</td> <td>右侧箭头</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b" @on-back="onBack">Select</Titlebar>\n    <div class="list">\n      请选择以下信息：\n      <Form ref="form">\n        <r-select :title="config.title" :name="config.name" :data="config.data" v-model="config.value" ref="select1"></r-select>\n        <Select v-bind="config2" v-model="config2.value" cancel-btn-text="cancel" confirm-btn-text="confirm" ref="select2"></Select>\n        <Select v-bind="config3" v-model="config3.value" ref="select3"></Select>\n        <button @click="doChangeData">点击改变人群类别data</button>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取人群类别数据</Button>\n          <Button @on-click="getValue2">获取贷款期限数据</Button>\n          <Button @on-click="getValue3">获取教育程度数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </Form>\n    </div>\n  </div>\n\n</template>\n<script>export default{name:"SelectExp",data:()=>({config:{},config0:{title:"人群类别-before",name:"population_category0",value:"",cancelBtnText:"cancel",confirmBtnText:"confirm",data:[{text:"企业主",value:"office_lady",children:[{componentType:"Input",type:"number",title:"每月收入流水",unit:"万元",name:"waterflow",value:"",placeholder:"请输入每月收入流水"}]},{text:"医生",value:"doctor",children:[{type:"Select",title:"职位",name:"free_type",value:2,data:[{text:"院长",value:0},{text:"主任医师",value:1},{text:"副主任医师",value:2},{text:"住院医",value:3},{text:"医学生",value:4}]}]}]},config1:{title:"人群类别-after",name:"population_category1",value:"",data:[{text:"上班族",value:"office_lady",children:[{componentType:"Input",type:"text",title:"姓名(无需校验)",name:"username",value:"",placeholder:"请输入用户姓名",rules:[]},{componentType:"Input",type:"IDCard",title:"身份证号码",name:"idcard",value:"",placeholder:"请输入身份证号码"},{componentType:"Input",type:"tel",title:"手机号码",name:"mobile",value:"",placeholder:"请输入您的手机号码"}]},{text:"学生",value:"student",children:[{componentType:"Input",type:"number",title:"每月花费",name:"expense",value:"",unit:"元",placeholder:"请输入您每月生活费"},{type:"Select",title:"爱好",name:"interest",value:"maishu",data:[{text:"买书",value:"maishu",children:[{type:"Select",title:"书籍类型",name:"book_type",value:"xiaoshuo",data:[{text:"外语",value:"waiyu"},{text:"汉语",value:"hanyu"},{text:"小说",value:"xiaoshuo"}]},{componentType:"Input",type:"number",title:"买书花费",name:"buy_book_expense",value:"",unit:"元",placeholder:"请输入您每月买书费用"}]},{text:"娱乐",value:"娱乐"}]}]},{text:"自由职业者",value:"free",children:[{type:"Select",title:"自由职业者类型",name:"free_type",value:1,data:[{text:"微商",value:0},{text:"网络小说写手",value:1}]}]}]},config2:{title:"贷款期限",name:"loan_term",value:"2",placeholder:"请选择贷款期限",data:[{text:"1个月",value:"1"},{text:"2个月",value:"2"},{text:"36个月",value:"36"},{text:"自己输入",value:"0",children:[{componentType:"Input",type:"number",title:"输入您的贷款期限",name:"m_term",value:"",unit:"个月",placeholder:"请输入您期望的贷款期限",rules:[{validator(e,t,a,l,o){let{component:i}=o;return""===t?new Error(i.title+"不能为空"):t>12?(i.setCurrentValue(12),new Error("贷款期限最长12个月，以为您变更为12个月")):void a()},trigger:"blur"}]}]}],rules:[{validator(e,t,a,l,o){if(1==t)return new Error("目前暂不支持1个月的贷款，请选择贷款期限");a()},trigger:"blur"}]},config3:{title:"教育程度",name:"education",value:"2",lr:"right",placeholder:"请选择贷款期限",readonly:!0,data:[{text:"硕士及以上",value:"1"},{text:"本科",value:"2"},{text:"大专",value:"3"},{text:"中专/高中及以下",value:"4"}]}}),created(){this.config=this.config0},mounted(){setTimeout((()=>{}),2e3)},methods:{doChangeData(){"population_category0"==this.config.name?this.config=this.config1:this.config=this.config0},getValue1(){let e=this.$refs.select1.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue2(){let e=this.$refs.select2.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue3(){let e=this.$refs.select3.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue4(){this.$refs.form.validate(((e,t)=>{e?(console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.map((e=>e.replace("不能为空",""))).join("、")+"不能为空"},methods:{onConfirm(){this.remove()}}})}))},resetFields(){this.$refs.form.resetFields()},onBack(){this.$router.push("/")}}}<\/script>\n<style lang="less">.btn-wrap{display:flex;font-size:12px;padding-right:15px;margin-top:30px}:nth-child(2){margin-left:10px;margin-right:10px}</style>\n</textarea> </div> </details> '},5249:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="select2">Select2</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>下拉列表数据小于6条时固定展示，超过6条出滚动条。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Select2 } from &#39;rong-ui2&#39;;\n\nVue.use(Select2)\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">props</h3> <p><font color="red">Select2 props 同Select组件</font></p> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b" @on-back="onBack">Select2</Titlebar>\n    <div class="tips">下拉列表数据小于6条时固定展示，超过6条出滚动条</div>\n    <div class="list">\n      请选择以下信息：\n      <r-form ref="r-form" text-position="right">\n        <r-select2 :title="config.title" :name="config.name" :data="config.data" v-model="config.value" picker-title="标题" ref="select1"></r-select2>\n        <Select2 v-bind="config2" v-model="config2.value" cancel-btn-text="cancel" confirm-btn-text="confirm" ref="select2"></Select2>\n        <Select2 v-bind="config3" v-model="config3.value" ref="select3"></Select2>\n        <button @click="doChangeData">点击改变人群类别data</button>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取人群类别数据</Button>\n          <Button @on-click="getValue2">获取贷款期限数据</Button>\n          <Button @on-click="getValue3">获取教育程度数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </r-form>\n    </div>\n  </div>\n\n</template>\n<script>export default{name:"SelectExp",data:()=>({config:{},config0:{title:"人群类别-before",name:"population_category0",value:"",cancelBtnText:"cancel",confirmBtnText:"confirm",pickerTitle:"标题",data:[{text:"企业主",value:"office_lady",children:[{componentType:"Input",type:"number",title:"每月收入流水",unit:"万元",name:"waterflow",value:"",placeholder:"请输入每月收入流水"}]},{text:"医生",value:"doctor",children:[{type:"Select",title:"职位",name:"free_type",value:2,data:[{text:"院长",value:0},{text:"主任医师",value:1},{text:"副主任医师",value:2},{text:"住院医",value:3},{text:"医学生",value:4}]}]}]},config1:{title:"人群类别-after",name:"population_category1",value:"",data:[{text:"上班族",value:"office_lady",children:[{componentType:"Input",type:"text",title:"姓名(无需校验)",name:"username",value:"",placeholder:"请输入用户姓名",rules:[]},{componentType:"Input",type:"IDCard",title:"身份证号码",name:"idcard",value:"",placeholder:"请输入身份证号码"},{componentType:"Input",type:"tel",title:"手机号码",name:"mobile",value:"",placeholder:"请输入您的手机号码"}]},{text:"学生",value:"student",children:[{componentType:"Input",type:"number",title:"每月花费",name:"expense",value:"",unit:"元",placeholder:"请输入您每月生活费"},{type:"Select",title:"爱好",name:"interest",value:"maishu",data:[{text:"买书",value:"maishu",children:[{type:"Select",title:"书籍类型",name:"book_type",value:"xiaoshuo",data:[{text:"外语",value:"waiyu"},{text:"汉语",value:"hanyu"},{text:"小说",value:"xiaoshuo"}]},{componentType:"Input",type:"number",title:"买书花费",name:"buy_book_expense",value:"",unit:"元",placeholder:"请输入您每月买书费用"}]},{text:"娱乐",value:"娱乐"}]}]},{text:"自由职业者",value:"free",children:[{type:"Select",title:"自由职业者类型",name:"free_type",value:1,data:[{text:"微商",value:0},{text:"网络小说写手",value:1}]}]}]},config2:{title:"贷款期限",name:"loan_term",value:"",data:[{text:"1个月",value:"1"},{text:"2个月",value:"2"},{text:"3个月",value:"3"},{text:"4个月",value:"4"},{text:"5个月",value:"5"},{text:"6个月",value:"6"},{text:"7个月",value:"7"},{text:"8个月",value:"8"},{text:"9个月",value:"9"},{text:"36个月",value:"36"},{text:"自己输入",value:"0",children:[{componentType:"Input",type:"number",title:"输入您的贷款期限",name:"m_term",value:"",unit:"个月",placeholder:"请输入您期望的贷款期限",rules:[{validator(e,t,a,l,o){let{component:i}=o;return""===t?new Error(i.title+"不能为空"):t>12?(i.setCurrentValue(12),new Error("贷款期限最长12个月，以为您变更为12个月")):(a(),void a())},trigger:"blur"}]}]}],rules:[{required:!0,message:"贷款期限不能为空"},{validator(e,t,a,l,o){if(1==t)return new Error("目前暂不支持1个月的贷款，请选择贷款期限");a()},trigger:"blur"}]},config3:{title:"教育程度",name:"education",value:"2",lr:"right",placeholder:"请选择贷款期限",readonly:!0,data:[{text:"硕士及以上",value:"1"},{text:"本科",value:"2"},{text:"大专",value:"3"},{text:"中专/高中及以下",value:"4"}]}}),created(){this.config=this.config0},methods:{doChangeData(){"population_category0"==this.config.name?this.config=this.config1:this.config=this.config0},getValue1(){let e=this.$refs.select1.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue2(){let e=this.$refs.select2.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue3(){let e=this.$refs.select3.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue4(){this.$refs.form.validate(((e,t)=>{e?(console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.map((e=>e.replace("不能为空",""))).join("、")+"不能为空"},methods:{onConfirm(){this.remove()}}})}))},resetFields(){this.$refs.form.resetFields()},onBack(){this.$router.push("/")}}}<\/script>\n<style lang="less">.select-example{padding:15px;font-size:12px}.list{padding:15px 0 15px 15px}.btn-wrap{display:flex;font-size:12px;padding-right:15px;margin-top:30px}:nth-child(2){margin-left:10px;margin-right:10px}</style>\n</textarea> </div> </details> '},1527:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="select3">Select3</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用于性别，有无等。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Select3 } from &#39;rong-ui2&#39;;\n\nVue.use(Select3)\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">props</h3> <p><font color="red">Select3 props 同Select组件</font></p> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="select-example">\n    <Titlebar theme="b" @on-back="onBack">Select3</Titlebar>\n    <div class="tips">标题和选项在同一行展示， 用于性别选择等</div>\n    <div class="list">\n      请选择以下信息：\n      <Form ref="form" text-position="right">\n        <Select3 :title="config.title" :name="config.name" :data="config.data" v-model="config.value" ref="select1"></Select3>\n        <Select3 v-bind="config2" v-model="config2.value" ref="select2"></Select3>\n        <div class="btn-wrap">\n          <Button @on-click="getValue1">获取公积金数据</Button>\n          <Button @on-click="getValue2">获取社保数据</Button>\n        </div>\n\n        <div class="btn-wrap">\n          <Button @on-click="getValue4">借助Form组件获取所有数据</Button>\n        </div>\n        <div class="btn-wrap">\n          <Button @on-click="resetFields">重置</Button>\n        </div>\n      </Form>\n    </div>\n  </div>\n\n</template>\n<script>export default{name:"SelectExp",data:()=>({config:{rely_policy_id:0,id:"635",category_id:"1",title:"本地公积金",name:"user_social_security",type:"2",verify_type:"0",data:[{value:"1",text:"有",rely:[]},{value:"2",text:"无",rely:[]}],unit:"",material_type:"101",info_property:"1",level:1,desc:"",value:"",readonly:0},config2:{rely_policy_id:1,id:"636",category_id:"1",title:"本地社保",name:"shebao",type:"2",verify_type:"0",data:[{value:"1",text:"有",rely:[]},{value:"2",text:"无",rely:[]}],unit:"",material_type:"101",info_property:"1",level:1,desc:"",value:"",readonly:0}}),methods:{doChangeData(){"population_category0"==this.config.name?this.config=this.config1:this.config=this.config0},getValue1(){let e=this.$refs.select1.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue2(){let e=this.$refs.select2.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue3(){let e=this.$refs.select3.getValue();this.$dialog({propsData:{message:`<div style="word-break: break-all">${JSON.stringify(e)}</div>`,showCancelBtn:!1},methods:{onConfirm(){this.remove()}}})},getValue4(){this.$refs.form.validate(((e,t)=>{e?(console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.map((e=>e.replace("不能为空",""))).join("、")+"不能为空"},methods:{onConfirm(){this.remove()}}})}))},resetFields(){this.$refs.form.resetFields()},onBack(){this.$router.push("/")}}}<\/script>\n<style lang="less">.select-example{padding:15px;font-size:12px}.list{padding:15px 0 15px 15px}.btn-wrap{display:flex;font-size:12px;padding-right:15px;margin-top:30px}:nth-child(2){margin-left:10px;margin-right:10px}</style>\n</textarea> </div> </details> '},6560:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="steps">Steps</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置。</p> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;Steps :current=&quot;1&quot;&gt;\n  &lt;Step&gt;基本信息&lt;br&gt;utama&lt;/Step&gt;\n  &lt;Step&gt;个人信息&lt;br&gt;darurat&lt;/Step&gt;\n  &lt;Step&gt;联系人&lt;br&gt;wajah&lt;/Step&gt;\n  &lt;Step&gt;活体识别&lt;br&gt;wajah&lt;/Step&gt;\n&lt;/Steps&gt;\n</code></pre> </div> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>current</td> <td>当前步骤，从 0 开始计数</td> <td>Number</td> <td></td> <td><code>0</code></td> </tr> <tr> <td>progressLine</td> <td>当前进度条样式</td> <td>Object</td> <td></td> <td><code>{}</code></td> </tr> <tr> <td>notProgressLine</td> <td>未开始进度条样式</td> <td>Object</td> <td></td> <td><code>{}</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>icon</td> <td>自定义 icon</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="steps-example">\n    <Titlebar theme="b" @on-back="onBack">Steps</Titlebar>\n\n    <div class="fs-14 pt-30">1，默认</div>\n    <div class="box">\n      <Steps :current="current">\n        <Step>基本信息<br>utama</Step>\n        <Step>个人信息<br>darurat</Step>\n        <Step>联系人<br>wajah</Step>\n        <Step>活体识别<br>wajah</Step>\n      </Steps>\n    </div>\n\n    <div class="fs-14 pt-30">2，自定义icon和间隔线样式</div>\n    <div class="box">\n      <Steps :current="current" :progressLine="{backgroundColor:\'#F43838\'}" :notProgressLine="{backgroundColor:\'#f5f5f5\'}">\n        <Step>\n          <div class="icon" slot="icon"></div>基本信息<br>utama\n        </Step>\n        <Step>\n          <div class="icon gray" slot="icon"></div>个人信息<br>darurat\n        </Step>\n        <Step>\n          <div class="icon gray" slot="icon"></div>联系人<br>wajah\n        </Step>\n        <Step>\n          <div class="icon gray" slot="icon"></div>活体识别<br>wajah\n        </Step>\n      </Steps>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({current:1}),mounted(){},methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.steps-example{box-shadow:0 0 8px 0 rgba(0,0,0,.1);border-radius:8px;border-radius:8px;margin:20px 20px 0 20px;padding:15px 0}.icon{width:30px;height:30px;border-radius:50%;background-color:#00ced1}</style>\n</textarea> </div> </details> '},7301:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="swiper-轮播图">Swiper 轮播图</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用于循环播放一组图片或内容。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Swiper } from &#39;rong-ui2&#39;;\n\nVue.use(Swiper)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;Swiper&gt;\n  &lt;SwiperItem @on-click=&quot;onClickSwiperItem&quot;&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n  &lt;SwiperItem&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n  &lt;SwiperItem&gt;&lt;img src=&quot;https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg&quot; /&gt;&lt;/SwiperItem&gt;\n&lt;/Swiper&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>direction</td> <td>运动方向</td> <td>string</td> <td><code>scrollLeft</code> <code>scrollTop</code></td> <td><code>scrollLeft</code></td> </tr> <tr> <td>gap</td> <td>运动间隔时长</td> <td>number</td> <td></td> <td><code>2000</code></td> </tr> <tr> <td>autoPlay</td> <td>自动播放</td> <td>boolean</td> <td><code>true</code> <code>false</code></td> <td><code>true</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-page</td> <td>滚动到下一张时回调函数</td> <td>（current, total）</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>SwiperItem</td> </tr> <tr> <td>pagination</td> <td>页码指示器</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="swiperitem-props">SwiperItem Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>styleObj</td> <td>SwiperItem样式</td> <td>object</td> <td></td> <td><code>{}</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events-1">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-click</td> <td>点击SwiperItem回调函数</td> <td>event</td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>内容</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="Swiper-example">\n    <Titlebar theme="b" @on-back="onBack">Swiper</Titlebar>\n    <p class="fs-14 pt-30">1，默认</p>\n    <Swiper>\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg"/></SwiperItem>\n    </Swiper>\n\n    <p class="fs-14 pt-30">2，自定义页码</p>\n    <Swiper @on-page="onPage">\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg"/></SwiperItem>\n      <div slot="pagination" style="position:absolute;bottom:10px;right:30px;font-size:14px">{{curretPage}} / {{totalPage}}</div>\n    </Swiper>\n\n    <p class="fs-14 pt-30">3，自定义item样式</p>\n    <Swiper>\n      <SwiperItem :styleObj="{width: \'19rem\'}" @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem :styleObj="{width: \'19rem\'}"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem :styleObj="{width: \'19rem\'}"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg"/></SwiperItem>\n    </Swiper>\n\n    <p class="fs-14 pt-30">4，关闭自动播放</p>\n    <Swiper :auto-play="false">\n      <SwiperItem @on-click="onClickSwiperItem"><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/123209/30/16604/143626/5f9bb747Ea155ae71/aadf80788d17d8e0.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/154196/24/3833/121212/5f97d34cEa985896f/e20033d24c553704.jpg!q70.jpg.dpg"/></SwiperItem>\n      <SwiperItem><img src="https://m.360buyimg.com/mobilecms/s700x280_jfs/t1/146862/39/13822/78049/5fa7e418E6c76569b/068b19049e17de7b.jpg!q70.jpg.dpg"/></SwiperItem>\n    </Swiper>\n  </div>\n</template>\n\n<script>export default{data:()=>({curretPage:0,totalPage:0}),methods:{onClickSwiperItem(){console.log(9)},onPage(t,e){this.curretPage=t,this.totalPage=e},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.Swiper-example{padding-bottom:100px}</style>\n</textarea> </div> </details> '},6580:function(t,e,d){"use strict";d.r(e);e.default='<h2 id="switch开关">Switch开关</h2> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用于在打开和关闭状态之间进行切换。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Switch } from &#39;rong-ui2&#39;;\n\nVue.use(Switch)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-switch v-model=&quot;switchVal&quot;&gt;&lt;/r-switch&gt;\n</code></pre> </div> <h1 id="api">API</h1> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>value</td> <td>绑定的值，可使用 v-model 双向绑定</td> <td>Boolean</td> <td><code>true</code> <code>false</code></td> <td><code>false</code></td> </tr> <tr> <td>disabled</td> <td>禁用开关</td> <td>Boolean</td> <td><code>true</code> <code>false</code></td> <td><code>false</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-change</td> <td>开关变化时触发，返回当前的状态</td> <td><code>true</code> <code>false</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slots">Slots</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>open</td> <td>自定义显示打开时的内容</td> </tr> <tr> <td>close</td> <td>自定义显示关闭时的内容</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="switch-example">\n    <Titlebar theme="b" @on-back="onBack">Switch</Titlebar>\n\n    <div class="p-15">\n      <p class="fs-14">1，默认</p>\n      <r-switch v-model="switchVal"></r-switch>\n\n      <br><br>\n\n      <p class="fs-14">2，文字或图标</p>\n      <r-switch v-model="switchVal">\n        <span slot="open">开</span>\n        <span slot="close">关</span>\n      </r-switch>\n\n      <br><br>\n\n      <p class="fs-14">3，禁用</p>\n      <r-switch v-model="switchVal" :disabled="true"></r-switch>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({switchVal:!1}),methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less"></style>\n</textarea> </div> </details> '},8978:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="textscroll">TextScroll</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>跑马灯效果。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { TextScroll } from &#39;rong-ui2&#39;;\n\nVue.use(TextScroll)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;TextScroll :list=&quot;list&quot;&gt;&lt;/TextScroll&gt;\n</code></pre> <pre><code class="language-js">export default {\n  data () {\n    return {\n      list: [\n        &#39;让子弹飞一会儿，网络流行词，是2010年末上映的电影《让子弹飞》中的一句对白。&#39;\n      ]\n    }\n  }\n}\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>list</td> <td>文案列表</td> <td>Array</td> <td></td> <td><code>[]</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>prepend</td> <td>scrollbar前插槽</td> </tr> <tr> <td>append</td> <td>scrollbar后插槽</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="textscroll-example">\n    <Titlebar theme="b" @on-back="onBack">TextScroll</Titlebar>\n    <div class="fs-14">1, 默认</div>\n    <TextScroll :list="list"></TextScroll>\n    <br>\n    <r-textscroll :list="list"></r-textscroll>\n\n    <br><br>\n    <div class="fs-14">2, 插槽</div>\n    <TextScroll :list="list"><span slot="prepend" style="padding:0 10px"> Tips:</span></TextScroll>\n  </div>\n</template>\n\n<script>export default{data:()=>({list:["让子弹飞一会儿，网络流行词，是2010年末上映的电影《让子弹飞》中的一句对白。"]}),methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less"></style>\n</textarea> </div> </details> '},512:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="titlebar-标题">Titlebar 标题</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>为页面提供导航功能，常用于页面顶部。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Titlebar } from &#39;rong-ui2&#39;;\n\nVue.use(Titlebar)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-titlebar theme=&quot;d&quot; title=&quot;主题d&quot;&gt;\n    &lt;div slot=&quot;l&quot; @click=&quot;goHome&quot;&gt;首页&lt;/div&gt;\n    &lt;div slot=&quot;r&quot; @click=&quot;goCenter&quot;&gt;账户&lt;/div&gt;\n&lt;/r-titlebar&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>title</td> <td>标题文案</td> <td>string</td> <td></td> <td></td> </tr> <tr> <td>theme</td> <td>标题栏背景主题</td> <td>string</td> <td><code>a</code> <code>b</code> <code>c</code> <code>d</code> <code>e</code> <code>f</code></td> <td><code>a</code></td> </tr> <tr> <td>showBackto</td> <td>是否显示返回按钮</td> <td>Boolean</td> <td></td> <td><code>true</code></td> </tr> <tr> <td>backArrowStyle</td> <td>箭头自定义样式</td> <td>object</td> <td></td> <td><code>{}</code></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="events">Events</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>on-back</td> <td>点击返回按钮触发的操作</td> <td></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>l</td> <td>左侧内容区</td> </tr> <tr> <td>不具名slot</td> <td>中间内容区，默认显示标题</td> </tr> <tr> <td>r</td> <td>右侧内容区</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="titlebar-example pb-20">\n    <Titlebar theme="b" @on-back="onBack">Titlebar</Titlebar>\n\n    <div class="title">default</div>\n    <r-titlebar>标题</r-titlebar>\n\n    <div class="title">theme=b</div>\n    <Titlebar theme="b">标题</Titlebar>\n\n    <div class="title">theme=c</div>\n    <Titlebar theme="c">标题</Titlebar>\n\n    <div class="title">theme=d</div>\n    <Titlebar theme="d">标题</Titlebar>\n\n    <div class="title">theme=e</div>\n    <Titlebar theme="e">标题</Titlebar>\n\n    <div class="title">theme=f</div>\n    <Titlebar theme="f">标题</Titlebar>\n  </div>\n</template>\n\n<script>export default{methods:{onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.titlebar-example{margin-top:30px}</style>\n</textarea> </div> </details> '},2762:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="toast-提示">Toast 提示</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>在页面中间弹出黑色半透明提示，用于消息通知、加载提示、操作结果提示等场景。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Toast } from &#39;rong-ui2&#39;;\n\nVue.use(Toast)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-js">this.$toast({\n    propsData: {\n        message: &#39;芭芭拉小魔仙，变身!&#39;,\n        type: &#39;positive&#39;,\n        time: 5000\n    },\n    methods: {\n        callback(){\n            self.count++;\n        }\n    }\n});\n\nthis.$toast(&quot;芭芭拉小魔仙，变身&quot;);\n</code></pre> <p>or</p> <pre><code class="language-js">this.$toast.long(&quot;芭芭拉小魔仙，变身&quot;)\nthis.$toast.positive(&quot;芭芭拉小魔仙，变身&quot;)\nthis.$toast.negetive(&quot;芭芭拉小魔仙，变身&quot;)\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <p>toast实例方法通过<code>子类组件</code>覆盖基类组件的的方式实现，因此传入的对象是组件相关的一些属性：propsData、methods、computed、mounted...</p> <h4 id="propsdata属性传入的数据如下：">propsData属性传入的数据如下：</h4> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>可选值</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>wrapStyleObj</td> <td>样式</td> <td>object</td> <td>-</td> <td><code>{top: &#39;35%&#39;}</code></td> </tr> <tr> <td>message</td> <td>提示内容</td> <td>string</td> <td>-</td> <td>&quot;&quot;</td> </tr> <tr> <td>type</td> <td>icon类型</td> <td>string</td> <td><code>positive</code> <code>negetive</code> <code>long</code></td> <td><code>long</code></td> </tr> <tr> <td>time</td> <td>多少ms后toast消失</td> <td>number</td> <td>—</td> <td><code>2000</code></td> </tr> </tbody></table> <h3 id="events-methods属性下">Events (methods属性下)</h3> <table> <thead> <tr> <th>事件名称</th> <th>说明</th> <th>回调参数</th> </tr> </thead> <tbody><tr> <td>callback</td> <td>toast消失时回调函数</td> <td>—</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="toast-example">\n    <Titlebar theme="b" @on-back="onBack">Toast</Titlebar>\n    <div class="p-20">\n      <nav-item class="item" @on-click="defaultOnClick">默认 default</nav-item>\n      <nav-item class="item" @on-click="positiveOnClick">积极文案（type="positive"）</nav-item>\n      <nav-item class="item" @on-click="negetiveOnClick">消极文案（type="negetive"）</nav-item>\n      <nav-item class="item" @on-click="callbackOnClick">消失时回调</nav-item>\n    </div>\n  </div>\n</template>\n\n<script>export default{methods:{defaultOnClick(){this.$toast("长文本形式为文字超过十个时使用，宽度固定")},positiveOnClick(){this.$toast({propsData:{type:"positive",message:"积极文案不超过十个字"}})},negetiveOnClick(){this.$toast({propsData:{type:"negetive",message:"消极文案不超过十个字"}})},callbackOnClick(){this.$toast({propsData:{message:"消失时回调，出alert",callback:function(){alert(0)}}})},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less"></style>\n</textarea> </div> </details> '},3441:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="uploader-文件上传">Uploader 文件上传</h1> <div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>用于将本地的图片或文件上传至服务器。</p> </div> <div class="r-doc-card"> <h3 id="引入">引入</h3> <p>通过以下方式来全局注册组件</p> <pre><code class="language-js">import Vue from &#39;vue&#39;\nimport { Uploader } from &#39;rong-ui2&#39;;\n\nVue.use(Uploader)\n</code></pre> </div> <h2 id="基本用法">基本用法</h2> <div class="r-doc-card"> <pre><code class="language-html">&lt;r-uploader action=&quot;/test/fileUpload&quot;&gt;&lt;/r-uploader&gt;\n</code></pre> </div> <h2 id="api">API</h2> <div class="r-doc-card"> <h3 id="props">Props</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody><tr> <td>action</td> <td>上传的地址，必填</td> <td>String</td> <td></td> </tr> <tr> <td>headers</td> <td>设置上传的请求头部</td> <td>Object</td> <td><code>{}</code></td> </tr> <tr> <td>data</td> <td>上传时附带的额外参数</td> <td>Object</td> <td><code>{}</code></td> </tr> <tr> <td>name</td> <td>上传的文件字段名</td> <td>String</td> <td><code>file</code></td> </tr> <tr> <td>withCredentials</td> <td>支持发送 cookie 凭证信息</td> <td>Boolean</td> <td><code>false</code></td> </tr> <tr> <td>showUploadList</td> <td>是否显示已上传文件列表</td> <td>Boolean</td> <td><code>true</code></td> </tr> <tr> <td>disabled</td> <td>是否禁用</td> <td>Boolean</td> <td><code>false</code></td> </tr> <tr> <td>maxSize</td> <td>文件大小限制，单位 kb</td> <td>Number</td> <td></td> </tr> <tr> <td>accept</td> <td>接受上传的文件类型</td> <td>String</td> <td></td> </tr> <tr> <td>format</td> <td>支持的文件类型，与 accept 不同的是，format 是识别文件的后缀名，accept 为 input 标签原生的 accept 属性，会在选择文件时过滤，可以两者结合使用</td> <td>Array</td> <td>[]</td> </tr> <tr> <td>defaultFileList</td> <td>默认已上传的文件列表,如：[{url: &quot;<a href="http://www.xxx.com/xxx.jpg&quot;%7D%5D">http://www.xxx.com/xxx.jpg&quot;}]</a></td> <td>Array</td> <td></td> </tr> <tr> <td>onSuccess</td> <td>文件上传成功时的钩子，返回字段为 response, file, fileList</td> <td>Function</td> <td></td> </tr> <tr> <td>onError</td> <td>文件上传失败时的钩子，返回字段为 error, file, fileList</td> <td>Function</td> <td></td> </tr> <tr> <td>onRemove</td> <td>文件列表移除文件时的钩子，返回字段为 file, fileList</td> <td>Function</td> <td></td> </tr> </tbody></table> </div> <div class="r-doc-card"> <h3 id="slot">slot</h3> <table> <thead> <tr> <th>slot名称</th> <th>说明</th> </tr> </thead> <tbody><tr> <td>不具名slot</td> <td>触发上传组件的控件</td> </tr> </tbody></table> </div> <details> <summary>查看右侧demo源码</summary> <div class="r-doc-card"> <textarea rows="150" cols=""><template>\n  <div class="upload-example">\n    <Titlebar theme="b" @on-back="onBack">Uploader</Titlebar>\n    <br>\n    <r-uploader action="/test/fileUpload" :defaultFileList="fileList" :disabled="fileList.length >= 3" :onSuccess="handleSuccess" :onRemove="handleRemove"></r-uploader>\n  </div>\n</template>\n\n<script>export default{data:()=>({fileList:[{url:"https://t7.baidu.com/it/u=737555197,308540855&fm=193&f=GIF"}]}),methods:{onBack(){this.$router.push("/")},handleSuccess(t,e,i){this.fileList=i},handleRemove(t,e){this.fileList=e}}}<\/script>\n\n<style lang="less" scoped>.upload-example{background-color:#bebebe}</style>\n</textarea> </div> </details> '},978:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="form-css效果">Form css效果</h1> <p>通过设置mode=&quot;to-top&quot;参数，给title添加css动画效果</p> <blockquote> <p><font color="red">FormCss props 同Form组件</font></p> </blockquote> <details> <summary>查看右侧demo源码</summary> <textarea rows="150" cols=""><template>\n  <div class="form-example-css">\n    <Titlebar theme="b" @on-back="onBack">FormCss效果</Titlebar>\n    <Form :select-arrow-style="{color: \'#C8C7CC\'}" :input-clear-style="{color: \'#C8C7CC\'}" @on-iscompleted="setIsCompleted" text-position="left" placeholder="" mode="to-top" ref="form">\n      <Input :title="user.title" :name="user.name" :maxlength="user.maxlength" :rules="user.rules" v-model="user.value">\n      <Input v-bind="age" v-model="age.value">\n      <Input v-bind="amount" v-model="amount.value" @on-input="handleInputAmount">\n      <Input v-bind="phone" v-model="phone.value">\n      <Input v-bind="email" v-model="email.value">\n      <Input v-bind="IDCard" v-model="IDCard.value">\n      <Select v-bind="loanTerm" v-model="loanTerm.value"></Select>\n      <SelectDate :title="birthday.title" :name="birthday.name" v-model="birthday.value"></SelectDate>\n\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn" @click="doReset">重设</div>\n      </div>\n    </Form>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>export default{data:()=>({user:{type:"text",title:"本人姓名",name:"bureau_user_name",value:"zyx",placeholder:"",readonly:0,maxlength:6,rules:[{required:!0,message:"姓名不能为空",trigger:"blur"},{validator(e,t,a){if(t.length<3)return new Error("姓名最少三个字");a()},trigger:"blur"}]},age:{type:"number",title:"年龄",name:"age",value:"",placeholder:"",fixed:0,unit:"",readonly:0,maxlength:3},amount:{type:"number",title:"申请金额",name:"application_amount",value:"10000.00",fixed:2,placeholder:"",unit:"",readonly:0,maxlength:8,prepend:"RP"},phone:{type:"tel",title:"手机号码",name:"phone_number",value:"13122222222",unit:"",placeholder:"",readonly:0,maxlength:11},email:{type:"email",title:"邮箱",name:"email",value:"test@qq.com",readonly:0,placeholder:"",emailList:["qq.com","sina.com","sohu.com","163.com","foxmail.com","gmail.com","rong360.com","edu.cn","outlook.com","vip.qq.com","126.com"],rules:[{required:!0,message:"邮箱不能为空",trigger:"blur"},{type:"email",message:"邮箱格式不正确",trigger:"blur"}]},IDCard:{type:"IDCard",title:"本人身份证号码",name:"user_id",value:"110101199003079614",placeholder:"",readonly:0},loanTerm:{title:"贷款期限",name:"loan_term",value:"",placeholder:"",data:[{text:"1个月",value:"1"},{text:"2个月",value:"2"},{text:"36个月",value:"36"},{text:"自己输入",value:"0",children:[{componentType:"Input",type:"number",title:"输入您的贷款期限",name:"m_term",value:"",unit:"个月",placeholder:"请输入您期望的贷款期限",onInput:(e,t)=>{e.target.value>12&&(t.setCurrentValue(12),t.validateState="error",t.validateMessage="贷款期限最长12个月，以为您变更为12个月")},rules:[{validator(e,t,a,l,r){let{component:o}=r;if(""===t)return new Error(o.title+"不能为空");a()},trigger:"blur"}]}]}],rules:[{validator:(e,t,a)=>1==t?new Error("目前暂不支持1个月的贷款，请选择贷款期限"):""==t?new Error("贷款期限不能为空"):void a(),trigger:"blur"}]},birthday:{title:"妹妹出生日期",name:"birthday",value:"",valueFormat:"yyyy/mm/dd",textFormat:"yyyy年mm月dd日"},fields:[],isCompleted:!1}),mounted(){this.fields=this.$refs.form.fields},methods:{handleInputAmount(e,t){e.target.value>1e4&&(t.setCurrentValue(1e4),t.validateState="error",t.validateMessage="最大申请金额为10000元，已为你自动变更为10000元")},doSubmit(){this.$refs.form.validate(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.join("<br/>")},methods:{onConfirm(){this.remove()}}})}))},doSubmit2(){this.$refs.form.validateOneByOne(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t},methods:{onConfirm(){this.remove()}}})}))},setIsCompleted(e){this.isCompleted=e},doReset(){this.$refs.form.resetFields()},onEnter(e){console.log(e.target.value)},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.btn-wrap{display:flex;border-radius:4px;flex:1;margin:10px;padding:10px 0;text-align:center;background-color:#008b8b;color:#fff;font-size:12px}</style>\n</textarea> </details> '},6080:function(t,e,d){"use strict";d.r(e);e.default='<h1 id="formdynamicregistration-动态注册">FormDynamicRegistration 动态注册</h1> <p>表单展示项目不固定，展示项由后端接口返回决定。</p> <blockquote> <p><font color="red">FormDynamicRegistration props 同Form组件</font></p> </blockquote> <details> <summary>查看右侧demo源码</summary> <textarea rows="150" cols=""><template>\n  <div class="form-reg-example">\n    <Titlebar theme="b" @on-back="onBack">Form 动态注册</Titlebar>\n    <Form :select-arrow-style="{color: \'#C8C7CC\'}" :input-clear-style="{color: \'#C8C7CC\'}" @on-iscompleted="setIsCompleted" text-position="right" placeholder="请输入" ref="form">\n      <components v-for="item in viewData.firstLevel" v-model="item.value" v-bind="item" :is="item.componentType" :key="item.id" ref="cpList"/>\n      <div class="btn-wrap">\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validate</p>\n        </div>\n        <div :class="[\'btn\', isCompleted ? \'\' : \'disabled\']" @click="doSubmit2">\n          <p>提交({{ isCompleted ? "填写完毕" : "未填完" }})</p>\n          <p>validateOneByOne</p>\n        </div>\n        <div class="btn" @click="doReset">重设</div>\n      </div>\n    </Form>\n    <div class="result">\n      <p v-for="(field, index) in fields" :key="index">{{field.conf ? `${field.conf.title}: ${field.conf.value}` : \'\'}}</p>\n    </div>\n  </div>\n</template>\n\n<script>import _ from"lodash";let basicInfo={status:1,data:{basic:[{rely_policy_id:0,id:"123277",category_id:"1",title:"本人姓名",placeholder:"",var_name:"user_name",type:"text",verify_type:"text",data:"",unit:"",material_type:"100",info_property:"1",level:1,desc:"",value:"",readonly:0,maxlength:800,rules:[{required:!0,message:"姓名不能为空",trigger:"blur"}]},{rely_policy_id:0,id:"323472",category_id:"1",title:"本人身份证号码",var_name:"user_id",type:"5",verify_type:"50",data:"",unit:"",material_type:"100",info_property:"1",level:1,desc:"",value:"110101199003079614",readonly:0},{rely_policy_id:0,id:"832336",category_id:"2",title:"GPS信息",var_name:"gps_location",type:"5",verify_type:"0",data:"",unit:"",material_type:"0",info_property:"0",level:1,desc:"",readonly:0},{rely_policy_id:0,id:"612321392",category_id:"1",title:"申请金额",var_name:"application_amount",type:"9",verify_type:"0",data:"",unit:"",material_type:"107",info_property:"1",level:1,desc:"",value:"10000.00",fixed:2,readonly:0,maxlength:8,onInput:(e,t)=>{e.target.value>1e4&&(t.setCurrentValue(1e4),t.validateState="error",t.validateMessage="最大申请金额为10000元，已为你自动变更为10000元")}},{rely_policy_id:0,id:"84821212",category_id:"1",title:"贷款申请期限",var_name:"apply_term",type:"2",verify_type:"0",data:[{value:90,desc:"3个月",rely:[]},{value:180,desc:"6个月",rely:[]},{value:360,desc:"12个月",rely:[]},{value:540,desc:"18个月",rely:[]},{value:720,desc:"24个月",rely:[]}],unit:"",material_type:"107",info_property:"0",level:1,desc:"",value:"",readonly:0},{rely_policy_id:0,id:"163",category_id:"1",title:"可接受最高月还款额度（元）",var_name:"max_repayment",type:"9",verify_type:"0",data:"",unit:"元/月",material_type:"100",info_property:"0",level:1,desc:"",value:"2000",readonly:0,maxlength:8},{rely_policy_id:0,id:"45256233",category_id:"112",title:"教育程度",var_name:"user_education",type:"2",verify_type:"0",data:[{value:"1",desc:"硕士及以上",rely:[]},{value:"2",desc:"本科",rely:[]},{value:"3",desc:"大专",rely:[]},{value:"4",desc:"中专/高中及以下",rely:[]}],unit:"",material_type:"100",info_property:"1",level:1,desc:"",value:"2",readonly:0},{rely_policy_id:0,id:"6351222",category_id:"1",title:"现单位是否缴纳社保",var_name:"social_security",type:"2",verify_type:"0",data:[{value:"1",desc:"缴纳本地社保",rely:[]},{value:"2",desc:"未缴纳社保",rely:[]}],unit:"",material_type:"101",info_property:"1",level:1,desc:"",value:"2",readonly:0},{rely_policy_id:0,id:"26",category_id:"1",title:"车辆情况",var_name:"auto_type",type:"2",verify_type:"0",data:[{value:"1",desc:"无车",rely:[]},{value:"2",desc:"本人名下有车，无贷款",rely:[]},{value:"3",desc:"本人名下有车，有按揭贷款",rely:[]},{value:"4",desc:"本人名下有车，但已被抵押",rely:[]},{value:"5",desc:"其他（请备注）",rely:[]}],unit:"",material_type:"103",info_property:"0",level:1,desc:"",value:"1",readonly:0},{rely_policy_id:0,id:"26489",category_id:"1",title:"职业类别",var_name:"op_type",type:"2",verify_type:"0",data:[{value:"1",desc:"企业主",rely:["20996","28905"]},{value:"2",desc:"个体工商户",rely:["20996","28905"]},{value:"4",desc:"上班人群",rely:["5998","5256"]},{value:"5",desc:"学生",rely:[]},{value:"10",desc:"无固定职业",rely:["832"]}],unit:"",material_type:"101",info_property:"0",level:1,desc:"",value:"4",readonly:0},{rely_policy_id:"26489",id:"5998",category_id:"1",title:"月工资收入（元）",var_name:"user_income_by_card",type:"9",verify_type:"0",data:"",unit:"元",material_type:"101",info_property:"1",level:2,desc:"",value:"7000",readonly:0,onInput:(e,t)=>{e.target.value>6e4&&(t.setCurrentValue(6e4),t.validateState="error",t.validateMessage="月工资最多为60000元，已为你自动变更为60000元")}},{rely_policy_id:"26489",id:"5256",category_id:"1",title:"现单位工作年限",var_name:"work_period",type:"2",verify_type:"0",data:[{value:"1",desc:"0-5个月",rely:[]},{value:"2",desc:"6-12个月",rely:[]},{value:"3",desc:"1-3年",rely:[]},{value:"4",desc:"3-7年",rely:[]},{value:"5",desc:"7年以上",rely:[]}],unit:"个月",material_type:"101",info_property:"1",level:2,desc:"",value:"1",readonly:0},{rely_policy_id:"26489",id:"20996",category_id:"1",title:"经营流水（对公流水）",var_name:"corporate_flow",type:"9",verify_type:"0",data:"",unit:"",material_type:"102",info_property:"0",level:2,desc:"",readonly:0},{rely_policy_id:"26489",id:"28905",category_id:"1",title:"经营年限",var_name:"operating_year",type:"2",verify_type:"0",data:[{value:"1",desc:"0-3个月",rely:[]},{value:"2",desc:"3-6个月",rely:[]},{value:"3",desc:"7-12个月",rely:[]},{value:"4",desc:"1-2年",rely:[]},{value:"5",desc:"3-4年",rely:[]},{value:"6",desc:"5年以上",rely:[]}],unit:"",material_type:"102",info_property:"1",level:2,desc:"",readonly:0},{rely_policy_id:"26489",id:"832",category_id:"1",title:"月平均收入",var_name:"monthly_average_income",type:"9",verify_type:"0",unit:"",material_type:"101",info_property:"0",level:2,desc:"",value:"8000",readonly:0}],loan_amount_min:"3000",loan_amount_max:"100000",is_pop:1,pop_str:"xxxx"}};function componentfactory(e){let t={componentType:"Input",verifyType:"text"};switch(e){case"3":case"4":case"9":t={componentType:"Input",verifyType:"number"};break;case"email":t={componentType:"Input",verifyType:"email"};break;case"50":t={componentType:"Input",verifyType:"IDCard"};break;case"select":case"2":case"1":t={componentType:"Select",verifyType:""}}return t}export default{data(){let e=basicInfo.data.basic,t={},a=[];return _.each(e,(r=>{let l=0==r.verify_type?r.type:r.verify_type;r.componentType=componentfactory(l).componentType,r.type=componentfactory(l).verifyType,123277==r.id&&r.rules.push({validator(e,t,a){if(t.length<3)return new Error("姓名最少三个字");a()},trigger:"blur"}),612321392==r.id&&(r.rules=[{required:!0,message:"***申请金额不能为空***",trigger:"blur"}],r.rules.push({validator(e,t,a){if(0==t)return new Error("申请金额不能为零！");a()},trigger:"blur"})),832336==r.id&&(r.componentType="Input",r.type="hidden",r.rules=[],window.navigator.geolocation?window.navigator.geolocation.getCurrentPosition&&window.navigator.geolocation.getCurrentPosition((function(e){r.value=e.coords.longitude+","+e.coords.latitude}),(function(){}),{enableHighAccuracy:!0,timeout:45e3}):(_.remove(e,{id:"836"}),r.value="无法获取gps",console.log("Your browser does not natively support geolocation."))),t[r.id]=r,1==r.level&&a.push(r),r.name=r.id,r.var_name=""})),_.each(e,(e=>{"Select"==e.componentType&&e.data.forEach((e=>{e.text=e.desc,e.rely&&e.rely.length&&(e.children=e.rely.map((e=>t[e])))}))})),{viewData:{basic:e,firstLevel:a},fields:[],isCompleted:!1}},mounted(){this.fields=this.$refs.form.fields},methods:{doSubmit(){this.$refs.form.validate(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t.join("<br/>")},methods:{onConfirm(){this.remove()}}})}))},doSubmit2(){this.$refs.form.validateOneByOne(((e,t)=>{e?(this.$dialog({propsData:{message:this.$refs.form.getValue().map((e=>`<p class="ta-l fs-14"><span class="fw-b">${e.title}:</span>${e.value}</p>`)).join("")},methods:{onConfirm(){this.remove()}}}),console.log("getValue",this.$refs.form.getValue()),console.log("getSerializeValue",this.$refs.form.getSerializeValue()),console.log("getObjectValue",this.$refs.form.getObjectValue())):this.$dialog({propsData:{message:t},methods:{onConfirm(){this.remove()}}})}))},setIsCompleted(e){this.isCompleted=e},doReset(){this.$refs.form.resetFields()},onEnter(e){console.log(e.target.value)},onBack(){this.$router.push("/")}}}<\/script>\n\n<style lang="less">.btn-wrap{display:flex;border-radius:4px;flex:1;margin:10px;padding:10px 0;text-align:center;background-color:#008b8b;color:#fff;font-size:12px}</style>\n</textarea> </details> '},8829:function(t,e,d){"use strict";d.r(e);e.default='<div class="r-doc-card"> <h3 id="介绍">介绍</h3> <p>rong-ui2 是融360风格的移动端组件库。使用 Vue 语言来编写，帮助研发人员提升开发效率，改善开发体验。</p> </div> <div class="r-doc-card"> <h3 id="特性">特性</h3> <ul> <li>20+ 个高质量组件，覆盖移动端主流场景</li> <li>提供丰富的中英文文档和组件示例</li> <li>支持按需引入和 Tree Shaking</li> </ul> </div> '},7825:function(t,e,d){"use strict";d.r(e);e.default='<div class="r-doc-card"> <h3 id="安装">安装</h3> <pre><code class="language-bash">npm install rong-ui2 --save\n</code></pre> </div> <div class="r-doc-card"> <h3 id="npm-使用示例">NPM 使用示例</h3> <h4 id="按需引用">按需引用</h4> <pre><code class="language-js">npm install babel-plugin-import --save-dev\n\n// .babelrc\n{\n  &quot;plugins&quot;: [[&quot;import&quot;, {\n    &quot;libraryName&quot;: &quot;rong-ui2&quot;,\n    &quot;libraryDirectory&quot;: &quot;es&quot;,\n    &quot;style&quot;: &quot;css&quot;\n  }]]\n}\n\n\n然后这样按需引入组件，就可以减小体积了：\nimport {Titlebar, Button} from &#39;rong-ui2&#39;;\nVue.use(Titlebar)\nVue.use(Button)\n</code></pre> <details> <summary>v1.2.3之前按需加载配置方式</summary> <pre>\n  // .babelrc\n  {\n    "plugins": [["import", {\n      "libraryName": "rong-ui2",\n      "libraryDirectory": "src/components"\n    }]]\n  }\n\n<p>  注意：项目需要安装less文件：\n  npm install less less-loader --save-dev （低版本可以用less@^2.7.2 less-loader@^4.0.3）</p>\n<p>  webpack.base.conf.js\n  {\n    test: /.js$/,\n    loader: &#39;babel-loader&#39;,\n    include: [resolve(&#39;node_modules/rong-ui/components&#39;)],\n    exclude: [resolve(&#39;node_modules/rong-ui/components/rong-ui.js&#39;)]\n  }\n  </p></pre><p></p> </details> <h4 id="导入全部组件">导入全部组件</h4> <pre><code class="language-js">import RongUi2 from &#39;rong-ui2&#39;;\nimport &#39;rong-ui2/lib/rong-ui2.css&#39; // 配置babel-plugin-import插件时，无需再单独加载这个样式\nVue.use(RongUi2)\n</code></pre> <details> <summary>v1.2.3之前导入全部组件</summary> <pre>\n  import RongUi2 from \'rong-ui2\';\n  import \'rong-ui2/dist/styles/rong-ui.css\'\n  Vue.use(RongUi2)\n  </pre> </details> </div> <div class="r-doc-card"> <h3 id="cdn-安装使用示例">CDN 安装使用示例</h3> <pre><code class="language-js">rong-ui2/lib/ 文件夹下含有所有组件的单独打包，可单独引用某个组件，如：\nlib/button/index.js\nlib/button/style/index.css\n\n...\n\n引入全部组件\nlib/rong-ui2.js\nlib/rong-ui2.css\n</code></pre> <details> <summary>v1.2.3之前cdn引入方式</summary> <pre>\n  https://cdn.jsdelivr.net/npm/rong-ui2/dist/js/rong-ui.js\n  https://cdn.jsdelivr.net/npm/rong-ui2/dist/styles/rong-ui.css\n  注意：v1.2.3之前版本不支持cdn方式按需引入\n  </pre> </details> </div> <div class="r-doc-card"> <h3 id="使用">使用</h3> <p>Dialog提示框、Toast弹框、Loading加载中、Keyboard虚拟数字键盘 均以挂载到Vue.prototype，引入后，直接使用$dialog(options),$toast(options),$loading(options),$keyboard(options)使用</p> <p>其他组件未挂载到Vue.prototype上，组件名均已&#39;r-组件小写&#39;</p> <p>template中格式如下：</p> <pre><code class="language-html">&lt;r-titlebar&gt;&lt;/r-titlebar&gt;\n&lt;r-button&gt;&lt;/r-button&gt;\n&lt;r-flexfixed&gt;&lt;/r-flexfixed&gt;\n&lt;r-scrollarea&gt;&lt;/r-scrollarea&gt;\n\n...\n\n旧版使用PascalCase，后续可能会不兼容\n&lt;Titlebar theme=&quot;a&quot; title=&quot;Title标题&quot;&gt;&lt;/Titlebar&gt;\n</code></pre> </div> '},107:function(t,e,d){"use strict";d.r(e)},9129:function(t,e,d){"use strict";d.r(e)},8675:function(t,e,d){"use strict";d.r(e),d.d(e,{__esModule:function(){return o.X},default:function(){return r}});var o=d(4293),a=o.Z,r=(0,d(1900).Z)(a,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"r-doc"},[t._m(0),t._v(" "),o("div",{staticClass:"r-doc-nav"},t._l(t.nav,(function(e,d){return o("div",{key:d,staticClass:"r-doc-nav__group"},[o("div",{staticClass:"r-doc-nav__title"},[t._v(t._s(e.title))]),t._v(" "),t._l(e.children,(function(e){return o("div",{directives:[{name:"show",rawName:"v-show",value:e.show,expression:"item.show"}],key:e.name,staticClass:"r-doc-nav__item"},[o("router-link",{attrs:{to:{name:e.name},title:e.desc}},[t._v(t._s(e.name)+" "),o("span",[t._v(t._s(e.title))])])],1)}))],2)})),0),t._v(" "),o("div",{staticClass:"r-doc-container"},[o("router-view")],1),t._v(" "),o("div",{staticClass:"r-doc-simulator"},[o("div",{staticClass:"phone-status-bar"},[o("img",{attrs:{src:d(6342)}}),t._v(" "),o("input",{attrs:{type:"text"},domProps:{value:t.pageUrl}})]),t._v(" "),o("iframe",{attrs:{src:t.pageUrl,frameborder:"0",marginwidth:"0",marginheight:"0"}})])])}),[function(){var t=this,e=t.$createElement,d=t._self._c||e;return d("div",{staticClass:"r-doc-header"},[d("div",{staticClass:"r-doc-header__logo"},[d("span",{staticClass:"r-doc-header__title"},[t._v("Rong-ui2")]),t._v(" "),d("span",{staticClass:"r-doc-header__subtitle"},[t._v("(适用于 Vue2)")])])])}],!1,null,null,null).exports},1539:function(t,e,d){var o={"./action-sheet/README.md":389,"./button/README.md":82,"./checkbox/README.md":8499,"./date-picker/README.md":681,"./dialog/README.md":281,"./flex-fixed/README.md":5984,"./form/README.md":3700,"./input/README.md":7866,"./loading/README.md":1359,"./radio/README.md":2963,"./range/README.md":2420,"./select-date/README.md":5506,"./select/README.md":8752,"./select2/README.md":5249,"./select3/README.md":1527,"./steps/README.md":6560,"./swiper/README.md":7301,"./switch/README.md":6580,"./text-scroll/README.md":8978,"./titlebar/README.md":512,"./toast/README.md":2762,"./uploader/README.md":3441};function a(t){var e=r(t);return d(e)}function r(t){if(!d.o(o,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return o[t]}a.keys=function(){return Object.keys(o)},a.resolve=r,t.exports=a,a.id=1539},1243:function(t,e,d){var o={"./form-css/README.md":978,"./form-dynamic-registration/README.md":6080,"./introduce/README.md":8829,"./quick-start/README.md":7825};function a(t){var e=r(t);return d(e)}function r(t){if(!d.o(o,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return o[t]}a.keys=function(){return Object.keys(o)},a.resolve=r,t.exports=a,a.id=1243},6342:function(t,e,d){"use strict";t.exports=d.p+"img/phtitle..png?t=74a7ddf"},9455:function(t){"use strict";t.exports=JSON.parse('{"docs":{"name":"指南","children":[{"name":"intro","title":"介绍","show":true},{"name":"start","title":"快速上手","show":true}]},"nav":[{"name":"Guide","title":"开发指南","children":[{"name":"Introduce","title":"介绍","type":"src","show":true,"author":"zyx"},{"name":"QuickStart","title":"快速上手","type":"src","show":true,"author":"zyx"}]},{"name":"feedback","title":"操作反馈","children":[{"name":"Dialog","type":"component","title":"对话框","show":true,"author":"zyx"},{"name":"Loading","type":"component","title":"加载中","show":true,"author":"zyx"},{"name":"Toast","type":"component","title":"提示","show":true,"author":"zyx"},{"name":"ActionSheet","title":"动作面板","type":"component","show":true,"author":"zyx"}]},{"name":"layout","title":"布局组件","children":[{"name":"FlexFixed","title":"固定","type":"component","show":true,"desc":"简便地创建header和footer布局","author":"zyx"}]},{"name":"nav","title":"导航组件","children":[{"name":"Titlebar","title":"导航栏","type":"component","desc":"头部导航","show":true,"author":"zyx"}]},{"name":"Base","title":"基础组件","children":[{"name":"Button","title":"按钮","type":"component","show":true,"author":"zyx"}]},{"name":"dentry","title":"数据录入","children":[{"name":"Input","title":"输入框","type":"component","desc":"输入框组件","show":true,"author":"zyx"},{"name":"Select","title":"选择器","type":"component","desc":"提供多个选项集合供用户选择","show":true,"author":"zyx"},{"name":"Select2","title":"选择器","type":"component","desc":"提供多个选项集合供用户选择","show":true,"author":"zyx"},{"name":"Select3","title":"选择器","type":"component","desc":"性别、是否等选择","show":true,"author":"zyx"},{"name":"SelectDate","title":"日期选择器","type":"component","desc":"日期选择","show":true,"author":"zyx"},{"name":"Checkbox","title":"复选按钮","type":"component","desc":"复选按钮","show":true,"author":"zyx"},{"name":"Radio","type":"component","title":"单选按钮","desc":"单选按钮","show":true,"author":"zyx"},{"name":"DatePicker","type":"component","title":"日期选择器","desc":"提供多个选型集合供用户选择,支持单列选择和多列级联,通常与弹出层配合使用","show":true,"author":"zyx"},{"name":"Uploader","title":"上传","type":"component","desc":"上传文件、图片","show":true,"author":"zyx"},{"name":"Switch","title":"开关","type":"component","desc":"滑动开关","show":true,"author":"zyx"},{"name":"Form","title":"表单","type":"component","desc":"表单","show":true,"author":"richard1015"},{"name":"FormDynamicRegistration","title":"表单动态注册","type":"src","desc":"form表单项不固定","show":false,"author":"zyx"},{"name":"FormCss","title":"表单Css效果","type":"src","desc":"给title添加动画效果","show":false,"author":"zyx"}]},{"name":"display","title":"展示组件","children":[{"name":"TextScroll","type":"component","title":"文字滚动","desc":"跑马灯效果","show":true,"author":"zyx"},{"name":"Swiper","type":"component","title":"轮播","desc":"轮播组件","show":true,"author":"zyx"},{"name":"Steps","type":"component","title":"步骤条","desc":"用于展示操作流程的各个环节，让用户了解当前的操作在整体流程中的位置","show":true,"author":"zyx"},{"name":"Range","type":"component","title":"滑动选择","desc":"在范围区间内选择","show":true,"author":"zyx"}]}]}')}},function(t){t.O(0,[736],(function(){return e=3140,t(t.s=e);var e}));t.O()}]);